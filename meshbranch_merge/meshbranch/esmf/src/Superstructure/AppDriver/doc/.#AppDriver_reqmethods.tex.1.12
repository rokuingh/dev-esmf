% $Id: AppDriver_reqmethods.tex,v 1.12 2009/01/21 21:38:02 cdeluca Exp $
%
% Earth System Modeling Framework
% Copyright 2002-2009, University Corporation for Atmospheric Research, 
% Massachusetts Institute of Technology, Geophysical Fluid Dynamics 
% Laboratory, University of Michigan, National Centers for Environmental 
% Prediction, Los Alamos National Laboratory, Argonne National Laboratory, 
% NASA Goddard Space Flight Center.
% Licensed under the University of Illinois-NCSA License.

\subsubsection{User-Code SetServices Method}

Many programs call some library routines.  The library
documentation must explain what the routine name is, what arguments 
are required and what are optional, and what the code does.  

In contrast, all ESMF components must be written to {\it be called}
by another part of the program; in effect, an ESMF component takes the 
place of a library.  The interface is prescribed by the framework,
and the component writer must provide specific subroutines which 
have standard argument lists and perform specific operations.
For technical reasons {\em none} of the arguments in user-provided subroutines
must be declared as {\em optional}.

One of the required interfaces a component must provide is 
the set services method.  This subroutine must have an
externally accessible name (be a public symbol), take a component
as the first argument, and an integer return code as the second. 
Both arguments are required and must {\em not} be declared as 
{\tt optional}. If an intent is specified in the interface it must be 
{\tt intent(inout)} for the first and {\tt intent(out)} for the 
second argument. The subroutine name is not predefined, it is set by the
component writer, but must be provided as part of the component 
documentation.

The required function of the set services subroutine is to
register the rest of the required functions in the component,
currently initialize, run, and finalize methods.  The ESMF method \\
{\tt ESMF\_<Grid/Cpl>CompSetEntryPoint()} should be called for
each of the required subroutines.  

The names of the initialize, run, and finalize user-code 
subroutines do not need to be public; in fact it is far better 
for them to be private to lower the chances of public symbol clashes 
between different components.

Within the set services routine, the user can also register a 
private data block by calling the 
{\tt ESMF\_<Grid|Cpl>CompSetInternalState} method.

Note that a component does not call its own set services routine;
the AppDriver or parent component code which is creating a component 
will first call {\tt ESMF\_<Grid/Cpl>CompCreate()} to create an "empty" 
component, and then must call the component-specific set services routine 
to associate ESMF-standard methods to user-code methods, and to create
the VM in which this component will run. After set 
services has been called, the framework
now will be able to call the component's initialize, run, and finalize 
routines as required.  

\subsubsection{User-Code Initialize, Run, and Finalize Methods}

User-code initialize, run, and finalize routines must be provided for
each component.  See Sections \ref{sec:GridSetServ} and \ref{sec:CplSetServ}
for the prescribed interfaces and examples of how to set these up.
The provided user-code must abide {\em exactly} to the prescribed interfaces.
{\em None} of the arguments must be declared as {\em optional}.



