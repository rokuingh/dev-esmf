{"tickets": [{
  "status": "closed",
  "reported_by_id": "5123f7a234309d566cb6aaf5",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "dneckels",
  "description": "Port to Linux",
  "labels": [
    "Time Manager"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "Port to Linux",
  "discussion_thread": {
    "_id": "f8d7e13b",
    "posts": [
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "dneckels",
        "timestamp": "2001-12-13 23:29:30",
        "slug": "5249",
        "subject": "#1 Port to Linux"
      },
      {
        "text": "- **labels**: 380772 --> Time Manager\n- **milestone**: 166460 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-16 22:14:05",
        "slug": "8c53",
        "subject": "#1 Port to Linux"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2006-10-16 22:14:05",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30062718463761fbde07",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f8d7e13b/",
  "ticket_num": 1,
  "custom_fields": {
    "_priority": "9"
  },
  "created_date": "2001-12-13 23:29:16"
},{
  "status": "closed",
  "reported_by_id": "5123f7a234309d566cb6aaf5",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "dneckels",
  "description": "Port to Compaq",
  "labels": [
    "Time Manager"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "Port to Compaq",
  "discussion_thread": {
    "_id": "c2884bdc",
    "posts": [
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "dneckels",
        "timestamp": "2001-12-13 23:30:59",
        "slug": "c38f",
        "subject": "#2 Port to Compaq"
      },
      {
        "text": "- **labels**: 380772 --> Time Manager\n- **milestone**: 166460 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-16 22:14:23",
        "slug": "4503",
        "subject": "#2 Port to Compaq"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2006-10-16 22:14:23",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30062718463761fbde19",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c2884bdc/",
  "ticket_num": 2,
  "custom_fields": {
    "_priority": "9"
  },
  "created_date": "2001-12-13 23:30:41"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Eric Kuzek From NCAR\r\n\r\nHey Guys\r\n\r\nIn my prototype version of CAM I created copies\r\nof the data for the export state rather than using\r\npointers. In the future we will want to use pointers,\r\nbut there are a few missing features in ESMF that I need\r\nbefore I can do that. I'm pretty sure some of these were\r\nresolved, but I'll list the issues that I remember anyway.\r\n\r\n1.\\) Uneven halo regions\r\n\r\nThe FV dycore supports halo regions that are uneven\r\nin each direction. For example I allocate arrays\r\nthat look like this...\r\n\r\nq3  \\(plon, beglat-ng\\_d:endlat+ng\\_d, beglev:endlev, ppcnst\\)\r\nu3s \\(plon, beglat-ng\\_d:endlat+ng\\_s, beglev:endlev\\)\r\n\r\nWhere ng\\_d and ng\\_s are the size of the halos and are\r\nnot equal. In order to have ESMF point to these arrays\r\nI need to be able to tell ESMF how big the halos are on\r\neach side.\r\n\r\n",
  "labels": [
    "Array - Old"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:ARY_HAL: Uneven Halo Region Desired (4)",
  "discussion_thread": {
    "_id": "7186ab16",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=621718\n\nThis is not critical for the upcoming milestones \\(as we can\r\nuse a copy instead of using the actual data pointers\\). But,\r\nthis does have some performance ramifications, and in the\r\nlongterm we will need this functionality and need this\r\nfunctionality in the interface.",
        "attachments": [],
        "author": "ekluz",
        "timestamp": "2004-08-05 19:41:46",
        "slug": "373e",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **assigned_to**: jwolfe --> cdeluca",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-02-03 22:06:44",
        "slug": "05bf",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 17:47:50",
        "slug": "23e5",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:42:36",
        "slug": "8a25",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **priority**: 1 --> 5\n- **summary**: Uneven Halo Region Desired --> LONG: Uneven Halo Region Desired",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:20:52",
        "slug": "b3ce",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **assigned_to**: cdeluca --> theurich\n- **milestone**: 284120 --> \n- **labels**: 588641 --> Array - Old",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 05:28:07",
        "slug": "b2ab",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 05:29:06",
        "slug": "b6ca",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **priority**: 5 --> 4",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 15:05:17",
        "slug": "759f",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **summary**: LONG: Uneven Halo Region Desired --> LONG: Uneven Halo Region Desired (4)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-24 22:07:27",
        "slug": "2e69",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **priority**: 4 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-27 17:11:23",
        "slug": "6bae",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **summary**: LONG: Uneven Halo Region Desired (4) --> LONG:ARRAY: Uneven Halo Region Desired (4)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-03 18:44:53",
        "slug": "8989",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **summary**: LONG:ARRAY: Uneven Halo Region Desired (4) --> LONG:ARY_HAL: Uneven Halo Region Desired (4)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-04 00:04:05",
        "slug": "344c",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:47:54",
        "slug": "52d4",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-01-19 22:23:09",
        "slug": "a165",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "Notified Mariana \\(CC'ed Erik\\) that ESMF 5.0.0 was released with HALO. Requested info if anybody on CAM side should be given this information.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-24 22:35:08",
        "slug": "e603",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-24 22:35:08",
        "slug": "582d",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "Decided during ticket meeting on 03/17/11 that this ticket should be closed. Sent email to Mariana that we are closing this now.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-03-17 16:45:29",
        "slug": "ab2b",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-03-17 16:45:30",
        "slug": "5976",
        "subject": "#3 LONG:ARY_HAL: Uneven Halo Region Desired (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-17 16:45:30",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30072718463761fbde2b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7186ab16/",
  "ticket_num": 3,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2004-01-07 20:30:19"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Chris Hill from MIT\r\n\r\nHere are some notes on things I ran into recently with \r\nESMF\\_1\\_0\\_4. I'm unclear whether they are a result of my abuse \r\nos ESMF or things within the ESMF library. The halo\\(\\) and \r\nall\\_gather\\(\\) code drivers are attached.\r\n\r\n2 - global sum. There is a global reduction for integer but I \r\ncouldn't find one for 64-bit floats.\r\n",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: There is no global reduction for 64-bit float (4)",
  "discussion_thread": {
    "_id": "9ef4f612",
    "posts": [
      {
        "text": "- **milestone**: 367128 --> 356870",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2004-01-13 16:09:00",
        "slug": "7b92",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **assigned_to**: jwolfe --> theurich",
        "attachments": [],
        "author": "jwolfe",
        "timestamp": "2005-05-27 19:21:38",
        "slug": "4b3b",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\n\nSince the introduction of VM \\(in ESMF 1.0.6\\) there is an\r\nESMF\\_R8 \\(=64-bit float\\) version of ESMF\\_VMAllReduce which\r\ncan be used with ESMF\\_SUM for global sum.",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2005-06-02 20:55:04",
        "slug": "ea24",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2005-06-02 20:55:04",
        "slug": "3762",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2005-06-02 20:59:23",
        "slug": "1459",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **status**: closed --> open",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2005-06-07 16:31:03",
        "slug": "2708",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **milestone**: 356870 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-02 20:57:16",
        "slug": "c492",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:41:52",
        "slug": "c8b2",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **priority**: 1 --> 5\n- **labels**: 588649 --> 588641\n- **milestone**: 284120 --> 284119\n- **summary**: There is no global reduction for 64-bit float --> LONG: There is no global reduction for 64-bit float",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 01:57:40",
        "slug": "8ef3",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **labels**: 588641 --> 368246\n- **milestone**: 284119 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 21:38:28",
        "slug": "bf28",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **priority**: 5 --> 4\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 21:39:05",
        "slug": "3176",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **priority**: 4 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 21:39:20",
        "slug": "da35",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **summary**: LONG: There is no global reduction for 64-bit float --> LONG: There is no global reduction for 64-bit float (4)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-24 22:08:52",
        "slug": "3875",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-12 19:52:02",
        "slug": "d065",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "- **labels**: 368246 --> Array - New",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:47:21",
        "slug": "73b4",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nNeed Reduce\\(\\) and FullReduce\\(\\) on the Array and Field level.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-01-24 20:48:58",
        "slug": "885d",
        "subject": "#4 LONG: There is no global reduction for 64-bit float (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 19:47:21",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30092718463761fbde8e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/9ef4f612/",
  "ticket_num": 4,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2004-01-09 22:50:03"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Chris Hill from MIT\r\nHere are some notes on things I ran into recently with \r\nESMF\\_1\\_0\\_4. I'm unclear whether they are a result of my abuse \r\nos ESMF or things within the ESMF library. The halo\\(\\) and \r\nall\\_gather\\(\\) code drivers are attached.\r\n\r\n3 - all gather. In lieu of a 64-bit float global sum I tried creating \r\na field with one array element per member of a DE layout, \r\nassigning the numberI want to sum from each DE to the field, \r\ndoing an all gather and thensumming the result of the allgather \r\non each DE. I found that the size of the array I had to create to \r\ndo this was the size of the DE layout in X and twice the size of \r\nthe DE layout in Y. Then I could get things to work, but I'm \r\nunclear why I need to create an array of twice the dimension in \r\none direction.\r\n",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:ARY_GS: Array dims for all-gather not understood. (4)",
  "discussion_thread": {
    "_id": "47893dc0",
    "posts": [
      {
        "text": "- **milestone**: 367128 --> 356870",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2004-01-13 16:10:55",
        "slug": "b2c0",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **assigned_to**: jwolfe --> theurich",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-25 22:29:36",
        "slug": "f043",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=562208\n\nBUG \\[ 875757 \\] problem with AllGather was opned on 1/12/04",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-25 22:29:37",
        "slug": "423d",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **milestone**: 356870 --> 284119",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-02 20:42:30",
        "slug": "c62d",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **milestone**: 284119 --> \n- **labels**: 588641 --> 531937",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 21:35:20",
        "slug": "80b4",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **summary**: Array dimensions for all-gather not understood. --> LONG: Array dimensions for all-gather not understood.\n- **milestone**:  --> 166455",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 21:36:52",
        "slug": "1796",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **summary**: LONG: Array dimensions for all-gather not understood. --> LONG: Array dimensions for all-gather not understood. (8)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-24 22:57:19",
        "slug": "387f",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-27 16:48:33",
        "slug": "d153",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **summary**: LONG: Array dimensions for all-gather not understood. (8) --> LONG:ARY_GS: Array dims for all-gather not understood. (8)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-04 00:02:38",
        "slug": "4301",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-07 06:06:06",
        "slug": "40c2",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-12 18:31:41",
        "slug": "3d82",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nthe bug 875757 was deleted as a duplicate and the IMAP folder moved to terminated\r\n\r\nsylvia",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-02-12 21:25:28",
        "slug": "a5b2",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nMemorandum for the IMAP folders that this has been coded LONG",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-05-11 18:34:14",
        "slug": "a7d3",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **labels**: 531937 --> 643206\n- **summary**: LONG:ARY_GS: Array dims for all-gather not understood. (8) --> LONG:ARY_GS: Array dims for all-gather not understood. (4)\n- **priority**: 9 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-07 19:49:58",
        "slug": "0189",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **assigned_to**: theurich --> feiliu",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-11 16:26:52",
        "slug": "e87b",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **assigned_to**: feiliu --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-11 16:43:30",
        "slug": "5f4a",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **milestone**: 166455 --> \n- **labels**: 643206 --> Array - New",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-14 18:10:21",
        "slug": "1035",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nNeed to implement ArrayAllGather\\(\\) and let Chris know about it.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-14 18:12:17",
        "slug": "3b1a",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-14 18:12:17",
        "slug": "8552",
        "subject": "#5 LONG:ARY_GS: Array dims for all-gather not understood. (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-14 18:12:17",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d300d2718463761fbdee7",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/47893dc0/",
  "ticket_num": 5,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2004-01-09 22:57:25"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Erik Kuzek from NCAR\r\nESMF Core Team\r\n\r\nI need to regrid Sea Surface Temperature data from the\r\nMIT Ocean GCM grid to the CAM grid. The MIT Ocean model\r\nsets SST over land to 0.0, I want the regrid to only use\r\ndata over ocean for the regrid. Regrid has a optional\r\nargument called srcmask for doing this functionality.\r\nI traced srcmask in regrid calls and found that ESMF\\_ArrayRegrid\r\ndoes not use it in the call to ESMF\\_RegridRun. Calls for\r\nregridding of Fields, or Bundles all use ESMF\\_ArrayRegrid.\r\n\r\n\r\n\r\nErik Kluzek, \\(CGD at NCAR\\)\r\nNational Center for Atmospheric Research\r\nBoulder CO, \\(off\\) \\(303\\)497-1326 \\(fax\\) \\(303\\)497-1370\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:nRGRD:Lack of capability to regrid masked data (24)",
  "discussion_thread": {
    "_id": "5667b78b",
    "posts": [
      {
        "text": "- **milestone**: 367128 --> 284119",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 17:38:41",
        "slug": "cacd",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **milestone**: 284119 --> 284120",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:31:08",
        "slug": "77bf",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **assigned_to**: jwolfe --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:31:09",
        "slug": "274a",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-03 16:37:35",
        "slug": "bcb9",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:40:37",
        "slug": "ef18",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **summary**: Lack of capability to regrid masked data --> LONG: Lack of capability to regrid masked data\n- **assigned_to**: theurich --> donstark\n- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:01:22",
        "slug": "3bee",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\n\nThere is another request out there that is similiar to this\r\none \\(\\[ 907933 \\] Unable to create ESMF\\_Mask\\) \r\n\r\nwe are going to consolidate them. This is the text from the\r\nother request:\r\nWHO: Erik Kuzek from NCAR\r\n\r\n\r\nThe other problem I found was that srcmask is of type\r\nESMF\\_Mask. I couldn't find interfaces for creating or\r\nmanipulating ESMF\\_Mask type objects. I'd like interfaces and\r\nexamples of this type of functionality in ESMF.\r\n\r\nFor now, we'll exercise regrid without this functionality,\r\nbut would like to see this added fairly soon. I know the\r\nMay release is full now, but would like to see this happen\r\nsoon afterwards. This type of regridding is a pretty basic\r\ntype of functionality that is critical for climate and weather\r\nmodels.\r\n\r\nSo I'd like to ask that srcmask in Regrid be: working, tested,\r\nhave creation and manipulation interfaces, and documented by\r\nJune or July or so.",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-19 18:39:52",
        "slug": "2b63",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **priority**: 5 --> 3\n- **labels**: 588649 --> Regrid\n- **milestone**: 284120 --> ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-19 18:43:58",
        "slug": "a891",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1453265\n\nImplementation will be tasked to task \\#125688 Impl of regrid for multipatch curvilinear grids.",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:24:08",
        "slug": "caac",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **summary**: LONG: Lack of capability to regrid masked data --> LONG: Lack of capability to regrid masked data (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:24:08",
        "slug": "0671",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 17:10:21",
        "slug": "c157",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **summary**: LONG: Lack of capability to regrid masked data (12/12) --> LONG:nRGRD:Lack of capability to regrid masked data (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-11-03 00:21:35",
        "slug": "1f8d",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **summary**: LONG:nRGRD:Lack of capability to regrid masked data (12/12) --> LONG:nRGRD:Lack of capability to regrid masked data (24)\n- **assigned_to**: donstark --> dneckels\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:46:56",
        "slug": "722d",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **assigned_to**: dneckels --> oehmke\n- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:19:25",
        "slug": "c2e9",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-12-18 21:45:10",
        "slug": "3fcd",
        "subject": "#6 LONG:nRGRD:Lack of capability to regrid masked data (24)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-12-18 21:45:10",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30102718463761fbdf4e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/5667b78b/",
  "ticket_num": 6,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2004-03-01 22:38:59"
},{
  "status": "closed",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "this isn't really a VM bug, but it may be related to\r\ngetting argc/argv down to the MPI\\_init routines that\r\nneed it in a more system independent way.\r\n\r\nwe've had a request or two from users \\(chris is one\\)\r\nasking if they can get access to argc/argv themselves,\r\nto run their applications with command line args and\r\nparse them if they want to add additional flags.\r\n\r\nthe init code used to have 2 globals - int globalargc,\r\nand char \\*\\*globalargv, which was set inside\r\nESMF\\_Initialize\\(\\) if main was in C++, and that's where\r\nthe MPI\\_init\\(\\) code got them from if main was in C, and\r\nusers could have access to as well.\r\n\r\nthere is also code i can check in which uses the\r\nsemi-standard getarg\\(\\) or something like that which in\r\nf90 lets you get the command line args also. i had that\r\nworking on one of the compilers on the jazz intel\r\ncluster.  if we offered a standard way to get runtime\r\nargs to users, that would be nice.\r\n\r\n\r\n",
  "labels": [
    "VM"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "LONG: access to argc/argv (?)",
  "discussion_thread": {
    "_id": "44f1ef3c",
    "posts": [
      {
        "text": "- **labels**: 643205 --> VM\n- **summary**: access to argc/argv --> LONG: access to argc/argv\n- **milestone**: 287654 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-13 18:52:39",
        "slug": "01ba",
        "subject": "#7 LONG: access to argc/argv (?)"
      },
      {
        "text": "- **priority**: 2 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-13 19:18:14",
        "slug": "0f28",
        "subject": "#7 LONG: access to argc/argv (?)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:34:00",
        "slug": "b3f6",
        "subject": "#7 LONG: access to argc/argv (?)"
      },
      {
        "text": "- **priority**: 5 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 15:06:37",
        "slug": "bfd0",
        "subject": "#7 LONG: access to argc/argv (?)"
      },
      {
        "text": "- **summary**: LONG: access to argc/argv --> LONG: access to argc/argv (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:45:16",
        "slug": "4741",
        "subject": "#7 LONG: access to argc/argv (?)"
      },
      {
        "text": "- **priority**: 3 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 01:01:26",
        "slug": "37e3",
        "subject": "#7 LONG: access to argc/argv (?)"
      },
      {
        "text": "Walter implemented this.  Still need to make the API public.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-11-05 18:21:34",
        "slug": "287e",
        "subject": "#7 LONG: access to argc/argv (?)"
      },
      {
        "text": "- **assigned_to**: theurich --> w6ws",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-11-05 18:21:34",
        "slug": "f6dd",
        "subject": "#7 LONG: access to argc/argv (?)"
      },
      {
        "text": "API has been documented and is included in ESMF 5.1.0.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-12-08 19:07:03",
        "slug": "b373",
        "subject": "#7 LONG: access to argc/argv (?)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-12-08 19:07:03",
        "slug": "5719",
        "subject": "#7 LONG: access to argc/argv (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-12-08 19:07:03",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30122718463761fbdfa3",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/44f1ef3c/",
  "ticket_num": 7,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2004-07-23 21:14:49"
},{
  "status": "closed",
  "reported_by_id": null,
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "*anonymous",
  "description": "Please implement the real version of dayOfYear option\r\nof the TimeGet \r\nroutine.\r\n\r\nThanks.",
  "labels": [
    "Time Manager"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "ESMF_TimeGet dayOfYear_r8 implementation (?)",
  "discussion_thread": {
    "_id": "86e2061c",
    "posts": [
      {
        "text": "- **labels**:  --> Time Manager\n- **assigned_to**: nobody --> eschwab",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:29:21",
        "slug": "190b",
        "subject": "#8 ESMF_TimeGet dayOfYear_r8 implementation (?)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:34:40",
        "slug": "e859",
        "subject": "#8 ESMF_TimeGet dayOfYear_r8 implementation (?)"
      },
      {
        "text": "- **assigned_to**: eschwab --> nobody",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-28 16:28:17",
        "slug": "fc72",
        "subject": "#8 ESMF_TimeGet dayOfYear_r8 implementation (?)"
      },
      {
        "text": "- **assigned_to**: nobody --> murphysj",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:37:35",
        "slug": "29ce",
        "subject": "#8 ESMF_TimeGet dayOfYear_r8 implementation (?)"
      },
      {
        "text": "- **summary**: ESMF_TimeGet dayOfYear_r8 implementation --> ESMF_TimeGet dayOfYear_r8 implementation (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:37:58",
        "slug": "ad4b",
        "subject": "#8 ESMF_TimeGet dayOfYear_r8 implementation (?)"
      },
      {
        "text": "- **assigned_to**: murphysj --> eschwab",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-15 23:54:46",
        "slug": "9d92",
        "subject": "#8 ESMF_TimeGet dayOfYear_r8 implementation (?)"
      },
      {
        "text": "This was resolved in the fall of '06 with the 2.2.2r release's closure of bug \\#1518335 \"d\\_r8 behavior of ESMF\\_TimeMgr sometimes ill behaved\", reported by Erik Kluzek.\r\n\r\n\\-- Earl\r\n\r\n",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-09-22 20:20:25",
        "slug": "d2d3",
        "subject": "#8 ESMF_TimeGet dayOfYear_r8 implementation (?)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-09-22 20:20:25",
        "slug": "dae6",
        "subject": "#8 ESMF_TimeGet dayOfYear_r8 implementation (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-22 20:20:25",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30142718463761fbdfde",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/86e2061c/",
  "ticket_num": 8,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2004-08-24 14:24:41"
},{
  "status": "open",
  "reported_by_id": "519d016ee88f3d628adf1e85",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jwolfe",
  "description": "Tom Henderson wrote:\r\n\r\n\r\nHi all,\r\n\r\nWould it be possible to add an optional string argument to \r\nESMF\\_&lt;Class&gt;Print\\(\\) that would be printed at the beginning of \r\neach line output?  This would make it much easier to filter debug \r\noutput.  For example: \r\n\r\nCALL ESMF\\_TimePrint\\( time, pre\\_string='DEBUG1  ', rc=rc \\)\r\n\r\n\r\n\r\nDEBUG1  Time -----------------------------------\r\nDEBUG1  BaseTime -------------------------------\r\nDEBUG1  s = 211815540000\r\nDEBUG1  sN = 0\r\nDEBUG1  sD = 1\r\nDEBUG1  end BaseTime ---------------------------\r\n\r\n\\(etc.\\)\r\n\r\n\r\nObviously, low priority. \r\n\r\nThanks,\r\n\r\n\r\nTom\r\n\r\n",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "LONG: Prefix for prints() (2)",
  "discussion_thread": {
    "_id": "d8b6efd3",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=562208\n\nBug \\[ 1102608 \\] feature request for ESMF\\_&lt;Class&gt;Print\\(\\)\r\nwas opened on 1/14/2005",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-26 18:48:23",
        "slug": "448e",
        "subject": "#9 LONG: Prefix for prints() (2)"
      },
      {
        "text": "- **assigned_to**: jwolfe --> theurich",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-26 18:48:23",
        "slug": "b146",
        "subject": "#9 LONG: Prefix for prints() (2)"
      },
      {
        "text": "- **summary**: feature request for ESMF_<Class>Print() --> LONG: feature request for ESMF_<Class>Print()\n- **priority**: 2 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:21:36",
        "slug": "bcf4",
        "subject": "#9 LONG: Prefix for prints() (2)"
      },
      {
        "text": "- **priority**: 5 --> 1\n- **labels**: 588650 --> Multiple Categories\n- **milestone**: 284120 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:49:52",
        "slug": "26b9",
        "subject": "#9 LONG: Prefix for prints() (2)"
      },
      {
        "text": "- **summary**: LONG: feature request for ESMF_<Class>Print() --> LONG: feature request for ESMF_<Class>Print() (1/1)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-24 22:11:05",
        "slug": "0ed0",
        "subject": "#9 LONG: Prefix for prints() (2)"
      },
      {
        "text": "- **assigned_to**: theurich --> nobody\n- **milestone**:  --> Add Code Capability\n- **summary**: LONG: feature request for ESMF_<Class>Print() (1/1) --> LONG: Prefix for prints() (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:36:51",
        "slug": "7854",
        "subject": "#9 LONG: Prefix for prints() (2)"
      },
      {
        "text": "- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:17:02",
        "slug": "6484",
        "subject": "#9 LONG: Prefix for prints() (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-06 18:17:02",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30152718463761fbe00e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d8b6efd3/",
  "ticket_num": 9,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-01-14 20:07:10"
},{
  "status": "open",
  "reported_by_id": "519d016ee88f3d628adf1e85",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jwolfe",
  "description": "This enhancement was suggested by Tom Henderson:\r\n\r\nI think dataIndexList is all I'll need for axis permutation in the call \r\nto ESMF\\_FieldDataMapSetDefault\\(\\).  We used the same thing in \r\nSMS \\(I think everyone who has solved this problem has done so in \r\na similar way\\), however, it was always automatically generated so \r\nusers never had to see it.  Since this is exposed to ESMF users, I'd \r\nlike to suggest replacing the hard-coded \"0\", \"1\", and \"2\" with \r\nnamed constants for reability -- something like this: \r\ndataIndexList\\(1\\) = NOT\\_DECOMPOSED\r\n\r\ndataIndexList\\(2\\) = GRID\\_AXIS\\_1\r\n\r\ndataIndexList\\(3\\) = GRID\\_AXIS\\_2 ",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "LONG: DataIndexList should take named constants (2)",
  "discussion_thread": {
    "_id": "f4a66875",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> donstark",
        "attachments": [],
        "author": "nscollins",
        "timestamp": "2005-02-24 16:41:40",
        "slug": "1201",
        "subject": "#10 LONG: DataIndexList should take named constants (2)"
      },
      {
        "text": "- **milestone**: 166461 --> 287654",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-08 20:01:28",
        "slug": "4f7d",
        "subject": "#10 LONG: DataIndexList should take named constants (2)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:41:48",
        "slug": "e23c",
        "subject": "#10 LONG: DataIndexList should take named constants (2)"
      },
      {
        "text": "- **priority**: 5 --> 3",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 16:55:12",
        "slug": "d47f",
        "subject": "#10 LONG: DataIndexList should take named constants (2)"
      },
      {
        "text": "- **labels**: 473024 --> Field\n- **milestone**: 287654 --> ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-05-15 20:37:59",
        "slug": "7869",
        "subject": "#10 LONG: DataIndexList should take named constants (2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nThis is still an issue in new Field.\r\n\r\nCecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:35:02",
        "slug": "124f",
        "subject": "#10 LONG: DataIndexList should take named constants (2)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **assigned_to**: donstark --> feiliu\n- **summary**: dataIndexList should take named constants --> dataIndexList should take named constants (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:35:02",
        "slug": "d33d",
        "subject": "#10 LONG: DataIndexList should take named constants (2)"
      },
      {
        "text": "- **summary**: dataIndexList should take named constants (2) --> LONG: DataIndexList should take named constants (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:35:34",
        "slug": "1195",
        "subject": "#10 LONG: DataIndexList should take named constants (2)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 01:00:33",
        "slug": "a926",
        "subject": "#10 LONG: DataIndexList should take named constants (2)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 14:59:43",
        "slug": "07e5",
        "subject": "#10 LONG: DataIndexList should take named constants (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-11-30 14:59:43",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30162718463761fbe038",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f4a66875/",
  "ticket_num": 10,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-01-28 23:26:05"
},{
  "status": "closed",
  "reported_by_id": "519d016ee88f3d628adf1e85",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jwolfe",
  "description": "Jim Edwards wrote:\r\n\r\nwhen running the unit tests on BGL \\(ESMF\\_VMUTEST\\) I get a core \r\ndump with the following traceback:\r\n\r\n/bgl/home/shok/DRV061\\_2005-050219/ppc/src/bglsw/gnu/glibc\r\n-2.2.5/stdio-common/vfscanf.c:2438 \r\nhex = 0x0075d554\r\n/bgl/home/shok/DRV061\\_2005-050219/ppc/src/bglsw/gnu/glibc\r\n-2.2.5/stdio-common/fscanf.c:31\r\nhex = 0x003d5380\r\n/bgl/jimed/esmf/src/Infrastructure/VM/src/ESMC\\_VMKernel.C:159\r\nhex = 0x003d55e0\r\n/bgl/jimed/esmf/src/Infrastructure/VM/src/ESMC\\_VMKernel.C:204\r\nhex = 0x003d4e0c\r\n/bgl/jimed/esmf/src/Infrastructure/VM/src/ESMC\\_VM.C:816\r\nhex = 0x003dfbe4\r\n/bgl/jimed/esmf/src/Infrastructure/VM/interface/ESMC\\_VM\\_F.C:251\r\nhex = 0x00109d24\r\n/bgl/jimed/esmf/src/Infrastructure/VM/interface/ESMF\\_VM.F90:3835\r\nhex = 0x001cea40\r\n/bgl/jimed/esmf/src/Superstructure/ESMFMod/src/ESMF\\_Init.F90:\r\n222\r\nhex = 0x001cefcc\r\n/bgl/jimed/esmf/src/Superstructure/ESMFMod/src/ESMF\\_Init.F90:\r\n142\r\nhex = 0x001cf10c\r\n/bgl/jimed/esmf/src/Superstructure/ESMFMod/src/ESMF\\_Test.F90:\r\n247\r\nhex = 0x0010059c\r\n/auto/export-bglsim/jimed/esmf/src/Infrastructure/VM/tests/\r\nESMF\\_VMUTest.F90:80\r\nhex = 0x00100168\r\n/bgl/home/shok/DRV061\\_2005-050219/ppc/src/bglsw/gnu/glibc\r\n-2.2.5/csu/../sysdeps/blrts/start.c:94\r\n",
  "labels": [
    "VM"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "BGL_PORT:Port to BGL",
  "discussion_thread": {
    "_id": "a5dd443e",
    "posts": [
      {
        "text": "- **assigned_to**: jwolfe --> theurich",
        "attachments": [],
        "author": "jwolfe",
        "timestamp": "2005-05-27 19:59:58",
        "slug": "d424",
        "subject": "#11 BGL_PORT:Port to BGL"
      },
      {
        "text": "- **summary**: Core dump on BGL -- in VMUTest --> Port to BGL\n- **labels**: 648884 --> VM",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:33:35",
        "slug": "2b5a",
        "subject": "#11 BGL_PORT:Port to BGL"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:33:59",
        "slug": "3661",
        "subject": "#11 BGL_PORT:Port to BGL"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:34:00",
        "slug": "3b80",
        "subject": "#11 BGL_PORT:Port to BGL"
      },
      {
        "text": "- **summary**: Port to BGL --> BGL_PORT:Port to BGL",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-03 15:41:56",
        "slug": "0a75",
        "subject": "#11 BGL_PORT:Port to BGL"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nBGL port was finished and will be released with 2.2.2r and 3.0.1.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-30 22:04:48",
        "slug": "9db7",
        "subject": "#11 BGL_PORT:Port to BGL"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-30 22:04:48",
        "slug": "6534",
        "subject": "#11 BGL_PORT:Port to BGL"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-30 22:06:31",
        "slug": "b4fc",
        "subject": "#11 BGL_PORT:Port to BGL"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2006-11-30 22:06:31",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30182718463761fbe075",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a5dd443e/",
  "ticket_num": 11,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2005-02-25 23:34:08"
},{
  "status": "closed",
  "reported_by_id": "519d016ee88f3d628adf1e85",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jwolfe",
  "description": "This bug report corresponds to support request 1069106.\r\n\r\nTom would like a couple of enhancements to Grids.  This one has to \r\ndo with allowing a user to create a Grid without a predefined \r\nArakawa type and instead pass in a list of relative locations it will \r\nsupport.",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:nGRD:Add grid staggering from a list of RelLocs (12)",
  "discussion_thread": {
    "_id": "dd0e2235",
    "posts": [
      {
        "text": "- **milestone**: 166461 --> 287654",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-08 20:01:27",
        "slug": "757d",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "- **summary**: Add a grid staggering that accepts a list of RelLocs --> LONG:Add a grid staggering that accepts a list of RelLocs\n- **milestone**: 287654 --> \n- **labels**: 473025 --> 904965",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-13 18:37:24",
        "slug": "e152",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:35:34",
        "slug": "3614",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\n\nThe associated support request was closed.",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 23:01:31",
        "slug": "3c59",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1453265\n\nImplementation will be tasked to task \\#125688 Impl of regrid for multipatch curvilinear grids.",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:23:36",
        "slug": "e0ab",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "- **summary**: LONG:Add a grid staggering that accepts a list of RelLocs --> LONG:Add grid staggering from a list of RelLocs (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:23:36",
        "slug": "646c",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 17:11:00",
        "slug": "5a86",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "- **summary**: LONG:Add grid staggering from a list of RelLocs (12/12) --> LONG:nGRD:Add grid staggering from a list of RelLocs (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-11-03 00:20:04",
        "slug": "407f",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "- **labels**: 904965 --> Grid - New\n- **summary**: LONG:nGRD:Add grid staggering from a list of RelLocs (12/12) --> LONG:nGRD:Add grid staggering from a list of RelLocs (12)\n- **assigned_to**: donstark --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:32:59",
        "slug": "9f37",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-08 23:30:51",
        "slug": "ca9b",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "This is Tom Clune. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-01-16 18:27:24",
        "slug": "9d3e",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 365 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2009-09-09 02:20:13",
        "slug": "fa07",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2009-09-09 02:20:13",
        "slug": "0514",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "sf-robot does not know what it's doing -&gt; pending again\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-09-09 19:08:26",
        "slug": "94b2",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-09-09 19:08:26",
        "slug": "a662",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-12-17 23:35:18",
        "slug": "1588",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      },
      {
        "text": "Last message from Tom on this subject:\r\n\r\nHi Bob,\r\n\r\nPlease close the ticket.  I'm not likely to be able to look into this  \r\nany time soon.  Sorry.\r\n\r\nCheers,\r\n\r\n\\- Tom\r\n",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-12-18 16:42:25",
        "slug": "d68e",
        "subject": "#12 LONG:nGRD:Add grid staggering from a list of RelLocs (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-12-17 23:35:18",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30192718463761fbe0a5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/dd0e2235/",
  "ticket_num": 12,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-03-09 21:46:56"
},{
  "status": "closed",
  "reported_by_id": "519d016ee88f3d628adf1e85",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jwolfe",
  "description": "This bug report corresponds to support reqeust 1069106.\r\n\r\nTom wrote asking for a couple of enhancements to Grid.  This one is \r\nto have a Grid that will accept Fields with any relative location and \r\ndynamically add the corresponding subGrids as they are needed.",
  "labels": [
    "Grid - Old"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:oGRD: Add a Grid that accepts any RelLoc (12)",
  "discussion_thread": {
    "_id": "842e87d0",
    "posts": [
      {
        "text": "- **milestone**: 166461 --> 287654",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-08 20:01:27",
        "slug": "a88f",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "- **summary**: Add a Grid that accepts any RelLoc --> LONG: Add a Grid that accepts any RelLoc",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-10-13 18:36:12",
        "slug": "f5dc",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "- **milestone**: 287654 --> \n- **labels**: 473025 --> Grid - Old",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:42:46",
        "slug": "1e81",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:36:18",
        "slug": "670c",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1453265\n\nImplementation will be tasked to task \\#125688 Impl of regrid for multipatch curvilinear grids.",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:22:40",
        "slug": "05dc",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "- **summary**: LONG: Add a Grid that accepts any RelLoc --> LONG: Add a Grid that accepts any RelLoc (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:22:40",
        "slug": "2394",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 17:08:10",
        "slug": "f580",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "- **summary**: LONG: Add a Grid that accepts any RelLoc (12/12) --> LONG:nGRD: Add a Grid that accepts any RelLoc (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-11-03 00:19:41",
        "slug": "974d",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "- **summary**: LONG:nGRD: Add a Grid that accepts any RelLoc (12/12) --> LONG:oGRD: Add a Grid that accepts any RelLoc (12/12)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-10-30 19:01:14",
        "slug": "f20f",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "- **summary**: LONG:oGRD: Add a Grid that accepts any RelLoc (12/12) --> LONG:oGRD: Add a Grid that accepts any RelLoc (12)\n- **assigned_to**: donstark --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:32:26",
        "slug": "9cc1",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-08 23:24:11",
        "slug": "7f08",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "I pointed the user to an example and he said we can close the ticket. See below for the last email exchange.\r\n\r\nHi Bob,\r\n\r\nYes, you can close this ticket.\r\n\r\nThanks,\r\n\r\nTom\r\n\r\n\\----- Original Message -----\r\nFrom: Robert Oehmke &lt;oehmke@ucar.edu&gt;\r\nTo: Clune, Thomas L. \\(GSFC-610.3\\)\r\nCc: ESMF Support &lt;esmf\\_support@ucar.edu&gt;\r\nSent: Mon Sep 08 18:24:03 2008\r\nSubject: \\[support-request - 1160228\\] Add a Grid that accepts any RelLoc\r\n\r\nHi Tom,\r\n\r\nI'm cleaning out some old support tickets. In this one you ask for\r\nthe ability for the Grid to accept a Field at any relative location\r\nand to dynamically add the corresponding subGrids as they are needed.\r\nThe new Grid allows users to put a field on any relative location\r\n\\(now called stagger locations\\) in the Grid, whether they have had\r\ncoordinates added or not. You can see an example of this in\r\nESMF\\_FieldCreateGetUTest.F90 \\(in 3.1.0 or later\\) with the test\r\nnamed \"Creating a Field from a fortran array 2d\".\r\n\r\nFrom the comments on the support request I couldn't tell if you \r\nwanted the Grid\r\nto automatically generate coordinates for the new Field or to just\r\nnot have coordinates associated.\r\n\r\nIf you think that the above test sufficiently demonstrates adding a \r\nField\r\nto a given stagger location in a Grid, then let me know and I'll \r\nclose this\r\nticket. If you also intended the Grid to automatically generated \r\ncoordinates\r\nfor the new field, then let me know and I'll add a new ticket \r\ndescribing that.\r\n\r\nThanks,\r\n\r\n\\- Bob\r\n",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-09 17:11:13",
        "slug": "ec8e",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-09 17:11:13",
        "slug": "07f9",
        "subject": "#13 LONG:oGRD: Add a Grid that accepts any RelLoc (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-09 17:11:13",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d301d2718463761fbe105",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/842e87d0/",
  "ticket_num": 13,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-03-09 21:49:06"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Henderson from NCAR.\r\n\r\n\r\nHi Jon,\r\n\r\n\r\nWhat are your plans/schedules for implementing support for \r\ncoordinate systems other than regular lat/lon \\(i.e. that cannot be \r\nspecified with a single vector of latitudes and a single vector of \r\nlongitudes\\)?  \r\n\r\nWRF typically uses a mercator, lambert conformal, or polar-\r\nstereographic projection.  Though these can each be expressed \r\nas a 2D array of latitudes and a 2D array of longitudes, such \r\nexpression often discards useful information about how the \r\nprojection was created that may be useful to an interpolator...  \r\n\r\nI see that you have a \"ESMF\\_GRID\\_TYPE\\_LATLON\\_MERC\" \r\nplanned, but I don't see anything like \r\n\"ESMF\\_GRID\\_TYPE\\_LATLON\\_POLAR\" or \r\n\"ESMF\\_GRID\\_TYPE\\_LATLON\\_LAMBERT\".  Maybe they're \r\nalready on the list and I just haven't figured it out...  \r\n\r\nIf you'd like to re-use a very stable, well-documented, widely-used \r\nimplementation, we have a module written by Brent Shaw \\(back \r\nwhen he was at FSL\\) that has been used in MM5 and WRF for &gt;5 \r\nyears.  It is a superset of projection functionality found in NCEP's \r\nw3 library.  I've attached it so you can judge for yourself.  \r\n\r\nI'm sure you've discussed all this at great length already...  \r\n\r\nThanks,\r\n\r\n\r\nTom\r\n\r\n\r\n",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Support of various coordinate systems (24)",
  "discussion_thread": {
    "_id": "b84d2910",
    "posts": [
      {
        "text": "- **summary**: Support for various coordinate systems --> Support of various coordinate systems",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2005-04-18 17:39:06",
        "slug": "4a87",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=562208\n\nBug \r\n\\[ 1185445 \\] Additional documentation of VMGetGlobal and\r\nVMGetCurrent \r\nwas opened on 4/18/05",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-27 22:51:18",
        "slug": "e9b4",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **assigned_to**: jwolfe --> theurich",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-27 22:51:18",
        "slug": "65ec",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=562208\n\nLast entry was a mistake, assigned to jwolfe again.",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-27 22:55:50",
        "slug": "7861",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **assigned_to**: theurich --> donstark",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-27 22:55:50",
        "slug": "faeb",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 17:17:18",
        "slug": "d9aa",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **labels**: 588640 --> 588649",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:55:53",
        "slug": "870e",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:36:16",
        "slug": "ee3d",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **summary**: Support of various coordinate systems --> LONG: Support of various coordinate systems",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 22:44:25",
        "slug": "d8a9",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 01:49:23",
        "slug": "7bfe",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **labels**: 588649 --> 904965\n- **milestone**: 284120 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:48:09",
        "slug": "5f37",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:49:25",
        "slug": "97a4",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1453265\n\nImplementation will be tasked to task \\#125688 Impl of regrid for multipatch curvilinear grids.",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:22:14",
        "slug": "2bc1",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **summary**: LONG: Support of various coordinate systems --> LONG: Support of various coordinate systems (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:22:14",
        "slug": "55e5",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **summary**: LONG: Support of various coordinate systems (12/12) --> LONG:nGRD:Support of various coordinate systems (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-11-03 00:21:13",
        "slug": "0ab6",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **summary**: LONG:nGRD:Support of various coordinate systems (12/12) --> LONG:nGRD:Support of various coordinate systems (24)\n- **assigned_to**: donstark --> oehmke\n- **labels**: 904965 --> Grid - New",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:31:33",
        "slug": "8c54",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      },
      {
        "text": "- **summary**: LONG:nGRD:Support of various coordinate systems (24) --> LONG: Support of various coordinate systems (24)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:36:59",
        "slug": "ea9b",
        "subject": "#14 LONG: Support of various coordinate systems (24)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:36:59",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d301f2718463761fbe150",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b84d2910/",
  "ticket_num": 14,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-04-18 17:32:00"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "Subject: ESMF\\_Config\r\nDate: Tue, 19 Apr 2005 11:14:54 -0600\r\nFrom: Byron Boville &lt;boville@ucar.edu&gt;\r\nTo: Cecelia Deluca &lt;cdeluca@ucar.edu&gt;\r\nCC: Byron Boville &lt;boville@ucar.edu&gt;\r\n\r\nHi Cecelia, \\(should this go to esmf\\_tech or esmf\\_jst?\\)\r\n\r\nWe \\(especially I\\) are not happy with the way we using\r\nnamelist in CAM\r\nand want to change. We can go to multiple namelists\r\n\\(with each package\r\nhaving its own\\), or we can go to ESMF\\_Config, or ???.\r\nMy preference is\r\nESMF. \r\n\r\nI had to dig around the ESMF web site for a while to\r\nfind anything about\r\nthe ESMF Configuration Management package. I found it\r\nthe ESMF Reference\r\nManual for Fortran, subsection 38 \\(which, for some\r\nreason, is in section\r\n4\\). I also found the requirements. I have several questions\r\n\r\n1\\. Is anyone using this thing?\r\n2\\. was there a serious design discussion? I can see\r\nthat a bunch of\r\npeople signed off on the requirements.\r\n3\\. is there an opportunity for one?\r\n\r\nIt looks to me like it is more than 1/2 way to the\r\nright thing, but it\r\nisn't there yet. Some requirements are missing.\r\n\r\nThe big problem I have with namelist is that the valid\r\n\"attributes\" are\r\nspecified at compile time. The secondary problem is\r\nthat error checking\r\nsucks: This file is wrong, figure out why and try again\r\n\r\nOn the other hand ESMF\\_Config seems to subscribe to the\r\nAlfred E. Newman\r\nschool of error checking \\(what-me-worry?\\). You can't\r\ncheck attribute\r\nvalidity at all, because all attributes are \"valid\". \r\n\r\nI should be able to specify which attributes are valid\r\nwhen I\r\nESMF\\_ConfigCreate\\(rc\\), or after, before I\r\nESMF\\_ConfigLoadFile. Then, any\r\nattributes in the file, which are not declared valid,\r\nwill generate an\r\nerror at ESMF\\_ConfigLoadFile. \r\n\r\nThis does not conflict with requirement CA4 \\(Unused\r\nattributes in\r\nresource file\\), because I don't have to\r\nESMF\\_ConfigFindLabel or\r\nESMF\\_ConfigGetAttribute all of the valid attributes. \r\n\r\nWithout this, any typos in the resource file will be\r\naccepted as just\r\nanother label. It won't care that nobody ever queries\r\nfor this label, or\r\nthat the user didn't end up with the run they expected,\r\nor that they may\r\nhave no way of knowing this without building their own\r\nerror checking on\r\ntop. If that is required, I think I would rather use\r\nnamelist. Hostile\r\nerror checking is better than none. \r\n\r\nFurther, \r\n\r\n\\- I would like to be able to specify what kind of\r\nvalues are valid for\r\nan attribute \\(number, integer, string,...\\)\r\n\r\n\r\n",
  "labels": [
    "Config"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Add attribute validity checks to config",
  "discussion_thread": {
    "_id": "201893ab",
    "posts": [
      {
        "text": "- **milestone**: 284120 --> 356870",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 20:41:45",
        "slug": "9610",
        "subject": "#15 Add attribute validity checks to config"
      },
      {
        "text": "- **milestone**: 356870 --> 284120",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:11:06",
        "slug": "e27c",
        "subject": "#15 Add attribute validity checks to config"
      },
      {
        "text": "- **labels**: 730385 --> Config\n- **milestone**: 284120 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:37:53",
        "slug": "dc03",
        "subject": "#15 Add attribute validity checks to config"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:38:22",
        "slug": "2378",
        "subject": "#15 Add attribute validity checks to config"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: YES\n\n\r\nClosed as per message below.  Byron is not available to confirm.\r\n\\-- Cecelia\r\n\r\n\r\n\\-------- Original Message --------\r\nSubject: \t\\[esmf\\_support\\] Config Validation/Logicals in next ESMF release\\!\r\nDate: \tWed, 23 Nov 2005 14:55:14 -0700\r\nFrom: \tEarl Schwab &lt;eschwab@ucar.edu&gt;\r\nTo: \tByron Boville &lt;boville@ucar.edu&gt;\r\nCC: \tesmf\\_support &lt;esmf\\_support@ucar.edu&gt;, Erik Kluzek &lt;erik@ucar.edu&gt;\r\n\r\n\r\nHi Byron,\r\n\r\nJust an FYI that our next ESMF release in December will include \r\nconfiguration attributes validation capability as well as the ability to \r\nread logical values in configuration files.  Validation is done using \r\nthe back-end approach as you originally had proposed.   You just call \r\nESMF\\_ConfigLoad\\(\\), followed by a series of ESMF\\_ConfigGetAttribute\\(\\) \r\ncalls, and then a call to ESMF\\_ConfigValidate\\(cf, \"unusedAttributes\", \r\nrc\\).   Any unused attributes at that point will be reported by name to \r\nthe error log file with a WARNING log message type, and the return code \r\nwill be set to ESMF\\_RC\\_ATTR\\_UNUSED.\r\n\r\nAs you had suggested, logicals can be represented in the configuration \r\nfile with any upper/lower case combination of \"y\" or \"n\"; \"t\" or \"f\"; \r\n\".t.\" or \".f.\", \"true\" or \"false\"; \".true.\", \".false.\", \"yes\" or \"no\"; \r\nor \"on\" or \"off\".\r\n\r\nAssuming it works to your satisfaction, will this satisfy your support \r\nrequest, \\#1186338, to \"Add attribute validity checks to config?\"\r\n\r\nThanks and happy Thanksgiving\\!\r\n\\-- Earl\r\n\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\r\nEsmf\\_support mailing list\r\nEsmf\\_support@ucar.edu\r\nhttp://mailman.ucar.edu/mailman/listinfo/esmf\\_support\r\n",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-05-09 18:24:21",
        "slug": "b250",
        "subject": "#15 Add attribute validity checks to config"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-05-09 18:24:21",
        "slug": "5dc5",
        "subject": "#15 Add attribute validity checks to config"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-05-09 18:24:21",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30222718463761fbe1af",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/201893ab/",
  "ticket_num": 15,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-04-19 23:10:45"
},{
  "status": "pending",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Henderson from NCAR\r\n\r\n\r\nHi all,\r\n\r\nI'm attempting to make task-effort estimates for a proposal to \r\n\"nest WRF inside CAM\" that will be targeted towards the director's \r\nopporunity fund.  A likely configuration will be WRF-CLM nested \r\ninside CAM-CLM.  If schedules worked out \\(in CCSM, ESMF, and \r\nWRF\\), it would be nice to use ESMF to do this coupling.  I believe \r\nwe've already discussed most of the ESMF requirements in other \r\ncontexts \\(efficient masked interpolation of 3D fields, support for \r\ncommon map projections, etc.\\).  \r\n\r\nHowever, the need to have CLM running on two grids brings \r\nmultiple executables to the forefront once again.  If ESMF \r\nsupported multiple-executables, then CLM could be used with little \r\nmodification \\(assuming it had already been made into an ESMF \r\ncomponent\\).  However, CLM is essentially a Singleton at the \r\nmoment.  Without support for mutiple executables, someone will \r\nhave to modify CLM to allow for multiple simultaneous \r\ninstantiations if we use ESMF for coupling.  Since I'm on the hook \r\nfor task-effort estimates, I'm trying to guess whether this will need \r\nto be done...  \r\n\r\nPlease note that this is not a WRF requirement.  WRF already \r\nsupports multiple simultaneous instantiations \\(\"domains\" in WRF \r\nterminology\\).  \r\n\r\nIf this proposal were to be funded, would it be possible to add \r\nsupport for multiple executables to ESMF?  If so, when might it \r\nhappen?  \r\n\r\nThanks,\r\n\r\n\r\nTom\r\n",
  "labels": [],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Adding support for mutiple executables to ESMF (4)",
  "discussion_thread": {
    "_id": "f8549136",
    "posts": [
      {
        "text": "- **summary**: Adding support for mutiple execuatbles to ESMF --> Adding support for mutiple executables to ESMF",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2005-04-27 20:43:17",
        "slug": "6d77",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=562208\n\nDuplicate of 1191808",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2005-04-28 16:26:30",
        "slug": "140b",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **milestone**: 367128 --> 440139\n- **status**: open --> closed",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2005-04-28 16:26:30",
        "slug": "7ffe",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **milestone**: 440139 --> 356870",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-02 21:19:20",
        "slug": "ce90",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **milestone**: 356870 --> 284120\n- **status**: closed --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-03 19:18:02",
        "slug": "5c06",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:34:07",
        "slug": "3098",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **summary**: Adding support for mutiple executables to ESMF --> LONG: Adding support for mutiple executables to ESMF\n- **priority**: 1 --> 5\n- **assigned_to**: jwolfe --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 01:58:53",
        "slug": "2712",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **milestone**: 284120 --> \n- **labels**: 588640 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:24:42",
        "slug": "32ad",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:25:16",
        "slug": "70ee",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **priority**: 5 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:25:46",
        "slug": "1c63",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\njust a note for the record:\r\n\r\nwhile multiple executables is a dead issue for WRF and the traffic for this particular ticket morphed into a need for ensemble documentation, this ticket is being kept open to document the eventual need for multiple executable functionality.  Ignore the ensemble request in the traffic, that is being handled by a different thread.\r\n\r\n",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-14 16:02:41",
        "slug": "858c",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **summary**: LONG: Adding support for mutiple executables to ESMF --> LONG: Adding support for mutiple executables to ESMF (4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:30:12",
        "slug": "cafa",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **priority**: 3 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 00:54:32",
        "slug": "6307",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "There was more recent contact w/ Tom H. about MPMD again \\(08/2007\\). We pointed him to ESMF's top-level MPMD feature that has existed for a while. Sent another email, asking him if he ever tried it and if we can close this ticket now.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-09-09 18:47:50",
        "slug": "e560",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-09-09 18:47:50",
        "slug": "0a5b",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 365 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2009-09-10 02:20:56",
        "slug": "7939",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2009-09-10 02:20:56",
        "slug": "6026",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "sf-robot has no clue\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-09-10 03:23:35",
        "slug": "8be6",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-09-10 03:23:38",
        "slug": "57cf",
        "subject": "#16 LONG: Adding support for mutiple executables to ESMF (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-09-10 03:23:38",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30242718463761fbe1d5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f8549136/",
  "ticket_num": 16,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-04-27 20:42:24"
},{
  "status": "pending",
  "reported_by_id": "519d016ee88f3d628adf1e85",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jwolfe",
  "description": "This requests comes from a meeting with Mariana and Erik \r\ndiscussing the use of ESMF.  They thought it was very important for \r\nESMF to provide a clear and simple way to use global indexing in \r\nFields and Arrays.",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "LONG:GI_FLD:Add global indexing option to Fields (12)",
  "discussion_thread": {
    "_id": "f95c405c",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "nscollins",
        "timestamp": "2005-06-17 16:24:49",
        "slug": "b789",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **assigned_to**: theurich --> oehmke\n- **summary**: Add global indexing option to Fields --> LONG: Add global indexing option to Fields",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-13 18:16:28",
        "slug": "59fc",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **labels**: 473024 --> Field\n- **priority**: 5 --> 9\n- **milestone**: 166457 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:32:32",
        "slug": "6d9d",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:32:58",
        "slug": "fea2",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **summary**: LONG: Add global indexing option to Fields --> LONG: Add global indexing option to Fields (4/8)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 16:11:50",
        "slug": "f140",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **priority**: 9 --> 2",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-27 17:06:32",
        "slug": "8e78",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **summary**: LONG: Add global indexing option to Fields (4/8) --> LONG:GI_FLD:Add global indexing option to Fields (4/8)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-31 20:49:42",
        "slug": "0d23",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **summary**: LONG:GI_FLD:Add global indexing option to Fields (4/8) --> LONG:GI_FLD:Add global indexing option to Fields (12)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:13:14",
        "slug": "33b0",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **assigned_to**: oehmke --> feiliu",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:20:17",
        "slug": "9a01",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nOn response:  Need to point to \\(and create if necessary\\)\r\nexamples and documentation for Fields and Arrays.  Write\r\nto the support list first \\(without writing the user\\) to\r\ncheck that response is okay.\r\n\r\nCecelia\r\n",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:28:59",
        "slug": "5c3d",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **priority**: 2 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 00:53:51",
        "slug": "98c7",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "Bob wrote Mariana on ticket 1205112 with an example of global indexing in a Field regrid example, which covers this ticket in terms of user notification.  I am moving this ticket to pending for now and close it when we know CCSM works with the global indexing options.  This confirmation will likely come from the ESMCpl work we are doing with Fei. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-15 15:28:26",
        "slug": "b787",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-15 15:28:26",
        "slug": "8b34",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 730 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2010-09-22 02:20:59",
        "slug": "0ff0",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2010-09-22 02:20:59",
        "slug": "9295",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "sf-robot closed this -&gt; repend for now...\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 21:27:13",
        "slug": "3563",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 21:27:27",
        "slug": "ce8e",
        "subject": "#17 LONG:GI_FLD:Add global indexing option to Fields (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 21:27:27",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30282718463761fbe23d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f95c405c/",
  "ticket_num": 17,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-04-29 20:21:13"
},{
  "status": "open",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "tom h. has requested a way to query an array \\(or by\r\nextension, any object which contains an array - fields,\r\nbundles, etc\\) to find out if the actual data chunk was\r\nallocated by the user and added to the array with the\r\nREF option, or if the data space was allocated by the\r\nframework.   \r\n\r\nthis affects how data deallocation works; if the\r\nframework allocated the space it will delete it when\r\nthe array is deleted; if the user allocated it and\r\nhanded in a REF, the data space will \\*not\\* be deleted\r\nby the framework and it is the user's responsibility to\r\ndeallocate.   tom's point was that if the objects are\r\nbeing deleted in a different context than they were\r\ncreated, it might not be possible for the calling code\r\nto know what is esmf-allocated data space and what is\r\nuser-allocated data space without a query function.",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: GARBAGE query for data alloc'd by user or not (3)",
  "discussion_thread": {
    "_id": "57238df3",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> donstark",
        "attachments": [],
        "author": "nscollins",
        "timestamp": "2005-06-17 16:22:01",
        "slug": "2419",
        "subject": "#18 LONG: GARBAGE query for data alloc'd by user or not (3)"
      },
      {
        "text": "- **summary**: query for data alloc'd by user or not --> query for data alloc\\'d by user or not",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-08 15:59:06",
        "slug": "8305",
        "subject": "#18 LONG: GARBAGE query for data alloc'd by user or not (3)"
      },
      {
        "text": "- **summary**: query for data alloc\\'d by user or not --> query for data alloc\\\\\\'d by user or not\n- **milestone**: 166461 --> 287654",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-08 20:01:27",
        "slug": "e1c9",
        "subject": "#18 LONG: GARBAGE query for data alloc'd by user or not (3)"
      },
      {
        "text": "- **summary**: query for data alloc\\\\\\'d by user or not --> LONG: query for data alloc\\\\\\'d by user or not\n- **assigned_to**: donstark --> theurich",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-13 18:05:27",
        "slug": "a103",
        "subject": "#18 LONG: GARBAGE query for data alloc'd by user or not (3)"
      },
      {
        "text": "- **milestone**: 287654 --> \n- **labels**: 531937 --> 368246",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:33:44",
        "slug": "3716",
        "subject": "#18 LONG: GARBAGE query for data alloc'd by user or not (3)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:36:52",
        "slug": "fed0",
        "subject": "#18 LONG: GARBAGE query for data alloc'd by user or not (3)"
      },
      {
        "text": "- **summary**: LONG: query for data alloc\\\\\\'d by user or not --> LONG: query for data alloc'd by user or not",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 02:16:25",
        "slug": "3e58",
        "subject": "#18 LONG: GARBAGE query for data alloc'd by user or not (3)"
      },
      {
        "text": "- **priority**: 5 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 15:04:45",
        "slug": "67c8",
        "subject": "#18 LONG: GARBAGE query for data alloc'd by user or not (3)"
      },
      {
        "text": "- **summary**: LONG: query for data alloc'd by user or not --> LONG: GARBAGE query for data alloc'd by user or not (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:12:13",
        "slug": "b389",
        "subject": "#18 LONG: GARBAGE query for data alloc'd by user or not (3)"
      },
      {
        "text": "- **labels**: 368246 --> Multiple Categories",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:12:44",
        "slug": "7f1d",
        "subject": "#18 LONG: GARBAGE query for data alloc'd by user or not (3)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 00:52:29",
        "slug": "e4b7",
        "subject": "#18 LONG: GARBAGE query for data alloc'd by user or not (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-19 00:52:29",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d302c2718463761fbe29d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/57238df3/",
  "ticket_num": 18,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-05-12 16:01:07"
},{
  "status": "closed",
  "reported_by_id": "519d016ee88f3d628adf1e85",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jwolfe",
  "description": "This enhancement was suggested from a support request sent in by \r\nSujay Kumar.  That request has been closed, but this enhancement \r\nwould still be helpful.\r\n\r\nAdd other algorithms for the default distribution of Grid Axes.  this is \r\nwhat I wrote to Sujay:\r\n\r\nThe two obvious ones to me both leave the \"leftovers\" to the last \r\nPET.  In ncells is the number of grid cells along an axis and nPETs \r\nis the number of PETs, then the first algorithm uses the nearest \r\ninteger of \\(ncells/nPETs\\) as the count for PETs 1 to nPETs-1 and \r\nthe leftovers for nPET.  This routine leaves open the possibility that \r\nthe last PET could have more cells than the others.  The second \r\nalgorithm would use the truncation of \\(ncells/nPETs\\) plus one as the \r\ncount for PETs 1 to nPETs-1 and the leftovers for the last PET.  In \r\nthis case, the last PET would always have less than \\(or the same\\) \r\nas the other PETs.  For the case you had described, where there are \r\n99 cells and four processors on an axis, each of these methods \r\nwould give the following:\r\n\r\ncurrent \\(even distribution\\):   25  25  24  25\r\nnearest integer:               25  25  25  24\r\ntruncation:                    25  25  25  24\r\n\r\nSome of the differences are more obvious for 101 cells over four \r\nprocessors:\r\n\r\ncurrent \\(even distribution\\):   25  26  25  25\r\nnearest integer:               25  25  25  26\r\ntruncation:                    26  26  26  23\r\n",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Add more decompostion options (12)",
  "discussion_thread": {
    "_id": "38dbaa6b",
    "posts": [
      {
        "text": "- **milestone**: 166461 --> 287654",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-08 19:58:26",
        "slug": "8de4",
        "subject": "#19 LONG: Add more decompostion options (12)"
      },
      {
        "text": "- **summary**: Add more decompostion options --> LONG: Add more decompostion options",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-13 18:04:26",
        "slug": "d902",
        "subject": "#19 LONG: Add more decompostion options (12)"
      },
      {
        "text": "- **milestone**: 287654 --> \n- **labels**: 473025 --> 904965",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 15:15:44",
        "slug": "9f59",
        "subject": "#19 LONG: Add more decompostion options (12)"
      },
      {
        "text": "- **summary**: LONG: Add more decompostion options --> LONG: Add more decompostion options (6/6)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 15:40:27",
        "slug": "4318",
        "subject": "#19 LONG: Add more decompostion options (12)"
      },
      {
        "text": "- **priority**: 5 --> 2",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 17:09:56",
        "slug": "93e6",
        "subject": "#19 LONG: Add more decompostion options (12)"
      },
      {
        "text": "- **labels**: 904965 --> Grid - New\n- **milestone**:  --> Add Code Capability\n- **assigned_to**: donstark --> oehmke\n- **summary**: LONG: Add more decompostion options (6/6) --> LONG: Add more decompostion options (12)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:11:37",
        "slug": "57a6",
        "subject": "#19 LONG: Add more decompostion options (12)"
      },
      {
        "text": "- **priority**: 2 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 00:48:09",
        "slug": "3c0b",
        "subject": "#19 LONG: Add more decompostion options (12)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-23 22:56:43",
        "slug": "b1ba",
        "subject": "#19 LONG: Add more decompostion options (12)"
      },
      {
        "text": "Hi Bob, \r\nThis looks very good. Thanks for keeping me in the loop. \r\n-Sujay\r\n\r\nOn Sep 23, 2008, at 6:47 PM, Robert Oehmke wrote:\r\n\r\nHi Sujay,\r\n\r\nWe're going through and trying to clear out some of our older bugs. In this\r\none you request more decomposition options\\*. We now have four:\r\n\r\n\\+ ESMF\\_DECOMP\\_CYCLIC: Decompose elements cyclically across DEs\r\n\r\n\\+ ESMF\\_DECOMP\\_HOMOGEN: Decompose elements as homogeneously as possible across DEs.\r\nThe maximum difference in number of elements per DE is 1, with the extra elements\r\non the lower DEs.\r\n\r\n\\+ ESMF\\_DECOMP\\_RESTFIRST: Divide elements over DEs. Assign the rest of this division to the\r\nfirst DE.\r\n\r\n\\+ ESMF\\_DECOMP\\_RESTLAST: Divide elements over DEs. Assign the rest of this division to the\r\nlast DE.\r\n\r\nIn addition to these, the user can specify explicitly the number of elements to put\r\non each DE.\r\n\r\nDoes this seem to cover the range of options you had in mind? Let us know what you think.\r\n\r\nThanks,\r\n\r\n\\- Bob\r\n\r\n\\* These can be specified via the decompflag when creating a DistGrid or a Grid.\r\n\\-- \r\nThis message has been scanned for viruses and\r\ndangerous content by MailScanner, and is\r\nbelieved to be clean.\r\n\r\n\r\n\\------------------------------------\r\nSujay Kumar, Ph.D\r\nCode 614.3, SAIC/NASA GSFC\r\nGreenbelt, MD 20771\r\nEmail: Sujay.V.Kumar@nasa.gov\r\nWeb:http://neptune.gsfc.nasa.gov/hsb/?skumar\r\nPh: 301-286-8663, Fax: 301-286-8624\r\n\\------------------------------------\r\n\r\n",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-24 19:43:04",
        "slug": "a1bd",
        "subject": "#19 LONG: Add more decompostion options (12)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-24 19:43:04",
        "slug": "cbbf",
        "subject": "#19 LONG: Add more decompostion options (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-24 19:43:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d302d2718463761fbe2de",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/38dbaa6b/",
  "ticket_num": 19,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-05-12 20:45:23"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Sujay Kumar from GSFC\r\n\r\n\r\nHi Jon,\r\n\r\nOn another note, I am interested in finding out the status of \r\nsupport for other grid types. More specifically I am interested in \r\nthe support for mercator and gaussian grids. Also, are there any \r\nplans for polar stereographic grids?\r\n\r\nThanks\r\n-Sujay\r\n",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    ",
  "discussion_thread": {
    "_id": "b72e8d26",
    "posts": [
      {
        "text": "- **summary**: Support for mercator and gaussian grids --> Support for mercator, gaussian and polar stereographic grids",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2005-05-13 16:52:35",
        "slug": "df6f",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 17:17:18",
        "slug": "4a8d",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **assigned_to**: jwolfe --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:33:19",
        "slug": "80e7",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **assigned_to**: nobody --> oehmke",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-03 15:29:04",
        "slug": "3886",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:31:29",
        "slug": "a490",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **priority**: 1 --> 5\n- **summary**: Support for mercator, gaussian and polar stereographic grids --> LONG: Mercator, gaussian and polar stereographic grids",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 01:47:58",
        "slug": "7cdf",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **priority**: 5 --> 9\n- **labels**: 588649 --> 904965\n- **milestone**: 284120 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:03:10",
        "slug": "0148",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:04:01",
        "slug": "defa",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **summary**: LONG: Mercator, gaussian and polar stereographic grids --> LONG: Merc., gauss. and polar stereo.  grids (?,5/10,2)    ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 16:11:14",
        "slug": "33e8",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **summary**: LONG: Merc., gauss. and polar stereo.  grids (?,5/10,2)     --> LONG: Merc., gauss. and polar stereo.  grids (12)    ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 21:56:25",
        "slug": "124f",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **summary**: LONG: Merc., gauss. and polar stereo.  grids (12)     --> LONG:NGRD:Merc., gauss. and polar stereo.  grids (36)    ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-31 20:55:04",
        "slug": "949d",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **summary**: LONG:NGRD:Merc., gauss. and polar stereo.  grids (36)     --> LONG:NGRDT:Merc., gauss. and polar stereo.  grids (36)    ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-31 21:13:01",
        "slug": "d7f1",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **summary**: LONG:NGRDT:Merc., gauss. and polar stereo.  grids (36)     --> LONG:nGRD:Merc., gauss. and polar stereo.  grids (36)    ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-11-02 23:30:48",
        "slug": "025a",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **labels**: 904965 --> Grid - New\n- **summary**: LONG:nGRD:Merc., gauss. and polar stereo.  grids (36)     --> LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:10:59",
        "slug": "20fc",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 18:17:48",
        "slug": "60d1",
        "subject": "#20 LONG:nGRD:Merc., gauss. and polar stereo.  grids (12)    "
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 18:17:48",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d302f2718463761fbe31a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b72e8d26/",
  "ticket_num": 20,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-05-13 14:56:46"
},{
  "status": "closed",
  "reported_by_id": "519d016ee88f3d628adf1e85",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jwolfe",
  "description": "This bug corresponds to support request 1214305.  Please let me \r\nknow when it has been resolved so i can handle the support side.  \r\nthanks, Jon\r\n\r\nTom Henderson wrote:\r\n\r\n\"If I have a heavyweight ESMF object that has been declared but \r\nnot created \\(via call to ESMF\\_\\*Create\\(\\)\\), is ESMF\\_\\*Validate\\(\\) \r\nguaranteed to always return rc /= ESMF\\_SUCCESS ?  Can one use \r\nthe value of rc to determine if invalidity is due to failure to create or \r\ndue to other causes? \"\r\n\r\nand then later\r\n\r\n\"Thanks.  Turns out that my work-around is very fragile.  If I can get \r\nF95 compile-time-pointer-nullification to work on all of our supported \r\nplatforms, it will be less fragile.  Not sure if everyone can do this \r\nyet, though I'm encouraged to see this in ESMF implementation.  I'd \r\nlike to see ESMF\\_Alarm at the top of the list.\"\r\n\r\nWe should all sit down and discuss this, but Alarm is most important \r\nto Tom.",
  "labels": [],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "improved validation of ESMF_Alarm",
  "discussion_thread": {
    "_id": "5273d863",
    "posts": [
      {
        "text": "- **labels**: 643204 --> ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-05-16 14:53:10",
        "slug": "3e71",
        "subject": "#21 improved validation of ESMF_Alarm"
      },
      {
        "text": "- **assigned_to**: eschwab --> samsoncheung",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-05-16 14:53:11",
        "slug": "5e86",
        "subject": "#21 improved validation of ESMF_Alarm"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1481514\nOriginator: NO\n\nWe have unit\\_test \\(ESMF\\_AlarmUTest.F90\\) to make sure the Validation works:\r\n\r\n\\! ----------------------------------------------------------------------------\r\n\\!EX\\_UTest\r\nwrite\\(failMsg, \\*\\) \" Did not return ESMF\\_RC\\_OBJ\\_NOT\\_CREATED\"\r\nwrite\\(name, \\*\\) \"Validate non-created Alarm Test\"\r\ncall ESMF\\_AlarmValidate\\(alarm6, rc=rc\\)\r\ncall ESMF\\_Test\\(\\(rc.eq.ESMF\\_RC\\_OBJ\\_NOT\\_CREATED\\), &\r\nname, failMsg, result, ESMF\\_SRCLINE\\)\r\n\r\nNow with the ticket number 132021 completed, make sure the unused code returns error, this ticket closes to completion.  However, we still have support request 1214305.  I mark this pending until the release of v3.0.3.\r\n",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2007-07-20 19:38:09",
        "slug": "71bb",
        "subject": "#21 improved validation of ESMF_Alarm"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2007-07-20 19:38:09",
        "slug": "8ed4",
        "subject": "#21 improved validation of ESMF_Alarm"
      },
      {
        "text": "- **assigned_to**: samsoncheung --> svasquez",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-03 16:49:56",
        "slug": "bf21",
        "subject": "#21 improved validation of ESMF_Alarm"
      },
      {
        "text": "- **assigned_to**: svasquez --> oehmke",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2008-03-20 17:34:17",
        "slug": "b640",
        "subject": "#21 improved validation of ESMF_Alarm"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1324860\nOriginator: NO\n\n\r\nTom responded:\r\n\r\nYes, please.  Thanks\\!\r\n\r\n\r\nRobert Oehmke wrote:\r\nHi Tom,\r\nI was looking at a support request which you submitted awhile ago \\(original text below\\). We've since added checking to our deep classes\r\nso that if the user tries to use a non-created object in a method\r\nit will return an error. This means what you say below\r\nis now true, calling Validate on an uncreated Alarm will\r\nreturn non-success. There's also a test which tests this,\r\nsee \"Validate non-created Alarm test\" in the the Alarm\r\nunit tests \\(ESMF\\_AlarmUTest.F90\\).  May I close this ticket?\r\nBy the way, we have another ticket open for you with regard to checking if an object has been deleted. This currently works for the simple case where the same\r\nF90 structure is deleted and checked, but we don't\r\nyet handle the case where two F90 structures reference\r\nthe same internal object and one is deleted and the other checked. We'll let you know when this more complex case\r\nis handled under this other ticket. Thanks,\r\n\\- Bob\r\nIf I have a heavyweight ESMF object that has been declared but not created \\(via call to ESMF\\_\\*Create\\(\\)\\), is ESMF\\_\\*Validate\\(\\) guaranteed to always return rc /= ESMF\\_SUCCESS ? Can one use the value of rc to determine if invalidity is due to failure to create or due to other causes? \"\r\nand then later\r\n\"Thanks. Turns out that my work-around is very fragile. If I can get F95 compile-time-pointer-nullification to work on all of our supported platforms, it will be less fragile. Not sure if everyone can do this yet, though I'm encouraged to see this in ESMF implementation. I'd like to see ESMF\\_Alarm at the top of the list.\"\r\n\r\n",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-03-20 21:47:19",
        "slug": "f0a7",
        "subject": "#21 improved validation of ESMF_Alarm"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-03-20 21:47:19",
        "slug": "22ff",
        "subject": "#21 improved validation of ESMF_Alarm"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-03-20 21:47:19",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30322718463761fbe36e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/5273d863/",
  "ticket_num": 21,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2005-06-10 17:56:35"
},{
  "status": "closed",
  "reported_by_id": "519d016ee88f3d628adf1e85",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jwolfe",
  "description": "Tom H called me with this one.  He wants to query objects for the \r\nexistence of a named attribute and it was not clear if we support this \r\nwith a current interface.",
  "labels": [
    "Base"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG: query for the existence of an attribute (2)",
  "discussion_thread": {
    "_id": "e126a4c4",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> donstark",
        "attachments": [],
        "author": "nscollins",
        "timestamp": "2005-06-17 16:18:40",
        "slug": "2f18",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      },
      {
        "text": "- **assigned_to**: donstark --> eschwab",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-13 17:51:39",
        "slug": "c3b5",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      },
      {
        "text": "- **assigned_to**: eschwab --> samsoncheung",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-06-08 21:26:22",
        "slug": "f96b",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      },
      {
        "text": "- **labels**: 473029 --> 588642",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-06-08 21:28:20",
        "slug": "eebe",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      },
      {
        "text": "- **milestone**:  --> 356870",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-06-08 21:29:17",
        "slug": "9f7c",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      },
      {
        "text": "- **labels**: 588642 --> Base\n- **milestone**: 356870 --> ",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-08-03 15:36:48",
        "slug": "0163",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **assigned_to**: samsoncheung --> rokuingh\n- **summary**: query for the existence of an attribute --> LONG: query for the existence of an attribute (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:08:21",
        "slug": "6554",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-07-18 20:22:28",
        "slug": "0eeb",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 21:16:37",
        "slug": "7727",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-12 21:26:18",
        "slug": "4374",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      },
      {
        "text": "Tom H. approved close on 9/12/08.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-12 21:27:43",
        "slug": "2d0d",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-12 21:27:43",
        "slug": "45f1",
        "subject": "#22 LONG: query for the existence of an attribute (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-12 21:27:43",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30332718463761fbe39f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e126a4c4/",
  "ticket_num": 22,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-06-17 15:53:27"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Henderson from NCAR\r\n\r\nHi all,\r\n\r\nWhat does ESMF\\_VMGet return for mpiCommunicator when MPI is \r\nnot used?\r\n\r\nESMF\\_VMGet\\(vm, mpiCommunicator=mpicom, rc=rc\\)\r\n\r\nThanks,\r\n\r\nTom\r\n",
  "labels": [
    "VM"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: ESMF_VMGet behavior when MPI not used (4)",
  "discussion_thread": {
    "_id": "935c9a09",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=340034\n\nTo: tom henderson, esmf\\_support\r\n\r\nTom,\r\n\r\nIn case mpiuni is used instead of a real MPI implementation\r\nthe communicator that VMGet\\(\\) returns is equal to what\r\nmpiuni uses for MPI\\_COMM\\_WORLD. So mpiuni should be fine\r\nwhen this value is used in MPI calls.\r\n\r\nAre you looking for a way to tell at run time whether an\r\nesmf lib has been compiled against a real MPI or mpiuni? I\r\nsee how that could be useful to have. In this case I'd\r\npropose to add an argument \\(or arguments\\) to VMGet\\(\\) that\r\nwould give you info like MPI\\_Get\\_version\\(\\) does and special\r\nvalue \\(like version 0.0\\) for mpiuni. I haven't thought much\r\nabout this, just throwing it out here for consideration if\r\nthat is what you are after.\r\n\r\n-Gerhard\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2005-06-27 16:49:48",
        "slug": "d038",
        "subject": "#23 LONG: ESMF_VMGet behavior when MPI not used (4)"
      },
      {
        "text": "- **milestone**: 367128 --> 367129",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2005-06-29 14:22:37",
        "slug": "4bb7",
        "subject": "#23 LONG: ESMF_VMGet behavior when MPI not used (4)"
      },
      {
        "text": "- **milestone**: 367129 --> 284119",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-02 21:25:37",
        "slug": "188f",
        "subject": "#23 LONG: ESMF_VMGet behavior when MPI not used (4)"
      },
      {
        "text": "- **labels**: 648884 --> VM\n- **milestone**: 284119 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:34:18",
        "slug": "4512",
        "subject": "#23 LONG: ESMF_VMGet behavior when MPI not used (4)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **priority**: 5 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:37:48",
        "slug": "85db",
        "subject": "#23 LONG: ESMF_VMGet behavior when MPI not used (4)"
      },
      {
        "text": "- **summary**: ESMF_VMGet behavior when MPI not used --> LONG: ESMF_VMGet behavior when MPI not used (4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:07:47",
        "slug": "519c",
        "subject": "#23 LONG: ESMF_VMGet behavior when MPI not used (4)"
      },
      {
        "text": "- **priority**: 2 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 00:48:43",
        "slug": "26ec",
        "subject": "#23 LONG: ESMF_VMGet behavior when MPI not used (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-19 00:48:43",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30352718463761fbe3e5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/935c9a09/",
  "ticket_num": 23,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-06-22 18:41:44"
},{
  "status": "closed",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "in the bundle code i need to be able to ask whether the\r\ngrid already associated with a bundle is the same as\r\nthe grid in a new field being added to the bundle.  \r\nthe existing code compares the grid pointers to see if\r\nthey match, but obviously an identical grid could be\r\ncreated separately and they would be the same but the\r\npointers wouldn't match.   so i need a ESMF\\_GridSame\\(\\)\r\nor ESMF\\_GridEqual\\(\\) function which returns true if the\r\n2 grid args are describing identical grids.  \\(this is\r\nprobably messy to write because it means everything\r\ninside the grid structs must be checked to see if they\r\nare identical.\\)     \r\n\r\nthere's test code in\r\nBundleComm/tests/ESMF\\_BundleCommUTest.F90 which can be\r\ncommented in to test the code once it's written.",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: need \"is grid equal?\" function (12)",
  "discussion_thread": {
    "_id": "e61f39a8",
    "posts": [
      {
        "text": "- **summary**: need \"is grid equal?\" function --> LONG: need \"is grid equal?\" function",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:31:57",
        "slug": "760c",
        "subject": "#24 LONG: need \"is grid equal?\" function (12)"
      },
      {
        "text": "- **milestone**: 287654 --> \n- **labels**: 473025 --> 904965",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 15:15:05",
        "slug": "9ebf",
        "subject": "#24 LONG: need \"is grid equal?\" function (12)"
      },
      {
        "text": "- **summary**: LONG: need \"is grid equal?\" function --> LONG: need \"is grid equal?\" function (6/6)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 15:39:52",
        "slug": "832b",
        "subject": "#24 LONG: need \"is grid equal?\" function (12)"
      },
      {
        "text": "- **priority**: 5 --> 3",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 17:10:34",
        "slug": "d695",
        "subject": "#24 LONG: need \"is grid equal?\" function (12)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **labels**: 904965 --> Grid - New\n- **assigned_to**: donstark --> oehmke\n- **summary**: LONG: need \"is grid equal?\" function (6/6) --> LONG: need \"is grid equal?\" function (12)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:06:51",
        "slug": "b951",
        "subject": "#24 LONG: need \"is grid equal?\" function (12)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:48:39",
        "slug": "6413",
        "subject": "#24 LONG: need \"is grid equal?\" function (12)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 15:05:55",
        "slug": "2b11",
        "subject": "#24 LONG: need \"is grid equal?\" function (12)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 18:13:47",
        "slug": "db8e",
        "subject": "#24 LONG: need \"is grid equal?\" function (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 18:13:47",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30362718463761fbe410",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e61f39a8/",
  "ticket_num": 24,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-06-27 20:03:27"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Henderson from NCAR.\r\n\r\nhi -\r\n\r\ntom h. is busy this week and then out on vacation, so instead of\r\nhim writing in, i said i'd summarize our recent phone conversations\r\nto the support list:\r\n\r\n\r\n1\\. he'd like to request an option on field create when esmf is doing \r\nthe array allocation, such that each local array has lower and upper \r\nbounds which correspond to the global indices \\(where the framework \r\nfigures out what that is automatically\\).  currently the default when we \r\ncreate local data is to use 1 as the lower bounds on each array \r\n\\(which the user can override but must do the computation \r\nthemselves to figure out the offsets from the global grid\\).",
  "labels": [
    "Field"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:GI_FLD:Global indices on FieldCreate (12)",
  "discussion_thread": {
    "_id": "183564e5",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=497819\n\nNancy already has a bug on this, \\#1002086.",
        "attachments": [],
        "author": "jwolfe",
        "timestamp": "2005-07-05 20:47:19",
        "slug": "e57a",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **assigned_to**: jwolfe --> nscollins\n- **milestone**: 367128 --> 356870",
        "attachments": [],
        "author": "jwolfe",
        "timestamp": "2005-07-05 20:47:19",
        "slug": "cccd",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **milestone**: 356870 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-02 20:57:13",
        "slug": "be48",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **milestone**: 284120 --> 356870",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 20:43:27",
        "slug": "9401",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **assigned_to**: nscollins --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:25:14",
        "slug": "8514",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **milestone**: 356870 --> 284120",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:10:57",
        "slug": "10b9",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **summary**: Request for new Field create option --> Global indices on FieldCreate\n- **assigned_to**: theurich --> oehmke\n- **milestone**: 284120 --> \n- **labels**: 588648 --> Field",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:29:21",
        "slug": "abd7",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **summary**: Global indices on FieldCreate --> LONG: Global indices on FieldCreate\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:30:09",
        "slug": "bd1f",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:30:47",
        "slug": "32a2",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **summary**: LONG: Global indices on FieldCreate --> LONG: Global indices on FieldCreate (2/4)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 16:06:21",
        "slug": "1454",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **priority**: 9 --> 2",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-27 17:07:53",
        "slug": "8b68",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **summary**: LONG: Global indices on FieldCreate (2/4) --> LONG:GI_FLD:Global indices on FieldCreate (4/8)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-31 20:49:24",
        "slug": "4387",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **summary**: LONG:GI_FLD:Global indices on FieldCreate (4/8) --> LONG:GI_FLD:Global indices on FieldCreate (12)\n- **priority**: 2 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:05:52",
        "slug": "18f6",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:48:13",
        "slug": "be62",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-22 20:20:34",
        "slug": "7fee",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "Reopened since Tom H wanted more tests. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:52:14",
        "slug": "3f55",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:52:14",
        "slug": "b093",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "Reopened since Tom H wanted more tests. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:54:45",
        "slug": "71aa",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "Reopened since Tom H wanted more tests. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:55:11",
        "slug": "4efa",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "Reopened since Tom H wanted more tests. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:55:54",
        "slug": "951b",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "Tom responded to our close email with the following points. We\r\nshould add more testing to cover them before closing this ticket.\r\n\r\nBob,\r\n\r\nI see that your unit test validates the values returned from ESMF\\_FieldGet\r\nin compLBnd and compUBnd.  But I do not see where you validate the actual\r\nlower and upper bounds of farray via the standard Fortran LBOUND and UBOUND\r\nintrinsics \\(which would not necessarily match the computational bounds of\r\ncourse\\).  Do you plan to add this?\r\n\r\nDo you have any unit tests where Fortran arrays with non-unit lower bound are\r\ncombined with ESMF\\_INDEX\\_GLOBAL?\r\n\r\nIs there a way for a user to specify the distribution themselves and use\r\nESMF\\_INDEX\\_GLOBAL too?  I assume so but don't see this case in this unit\r\ntest.\r\n\r\nThanks\\!\r\n\r\nTom\r\n\r\n",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-03-06 22:40:04",
        "slug": "af3c",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      },
      {
        "text": "- **priority**: 9 --> 7",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:36:10",
        "slug": "7cfa",
        "subject": "#25 LONG:GI_FLD:Global indices on FieldCreate (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:36:10",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d303a2718463761fbe441",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/183564e5/",
  "ticket_num": 25,
  "custom_fields": {
    "_priority": "7",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-06-30 15:49:25"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Hendersobn from NCAR\r\n\r\nhi -\r\n\r\ntom h. is busy this week and then out on vacation, so instead of\r\nhim writing in, i said i'd summarize our recent phone conversations\r\nto the support list:\r\n\r\n2\\. he was asking about how concurrency works, and when i \r\nmentioned that for full concurrency you would need to link with a \r\nthread library, he said that in his experience he has had codes which \r\nwould not work when linked with threads, and even codes which \r\nwould not run correctly when linked with the openmp libraries.  so he \r\nstrenuously emphasized that he wanted component concurrency \r\nwithout having to link with either openmp or thread libraries.  \\(as i \r\ntold him, we do support concurrent components on separate PETs \r\nwithout threading\\).  but i said i'd report this concern to the support \r\nlist.\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Concurrency w/o openmp or thread libraries",
  "discussion_thread": {
    "_id": "fc994246",
    "posts": [
      {
        "text": "- **assigned_to**: donstark --> theurich\n- **milestone**:  --> 356870\n- **labels**: 588640 --> 509038",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-09-13 20:12:19",
        "slug": "58ce",
        "subject": "#26 LONG: Concurrency w/o openmp or thread libraries"
      },
      {
        "text": "- **milestone**: 356870 --> 284120",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:10:48",
        "slug": "8d4b",
        "subject": "#26 LONG: Concurrency w/o openmp or thread libraries"
      },
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 284120 --> \n- **summary**: Concurrency without linking with openmp or thread libraries --> LONG: Concurrency w/o openmp or thread libraries",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:23:32",
        "slug": "77b3",
        "subject": "#26 LONG: Concurrency w/o openmp or thread libraries"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:24:44",
        "slug": "55c3",
        "subject": "#26 LONG: Concurrency w/o openmp or thread libraries"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\n\nWe do concurrency on separate PETs without threading.",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:36:58",
        "slug": "b33b",
        "subject": "#26 LONG: Concurrency w/o openmp or thread libraries"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:36:58",
        "slug": "6273",
        "subject": "#26 LONG: Concurrency w/o openmp or thread libraries"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2006-10-20 18:36:58",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d303e2718463761fbe4b9",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/fc994246/",
  "ticket_num": 26,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-06-30 15:54:20"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Erik Kluzek from GCD at NCAR\r\n\r\nHi Guys\r\n\r\nWe were going over the concurrent CCSM model using ESMF\r\nwe want to impliment and we reached a concern we want to\r\naddress. In the current CCSM the active atmosphere does\r\nit's sends on a different time-step than the receives, while\r\nthe data atmosphere has them on the same time-step. We need\r\nto maintain this same flexibility for the ESMF CCSM concurrent\r\nsystem and not have the driver change for it. Originally, I\r\nwas thinking that this could be shuffled under the covers\r\nin the CAM code, but we're concerned enough about it that\r\nwe want to make sure we can do it in ESMF. What I'd really\r\nlike to do is to just sit down with you explain the problem,\r\nmaybe present some simple use cases in psuedo-code and make\r\nsure that we agree on a solution that we have confidence\r\nwill work.\r\n\r\nSo I'm not sure if this requires changes to the ESMF\r\nconcurrent model or not. If it does, we won't need these\r\nchanges until next Spring when we try to couple CAM into\r\nCCSM using ESMF. The concurrent version using data models\r\nthat we try to build this fall won't need this.\r\n\r\nWe would like to discuss this ASAP so we feel comfortable\r\nthat it's something that can be resolved. I'd like to\r\npropose next week, but understand if we need to wait\r\nuntil after the ESMF workshop. Although it might be better\r\nto start talking before the meeting than at the meeting.\r\nWe all have vacations as well, so it might be hard to schedule...\r\n\r\nMy initial proposal is for Friday Jul 8th at 1:30pm, as that\r\nlooks clear in meeting maker.\r\n\r\n\r\nErik Kluzek, \\(CGD at NCAR\\)\r\nNational Center for Atmospheric Research\r\nBoulder CO, \\(off\\) \\(303\\)497-1326 \\(fax\\) \\(303\\)497-1314\r\n",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Need sends and receives on different timesteps (16)",
  "discussion_thread": {
    "_id": "b2573f4d",
    "posts": [
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 17:17:17",
        "slug": "6b16",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:31:08",
        "slug": "ec58",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      },
      {
        "text": "- **summary**: Need sends and receives on different timesteps --> LONG: Need sends and receives on different timesteps\n- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 01:53:04",
        "slug": "dca1",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      },
      {
        "text": "- **labels**: 588652 --> 880647",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 01:53:40",
        "slug": "0251",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      },
      {
        "text": "- **milestone**: 284120 --> \n- **labels**: 880647 --> Multiple Categories\n- **assigned_to**: donstark --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:19:22",
        "slug": "17fc",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:22:01",
        "slug": "99e7",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      },
      {
        "text": "- **summary**: LONG: Need sends and receives on different timesteps --> LONG: Need sends and receives on different timesteps (8/8)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-24 22:06:46",
        "slug": "fd4b",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      },
      {
        "text": "- **summary**: LONG: Need sends and receives on different timesteps (8/8) --> LONG: Need sends and receives on different timesteps (16)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:04:58",
        "slug": "097a",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      },
      {
        "text": "Sent email to Mariana, pointing her to the \"direct coupling\" feature introduced in ESMF 3.1.0r. I think this should cover what is needed. Waiting for her feedback.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-09-09 18:38:32",
        "slug": "8823",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-09-09 18:38:32",
        "slug": "0955",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      },
      {
        "text": "Closed after second email to Mariana as per ticket meeting 01/16/09,\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-01-16 21:54:46",
        "slug": "f0f4",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-01-16 21:54:46",
        "slug": "8a57",
        "subject": "#27 LONG: Need sends and receives on different timesteps (16)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-01-16 21:54:46",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d303f2718463761fbe4de",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b2573f4d/",
  "ticket_num": 27,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-06-30 21:46:40"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Max Suarez from GSFC\r\n\r\nA Component get to retrieve the IRF and phase.",
  "labels": [
    "Component"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:GET_IRF:CompGet method to get IRF and phase (1/1)",
  "discussion_thread": {
    "_id": "529cd7f8",
    "posts": [
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 17:17:15",
        "slug": "4d76",
        "subject": "#28 LONG:GET_IRF:CompGet method to get IRF and phase (1/1)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:30:28",
        "slug": "7c71",
        "subject": "#28 LONG:GET_IRF:CompGet method to get IRF and phase (1/1)"
      },
      {
        "text": "- **summary**: CompGet method to get IRF and phase --> LONG: CompGet method to get IRF and phase\n- **assigned_to**: donstark --> oehmke\n- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 01:58:22",
        "slug": "f0a3",
        "subject": "#28 LONG:GET_IRF:CompGet method to get IRF and phase (1/1)"
      },
      {
        "text": "- **milestone**: 284120 --> \n- **labels**: 588645 --> Component",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:10:50",
        "slug": "cd5b",
        "subject": "#28 LONG:GET_IRF:CompGet method to get IRF and phase (1/1)"
      },
      {
        "text": "- **assigned_to**: oehmke --> theurich\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:11:30",
        "slug": "df69",
        "subject": "#28 LONG:GET_IRF:CompGet method to get IRF and phase (1/1)"
      },
      {
        "text": "- **summary**: LONG: CompGet method to get IRF and phase --> LONG: CompGet method to get IRF and phase (1/1)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-24 22:05:23",
        "slug": "0d28",
        "subject": "#28 LONG:GET_IRF:CompGet method to get IRF and phase (1/1)"
      },
      {
        "text": "- **summary**: LONG: CompGet method to get IRF and phase (1/1) --> LONG:GET_IRF:CompGet method to get IRF and phase (1/1)\n- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-12 20:09:05",
        "slug": "66a0",
        "subject": "#28 LONG:GET_IRF:CompGet method to get IRF and phase (1/1)"
      },
      {
        "text": "Feature became available as of ESMF\\_4\\_0\\_0\\_beta\\_snapshot\\_16, and is scheduled to be released with ESMF 4.0.0.\r\n\\*gjt\\*\r\n\r\nGerhard,\r\n\r\nGridCompGet works as expected\\! I was able to obtain the method and phase \r\nand everything is OK.\r\n\r\n-Atanas\r\n\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-05-04 17:19:32",
        "slug": "b4de",
        "subject": "#28 LONG:GET_IRF:CompGet method to get IRF and phase (1/1)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-05-04 17:19:32",
        "slug": "d694",
        "subject": "#28 LONG:GET_IRF:CompGet method to get IRF and phase (1/1)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-05-04 17:19:32",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30422718463761fbe522",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/529cd7f8/",
  "ticket_num": 28,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-07-19 19:33:22"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Rene Redler from C&C Research Labs NEC Europe\r\n\r\nHi,\r\n\r\ninspired by Nancy's tutorial at the MIT last week I have started\r\n\\(tried\\) to install the esmf software on a NEC SX system.\r\n\r\nI am working on a Linux PC with the NEC SX cross compiler.\r\nThe first thing I noticed was that you define\r\nESMF\\_KIND\\_I8 = selected\\_int\\_kind\\(18\\)\r\n\r\nThe SX compiler returns -1 for selected\\_int\\_kind\\(18\\).\r\nFor reasons which I do not want to explain in detail here\r\nselected\\_int\\_kind\\(15\\) is the maximum I can use with the\r\nSX compiler. Obviously it is never tested whether the\r\nchosen selected\\_int\\_kind functions return the desired values.\r\n\r\nOn the SX Integer\\*1 or Integer\\(Kind=1\\) is not supported\r\nat all = does not exist. Thus\r\n\r\nESMF\\_KIND\\_I1 = selected\\_int\\_kind\\(2\\)\r\nESMF\\_KIND\\_I2 = selected\\_int\\_kind\\(4\\)\r\n\r\ngive identical values for both ESMF\\_KIND\\_I1 and ESMF\\_KIND\\_I2.\r\nThis causes a problem when trying to compile \r\nESMF\\_LocalArray.F90\r\nas the  Int1 and Int2 arrays cannot be distinguished, two functions\r\nhaving identical interface descriptions.\r\n\r\nEspecially for the second problem is there an easy way to solve\r\nthis, or do I have to ifdef out all Int1 routines?\r\n\r\nRegards, Rene\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)",
  "discussion_thread": {
    "_id": "9b22dba7",
    "posts": [
      {
        "text": "- **milestone**: 367128 --> 155253",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:55:19",
        "slug": "8c56",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      },
      {
        "text": "- **assigned_to**: donstark --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:37:38",
        "slug": "139e",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      },
      {
        "text": "- **milestone**: 155253 --> \n- **labels**: 509038 --> Build/Install",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:52:36",
        "slug": "71e2",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:53:29",
        "slug": "5324",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      },
      {
        "text": "- **priority**: 5 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:54:15",
        "slug": "1189",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      },
      {
        "text": "- **summary**: Installing ESMF on NEC SX system  --> LONG: Installing ESMF on NEC SX system (2)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-24 22:09:47",
        "slug": "4018",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nkeep this open b/c we need to check in with Prism to determine which platforms they might be interested in. Once we have an idea we can close this out or leave it open depending upon their response. ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-03-30 17:40:14",
        "slug": "b3e4",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG: Installing ESMF on NEC SX system (2) --> LONG: Installing ESMF on NEC SX system (Contrib ?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:03:44",
        "slug": "cb5d",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG: Installing ESMF on NEC SX system (Contrib ?) --> LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-01-18 19:04:42",
        "slug": "01b8",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      },
      {
        "text": "- **priority**: 2 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 00:51:33",
        "slug": "745c",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      },
      {
        "text": "Rene indicates that he is no longer interested in the NEC platform.  He did not know off the bat if anyone else was and said to close the ticket.  ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-23 21:23:35",
        "slug": "89ab",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-23 21:23:35",
        "slug": "c105",
        "subject": "#29 LONG: PORT2NEC: Installing ESMF on NEC SX system (Contrib ?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-23 21:23:35",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30442718463761fbe557",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/9b22dba7/",
  "ticket_num": 29,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2005-07-25 16:34:45"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Henderson from NCAR\r\nNancy,\r\n\r\nTwo more cases of deep object assignment in CouplerMod.F90:\r\n\r\ncall ESMF\\_StateGet\\(importState, name=statename,\r\nrc=rc\\)\r\nif \\(trim\\(statename\\) .eq. \"FlowSolver Feedback\"\\)\r\nthen\r\nroutehandle = fromFlow\\_rh\r\nelse\r\nroutehandle = fromInject\\_rh\r\nendif\r\n\r\nCopy-on-write would be ideal here as routehandle is\r\nnever modified after the assignment.\r\n\r\nTom\r\n",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: More deep-object assignment in demo code (20)",
  "discussion_thread": {
    "_id": "cad4c0c1",
    "posts": [
      {
        "text": "- **assigned_to**: jwolfe --> theurich",
        "attachments": [],
        "author": "jwolfe",
        "timestamp": "2005-08-29 17:25:32",
        "slug": "a3f6",
        "subject": "#30 LONG: More deep-object assignment in demo code (20)"
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 17:13:29",
        "slug": "be46",
        "subject": "#30 LONG: More deep-object assignment in demo code (20)"
      },
      {
        "text": "- **labels**: 588640 --> 880647",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-09-13 20:08:08",
        "slug": "5127",
        "subject": "#30 LONG: More deep-object assignment in demo code (20)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:28:31",
        "slug": "c721",
        "subject": "#30 LONG: More deep-object assignment in demo code (20)"
      },
      {
        "text": "- **priority**: 1 --> 5\n- **summary**: More deep-object assignment in demo code --> LONG: More deep-object assignment in demo code",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 01:54:02",
        "slug": "52b5",
        "subject": "#30 LONG: More deep-object assignment in demo code (20)"
      },
      {
        "text": "- **labels**: 880647 --> Multiple Categories\n- **milestone**: 284120 --> \n- **priority**: 5 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 22:50:54",
        "slug": "627a",
        "subject": "#30 LONG: More deep-object assignment in demo code (20)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 22:51:20",
        "slug": "aa5c",
        "subject": "#30 LONG: More deep-object assignment in demo code (20)"
      },
      {
        "text": "- **summary**: LONG: More deep-object assignment in demo code --> LONG: More deep-object assignment in demo code (20)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:03:15",
        "slug": "77ca",
        "subject": "#30 LONG: More deep-object assignment in demo code (20)"
      },
      {
        "text": "- **priority**: 2 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:47:52",
        "slug": "b4a8",
        "subject": "#30 LONG: More deep-object assignment in demo code (20)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 17:27:41",
        "slug": "5481",
        "subject": "#30 LONG: More deep-object assignment in demo code (20)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 17:27:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30452718463761fbe59b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/cad4c0c1/",
  "ticket_num": 30,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-07-27 15:03:32"
},{
  "status": "closed",
  "reported_by_id": "519d016ee88f3d628adf1e85",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jwolfe",
  "description": "Tom Henderson wrote\"\r\n\r\n\"Aside from brute-force, are there any \"nice\" ways to copy metadata \r\nfrom one ESMF\\_State to another \\(i.e. like an ESMF\\_State \r\nmethod\\)?\"",
  "labels": [
    "State"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG: copying metadata between states (5)",
  "discussion_thread": {
    "_id": "e3071066",
    "posts": [
      {
        "text": "- **assigned_to**: jwolfe --> theurich",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-02-03 23:09:48",
        "slug": "7745",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "- **milestone**:  --> 155253\n- **assigned_to**: theurich --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:09:17",
        "slug": "9437",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "- **priority**: 5 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 21:38:08",
        "slug": "d7f1",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "- **summary**: copying metadata between states --> copying metadata between states (1/4)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 15:44:47",
        "slug": "4dfb",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "- **summary**: copying metadata between states (1/4) --> LONG: copying metadata between states (1/4)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-31 22:40:15",
        "slug": "2e48",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nI am going to move this to feature requests which will also generate a new email for the IMAP servers so I have a record that this is still viable\r\n\r\n",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-14 15:45:25",
        "slug": "d0ce",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "- **milestone**: 155253 --> \n- **labels**: 588651 --> State",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-14 15:45:25",
        "slug": "9c61",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **assigned_to**: oehmke --> rokuingh\n- **summary**: LONG: copying metadata between states (1/4) --> LONG: copying metadata between states (5)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:01:22",
        "slug": "013f",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:47:36",
        "slug": "a832",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-07-18 20:22:28",
        "slug": "9954",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 21:16:26",
        "slug": "46d2",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-22 17:46:27",
        "slug": "0e10",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "Closed on 9/22/08 by Ryan O'Kuinghttons, under advise of Tom Henderson.  Tom says:\r\n\r\n\"Is there a way to inquire whether or not an attribute is being referenced by more than one object?  This would be\r\nuseful to figure out what side effects might occur when an attribute is modified.  The alternative would likely\r\nbe overly conservative use of deep copy once you implement it...  Not asking for a new feature at this point, let's\r\nwait until we have a concrete use-case.\"",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-22 20:08:17",
        "slug": "550c",
        "subject": "#31 LONG: copying metadata between states (5)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-22 20:08:17",
        "slug": "c7c2",
        "subject": "#31 LONG: copying metadata between states (5)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-22 20:08:17",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30472718463761fbe5d6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e3071066/",
  "ticket_num": 31,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-07-28 22:25:24"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Steve Gollmer from Cedarville University\r\n\r\nI am trying to compile the CAM3.0 model which is based on the \r\nESMF.  I am using a linux machine, but do not have any of the \r\nsupported F90 compilers.  I have installed two different gnu freeware \r\nF95 compilers \\(gfortran and g95\\).  Since the makefile does not \r\nrecognize either of these compilers, I have renamed them to \r\nlinux\\_gnupgf90 \\(which is recongnized by the configure script for the \r\nCAM3.0 model\\).\r\n\r\nI have done several modifications to get the fortran code to compile, \r\nbut at this point I have undefined references like 't\\_starf\\_\\_' to \r\nresolve. \r\n\r\nDo you have any insight on how to solve this problem or do you \r\nknow of someone who is trying to get ESMF running on a linux \r\nmachine with a gnu fortran compiler?\r\n\r\nThanks for any help you can provide,\r\n\r\nSteve Gollmer\r\nDept. Science/Mathematics\r\nCedarville University",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "ESMF with gfortran and g95",
  "discussion_thread": {
    "_id": "3991b863",
    "posts": [
      {
        "text": "- **milestone**: 367128 --> 155253",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 17:12:34",
        "slug": "2068",
        "subject": "#32 ESMF with gfortran and g95"
      },
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 155253 --> \n- **assigned_to**: donstark --> samsoncheung",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:05:55",
        "slug": "253b",
        "subject": "#32 ESMF with gfortran and g95"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform\n- **priority**: 5 --> 2\n- **summary**: Compiling ESMF with an unsupported Linux compiler --> ESMF with gfortran and g95",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:07:06",
        "slug": "6336",
        "subject": "#32 ESMF with gfortran and g95"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1481514\n\nSteve Gollmer resolved his problem; and I verify\r\ngfortran and g95 are working fine on my linux box \r\nwith the ESMF CVS HEAD.  I also recall Will Sawyer \r\nwas able to compile and run on those compilers.\r\nSo I close this ticket.\r\n\r\n\r\nOn Wed, October 25, 2006 8:41 am, Steven M. Gollmer wrote:\r\n&gt; Samson,\r\n&gt; \r\n&gt; Thank you for responding to my g95 request.  At the time I\r\nmade the\r\n&gt; request, an individual tailored an installation script for\r\nrunning the\r\n&gt; CAM 3.0 model.  It did not work with gfortran nor g95. \r\nUpon further\r\n&gt; inquiry, our Linux cluster has the Portland compiler\r\navailable and I\r\n&gt; have been successful at installing and compiling CAM 3.0\r\nwith it.\r\n&gt; \r\n&gt; Thanks again, but at this time I don't think there is any\r\nmore need to\r\n&gt; follow up on the g95 and gofortran option.\r\n&gt; \r\n&gt; Steve Gollmer\r\n&gt; \r\n&gt; \r\n&gt;&gt;&gt;&gt; \"Samson Cheung\" &lt;cheung@math.ucdavis.edu&gt; 10/25/2006\r\n11:19 AM &gt;&gt;&gt;\r\n&gt; Hi Dr. Gollmer,\r\n&gt; \r\n&gt; I came across this ticket \\(1255109\\).  Apparently, both\r\ngfortran and\r\n&gt; g95 are working fine on my linux box with ESMF v222 and\r\nthe HEAD of\r\n&gt; our CVS repoaitory; I would like to know if you are interested\r\n&gt; to try g95 again.  If you have any concern regarding that\r\nplease\r\n&gt; let me know.  If you already have the issue resolved, may\r\nI close\r\n&gt; this ticket?  Thank you very much\\!\r\n&gt; \r\n&gt; Samson\r\n&gt; \r\n&gt; \r\n&gt; \r\n&gt; ====================PREVIOUS\r\nEMAIL=================================\r\n&gt; Hi Dr. Gollmer,\r\n&gt; \r\n&gt; My name is Jon Wolfe and I am part of the ESMF support\r\nteam.  We\r\n&gt; received your request for help getting the ESMF prototype\r\ncode bundled\r\n&gt; with CAM working with the gnu freeware compilers, and have\r\nassigned\r\n&gt; the\r\n&gt; issue a tracking number of 1255109.\r\n&gt; \r\n&gt; We do have the main development branch of ESMF working\r\nwith the g95\r\n&gt; compiler, so I will try to make the necessary alterations\r\nand get you\r\n&gt; a\r\n&gt; patch tomorrow.  Thanks for your patience,\r\n&gt; \r\n&gt; Jon\r\n&gt; \r\n&gt; \r\n&gt; \r\n&gt; Steven M. Gollmer wrote:\r\n&gt; \r\n&gt;&gt; I am trying to compile the CAM3.0 model which is based on\r\nthe ESMF.\r\n&gt; I\r\n&gt;&gt; am using a linux machine, but do not have any of the\r\nsupported F90\r\n&gt;&gt; compilers.  I have installed two different gnu freeware F95\r\n&gt; compilers\r\n&gt;&gt; \\(gfortran and g95\\).  Since the makefile does not\r\nrecognize either of\r\n&gt;&gt; these compilers, I have renamed them to linux\\_gnupgf90\r\n\\(which is\r\n&gt;&gt; recongnized by the configure script for the CAM3.0 model\\).\r\n&gt;&gt;\r\n&gt;&gt; I have done several modifications to get the fortran code to\r\n&gt; compile,\r\n&gt;&gt; but at this point I have undefined references like\r\n't\\_starf\\_\\_' to\r\n&gt;&gt; resolve.\r\n&gt;&gt;\r\n&gt;&gt; Do you have any insight on how to solve this problem or\r\ndo you know\r\n&gt; of\r\n&gt;&gt; someone who is trying to get ESMF running on a linux\r\nmachine with a\r\n&gt;&gt; gnu fortran compiler?\r\n&gt;&gt;\r\n&gt;&gt; Thanks for any help you can provide,\r\n&gt;&gt;\r\n&gt;&gt; Steve Gollmer\r\n&gt;&gt; Dept. Science/Mathematics\r\n&gt;&gt; Cedarville University\r\n&gt;&gt;\r\n&gt; ",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2006-10-25 18:23:04",
        "slug": "e2f0",
        "subject": "#32 ESMF with gfortran and g95"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2006-10-25 18:23:04",
        "slug": "9e72",
        "subject": "#32 ESMF with gfortran and g95"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2006-10-25 18:23:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30492718463761fbe625",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3991b863/",
  "ticket_num": 32,
  "custom_fields": {
    "_priority": "2",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2005-08-09 17:10:01"
},{
  "status": "open",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "tom h. showed us an example of code in which he was\r\nrequired to pass in a clock \\(to a component initialize\r\nroutine\\) before he knew the exact settings for it.  he\r\nwanted to create what amounts to a NULL or empty clock\r\n\\- intentionally - which would satisfy the interface\r\nrequirements but would not be queriable for anything.\r\n\r\ni've also wanted this for places where a clock is\r\nneeded but no time information is available.   ",
  "labels": [],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "LONG:need way to create \"empty\" clock (4)",
  "discussion_thread": {
    "_id": "b2b2f9f3",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> eschwab",
        "attachments": [],
        "author": "nscollins",
        "timestamp": "2005-08-17 17:42:40",
        "slug": "8bcd",
        "subject": "#33 LONG:need way to create \"empty\" clock (4)"
      },
      {
        "text": "- **summary**: need way to create \"empty\" clock --> LONG:need way to create \"empty\" clock\n- **assigned_to**: eschwab --> nobody\n- **milestone**: 287654 --> \n- **labels**: 380772 --> ",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-10-13 17:43:50",
        "slug": "d732",
        "subject": "#33 LONG:need way to create \"empty\" clock (4)"
      },
      {
        "text": "- **assigned_to**: nobody --> eschwab",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:29:01",
        "slug": "31dc",
        "subject": "#33 LONG:need way to create \"empty\" clock (4)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:37:07",
        "slug": "acf5",
        "subject": "#33 LONG:need way to create \"empty\" clock (4)"
      },
      {
        "text": "- **assigned_to**: eschwab --> nobody",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-28 16:27:49",
        "slug": "f3c7",
        "subject": "#33 LONG:need way to create \"empty\" clock (4)"
      },
      {
        "text": "- **summary**: LONG:need way to create \"empty\" clock --> LONG:need way to create \"empty\" clock (4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:00:50",
        "slug": "067e",
        "subject": "#33 LONG:need way to create \"empty\" clock (4)"
      },
      {
        "text": "- **assigned_to**: nobody --> eschwab",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-09-05 16:30:41",
        "slug": "1dc7",
        "subject": "#33 LONG:need way to create \"empty\" clock (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-05 16:30:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d304a2718463761fbe647",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b2b2f9f3/",
  "ticket_num": 33,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-17 17:40:20"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "Add additional interface to CompCreate\\(\\) which instead\r\nof a petList takes a flag which can have two values\r\nthat an MPMD application can identify whether a certain\r\ncomponent is local to this executable or not.\r\n\r\nThis is to prevent the double definition of component\r\nto PET association that occurs in the MPMD case when\r\nexplicit petLists are used for the components that are\r\ndefined in separate executables. A consistent petList\r\nwill be generated automatically by the CompCreate\\(\\)\r\ncall so that anything relying on petLists should be\r\nfine still.",
  "labels": [
    "VM"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Automatic petList generation for MPMD (12)",
  "discussion_thread": {
    "_id": "a59b7ed8",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2005-08-17 22:07:59",
        "slug": "9e79",
        "subject": "#34 LONG: Automatic petList generation for MPMD (12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\n\nThis comment is just to test SF's automated email. Since I\r\nsubmitted this bug and assigned it to myself I should get 2\r\nemails from SF about this comment being added.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-05-31 16:39:09",
        "slug": "4231",
        "subject": "#34 LONG: Automatic petList generation for MPMD (12)"
      },
      {
        "text": "- **assigned_to**: theurich --> nobody\n- **milestone**: 287654 --> \n- **labels**: 643205 --> VM",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:09:32",
        "slug": "4f85",
        "subject": "#34 LONG: Automatic petList generation for MPMD (12)"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:26:53",
        "slug": "942c",
        "subject": "#34 LONG: Automatic petList generation for MPMD (12)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:37:34",
        "slug": "bce0",
        "subject": "#34 LONG: Automatic petList generation for MPMD (12)"
      },
      {
        "text": "- **priority**: 5 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:51:04",
        "slug": "59a7",
        "subject": "#34 LONG: Automatic petList generation for MPMD (12)"
      },
      {
        "text": "- **summary**: Automatic petList generation for MPMD --> Automatic petList generation for MPMD (12)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:00:22",
        "slug": "b0e2",
        "subject": "#34 LONG: Automatic petList generation for MPMD (12)"
      },
      {
        "text": "- **summary**: Automatic petList generation for MPMD (12) --> LONG: Automatic petList generation for MPMD (12)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 19:08:43",
        "slug": "44fa",
        "subject": "#34 LONG: Automatic petList generation for MPMD (12)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:47:21",
        "slug": "4b99",
        "subject": "#34 LONG: Automatic petList generation for MPMD (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 21:47:21",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d304b2718463761fbe673",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a59b7ed8/",
  "ticket_num": 34,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-17 22:07:06"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "Build shared libraries on all platforms to conserve\r\ndisk space.",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "LONG: Build shared libraries (12)",
  "discussion_thread": {
    "_id": "c5dd563e",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> donstark",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2005-08-24 15:46:49",
        "slug": "2916",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "- **milestone**: 166461 --> 166458",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-08 19:56:37",
        "slug": "d409",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "- **summary**: Build shared libraries --> LONG: Build shared libraries\n- **assigned_to**: donstark --> theurich",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-10-13 17:41:24",
        "slug": "f137",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "- **labels**: 473023 --> Build/Install\n- **assigned_to**: theurich --> nobody\n- **milestone**: 166458 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:07:47",
        "slug": "36b7",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:26:34",
        "slug": "ebb2",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:38:48",
        "slug": "e386",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:47:44",
        "slug": "ac5b",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "- **assigned_to**: theurich --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:41:12",
        "slug": "005c",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "- **summary**: LONG: Build shared libraries --> LONG: Build shared libraries (3/8)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 16:04:47",
        "slug": "fd79",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "- **summary**: LONG: Build shared libraries (3/8) --> LONG: Build shared libraries (12)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:59:54",
        "slug": "c07c",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "- **assigned_to**: oehmke --> w6ws",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 18:09:48",
        "slug": "d38f",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "Walter is working on shared libs for Windows now.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-11-05 18:10:23",
        "slug": "da42",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "Both Cygwin/gfortran and Cygwin/g95 builds now generate shared libraries.  Note that on Windows, the PATH environment variable must include a path to the ESMF library.  Neither the usual LD\\_LIBRARY\\_PATH environment variable nor -rpath work.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-03-23 21:54:39",
        "slug": "2c28",
        "subject": "#35 LONG: Build shared libraries (12)"
      },
      {
        "text": "Mod made on 3/23/2011 for the AIX port to partially fix shared libs.  With this mod, the 64-bit Fortran tests all now use shared libs.  The C and 32-bit tests do not.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-04-05 19:39:49",
        "slug": "bab0",
        "subject": "#35 LONG: Build shared libraries (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 18:09:48",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d304d2718463761fbe6a7",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c5dd563e/",
  "ticket_num": 35,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-24 15:45:50"
},{
  "status": "closed",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "tom henderson \\(and a few others\\) have code where\r\nespecially at init time each component needs to pass\r\nback time information \\(minimum/maximum time step,\r\npreferred coupling interval time, etc\\).   they've\r\nsuggested before that the component interfaces have 2\r\nclocks - a clock\\_in, which comes down from the\r\nparent/calling component, and is read only - and a\r\nclock\\_out which is intent\\(out\\) and comes from the\r\ncomponent.\r\n\r\nwe've talked about it and up until now the suggested\r\nsolution is to pass time parameters are integer or real\r\nvalues, as attributes attached to the import and export\r\nstates.  it isn't clear that simply giving 2 clocks\r\nmakes it any simpler to coordinate the needs of\r\nmultiple components - we'd have to come up with a\r\nprotocol for how the clocks are intended/expected to be\r\nused.\r\n\r\nbut since this suggestion has appeared before, i'm\r\ndocumenting it here - that a common need seems to be\r\ncoordinating time feedback info, and we may need to do\r\nsomething more formal based on the experiences of our\r\nusers as they do more complex coupling.\r\n",
  "labels": [
    "Component"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "PREPEND: LONG:COMP_CLK:clock in, clock out (5)?",
  "discussion_thread": {
    "_id": "0fdd2c0d",
    "posts": [
      {
        "text": "- **summary**: clock in, clock out? --> LONG:clock in, clock out?\n- **assigned_to**: donstark --> oehmke",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-10-13 17:35:01",
        "slug": "f575",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **labels**: 368243 --> Component\n- **assigned_to**: oehmke --> nobody\n- **milestone**: 287654 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:05:55",
        "slug": "3866",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **assigned_to**: nobody --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:25:36",
        "slug": "e65f",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:37:54",
        "slug": "6b4d",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **priority**: 5 --> 4",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 15:04:02",
        "slug": "b0ce",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **assigned_to**: oehmke --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:12:04",
        "slug": "f253",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **assigned_to**: theurich --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:13:47",
        "slug": "9600",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **summary**: LONG:clock in, clock out? --> LONG:clock in, clock out (1/4)?",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 16:03:48",
        "slug": "89ac",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **priority**: 4 --> 3",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-27 17:08:20",
        "slug": "44ec",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **summary**: LONG:clock in, clock out (1/4)? --> LONG:COMP_CLK:clock in, clock out (1/4)?",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-16 17:53:12",
        "slug": "abc7",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **summary**: LONG:COMP_CLK:clock in, clock out (1/4)? --> LONG:COMP_CLK:clock in, clock out (5)?",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:59:30",
        "slug": "1a6b",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:46:58",
        "slug": "26af",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **summary**: LONG:COMP_CLK:clock in, clock out (5)? --> PREPEND: LONG:COMP_CLK:clock in, clock out (5)?\n- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 15:31:01",
        "slug": "46be",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 18:35:29",
        "slug": "2f4e",
        "subject": "#36 PREPEND: LONG:COMP_CLK:clock in, clock out (5)?"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 18:35:29",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30502718463761fbe6f7",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0fdd2c0d/",
  "ticket_num": 36,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-29 15:42:40"
},{
  "status": "closed",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "several users with regular grids have very performance\r\nsensitive applications, and they want to explore\r\nsingle-sided communication operations - like a\r\nRedistSend\\(\\) and a RedistReceive\\(\\) - so the data could\r\nbe sent async sometime either before or after the\r\nreceive - to overlap communication time with\r\ncomputational time.  \r\n\r\nnote this doesn't necessarily imply xforms - this might\r\nbe implementable in a coupler or in some hub component\r\n\\- although in the long run  it probably means some kind\r\nof intra-component communication from within the\r\nexecution loop without returning to the caller to couple.\r\n\r\n",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: one-sided/non-blocking/async. comms (6)",
  "discussion_thread": {
    "_id": "b0b31316",
    "posts": [
      {
        "text": "- **labels**: 473027 --> 531937",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-08 15:03:19",
        "slug": "87ef",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "- **labels**: 531937 --> 473027",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-08 15:53:34",
        "slug": "6b4a",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "- **summary**: wants one-sided communications options --> LONG: wants one-sided communications options\n- **assigned_to**: donstark --> theurich\n- **milestone**: 287654 --> \n- **labels**: 473027 --> 880647",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:33:06",
        "slug": "5b86",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "- **assigned_to**: theurich --> nobody\n- **labels**: 880647 --> Multiple Categories",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:51:40",
        "slug": "0417",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:25:25",
        "slug": "c4a3",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:40:03",
        "slug": "7300",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "- **summary**: LONG: wants one-sided communications options --> LONG: wants one-sided communications options (2/3)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-24 22:04:56",
        "slug": "42a7",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "- **summary**: LONG: wants one-sided communications options (2/3) --> LONG: wants one-sided communications options (6)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:59:12",
        "slug": "6236",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "Tim Campbell just asked about this feature again in \\#2689059. I had spoken with him about it at the AGU, so we are pretty much on the same page as far as what the feature, he is asking for, would look like. \r\n\r\nThe part that Nancy pointed out in the second paragraph of the original Comment of this ticket is already implemented and available. It is the \"Direct Coupling\" feature that was introduced a while back.\r\n\r\nWhat is still missing is the option for Components to issue an ArraySMM\\(\\) \\(or methods derived from ArraySMM\\(\\)\\), and indicate \"nonblocking\". The ArraySMM\\(\\) would come back to the caller \\(regardless of whether this is sender or receiver Component\\), and subsequent ArraySMMTest\\(\\) and ArraySMMWait\\(\\) calls would exist to finish up the operation. All of these calls take the routehandle, and that is how control information is handled in this scheme. \r\n\r\nThis LONG ticket needs to be scheduled by the CRB.\r\n\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-03-17 18:30:47",
        "slug": "8ad4",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "- **summary**: LONG: wants one-sided communications options (6) --> LONG: one-sided/non-blocking/async. comms (6)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-03-17 18:30:47",
        "slug": "a558",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "Currently this is scheduled as part of task \\#150753 for 4.0.1\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-03-17 18:41:46",
        "slug": "eab2",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 14:49:55",
        "slug": "28b3",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "This has been implemented in 5.0.0. There is a follow on ticket \\#2689059 with TimC that deals with the remaining CANCEL option.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 18:12:08",
        "slug": "e65b",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 18:12:08",
        "slug": "a258",
        "subject": "#37 LONG: one-sided/non-blocking/async. comms (6)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 18:12:08",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30532718463761fbe745",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b0b31316/",
  "ticket_num": 37,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-29 16:01:27"
},{
  "status": "open",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "tom h. has plans to make nested states several levels\r\ndeep, and wants ways to iterate to get all objects\r\nwithout regard for actual place in the hierarchy, and\r\nways to get each object of any particular type \\(e.g.\r\neach Field\\).   so he's requesting some kind of iterator\r\nsupport.",
  "labels": [
    "State"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "LONG: wants iterators for nested states (6)",
  "discussion_thread": {
    "_id": "ad00c192",
    "posts": [
      {
        "text": "- **labels**: 514600 --> 588651\n- **summary**: wants iterators for nested states --> LONG: wants iterators for nested states\n- **assigned_to**: donstark --> oehmke\n- **milestone**: 287654 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:31:59",
        "slug": "5074",
        "subject": "#38 LONG: wants iterators for nested states (6)"
      },
      {
        "text": "- **assigned_to**: oehmke --> nobody\n- **labels**: 588651 --> State",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:53:19",
        "slug": "0536",
        "subject": "#38 LONG: wants iterators for nested states (6)"
      },
      {
        "text": "- **assigned_to**: nobody --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:25:12",
        "slug": "63d5",
        "subject": "#38 LONG: wants iterators for nested states (6)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:40:16",
        "slug": "9689",
        "subject": "#38 LONG: wants iterators for nested states (6)"
      },
      {
        "text": "- **priority**: 5 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:48:25",
        "slug": "0908",
        "subject": "#38 LONG: wants iterators for nested states (6)"
      },
      {
        "text": "- **summary**: LONG: wants iterators for nested states --> LONG: wants iterators for nested states (2/4)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 16:01:14",
        "slug": "0ba3",
        "subject": "#38 LONG: wants iterators for nested states (6)"
      },
      {
        "text": "- **summary**: LONG: wants iterators for nested states (2/4) --> LONG: wants iterators for nested states (6)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:58:44",
        "slug": "493f",
        "subject": "#38 LONG: wants iterators for nested states (6)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:46:37",
        "slug": "19df",
        "subject": "#38 LONG: wants iterators for nested states (6)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 18:06:56",
        "slug": "b036",
        "subject": "#38 LONG: wants iterators for nested states (6)"
      },
      {
        "text": "- **assigned_to**: oehmke --> w6ws",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 18:07:16",
        "slug": "9104",
        "subject": "#38 LONG: wants iterators for nested states (6)"
      },
      {
        "text": "This feature has been available starting with the 5.1 internal release.  The user can call ESMF\\_Get to obtain a list of all items in a State, including nested State items, and can then call ESMF\\_Get again to access the desired individual items.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-03-16 15:57:35",
        "slug": "329a",
        "subject": "#38 LONG: wants iterators for nested states (6)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 18:07:16",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30562718463761fbe793",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/ad00c192/",
  "ticket_num": 38,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-29 16:03:56"
},{
  "status": "open",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "tom h. suggested we look at the \"bulletin board\" model\r\nof one sided StatePut\\(\\) and StateGet\\(\\) functions which\r\nmight allow components to send and receive data from\r\nwithin their computational loops if returning to the\r\ncaller is infeasible.\r\n\r\nthe bulletin board could be some kind of global\r\nresource, or could conceiveably be associated with a VM.",
  "labels": [
    "Component"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: bulletin board model of async state i/o? (?)",
  "discussion_thread": {
    "_id": "847edc85",
    "posts": [
      {
        "text": "- **labels**: 514600 --> 588645\n- **summary**: bulletin board model of async state i/o? --> LONG: bulletin board model of async state i/o?\n- **assigned_to**: donstark --> theurich\n- **milestone**: 287654 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:30:59",
        "slug": "4bf0",
        "subject": "#39 LONG: bulletin board model of async state i/o? (?)"
      },
      {
        "text": "- **assigned_to**: theurich --> nobody\n- **labels**: 588645 --> Component",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:56:43",
        "slug": "1d38",
        "subject": "#39 LONG: bulletin board model of async state i/o? (?)"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:25:01",
        "slug": "3af2",
        "subject": "#39 LONG: bulletin board model of async state i/o? (?)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:40:29",
        "slug": "8ccc",
        "subject": "#39 LONG: bulletin board model of async state i/o? (?)"
      },
      {
        "text": "- **priority**: 5 --> 4",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 15:05:44",
        "slug": "f900",
        "subject": "#39 LONG: bulletin board model of async state i/o? (?)"
      },
      {
        "text": "- **priority**: 4 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:26:00",
        "slug": "db5f",
        "subject": "#39 LONG: bulletin board model of async state i/o? (?)"
      },
      {
        "text": "- **summary**: LONG: bulletin board model of async state i/o? --> LONG: bulletin board model of async state i/o? (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:58:24",
        "slug": "badf",
        "subject": "#39 LONG: bulletin board model of async state i/o? (?)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:46:21",
        "slug": "5e9b",
        "subject": "#39 LONG: bulletin board model of async state i/o? (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 21:46:21",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30582718463761fbe7d3",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/847edc85/",
  "ticket_num": 39,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-29 16:06:34"
},{
  "status": "open",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "tom h. wants functions to allow code deep in the\r\ncalling stack to ask what the currently executing\r\ncomponent is, much as you can do with\r\nESMF\\_VMGetCurrent\\(\\) to get the currently executing vm.\r\n\r\nlikewise, he wants a way to get the import state,\r\nexport state, clock, and phase either with a\r\nGetCurrent\\(\\) call, or if you have the component\r\nalready, from the component with a Get\\(\\) call.\r\n\r\nthis is so he doesn't have to add the states and clocks\r\nas arguments to every subroutine in an already existing\r\ndeep calling chain, when they're only needed at the bottom.\r\n\r\ni've initially assigned this to gerhard because he did\r\nthe VM code and maybe can do the same with the\r\ncomponent - but i can also work on this depending who\r\ngets to it first.",
  "labels": [
    "Component"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: wants ESMF_GridCompGetCurrent() (2)",
  "discussion_thread": {
    "_id": "6f5d068c",
    "posts": [
      {
        "text": "- **labels**: 368243 --> 588645\n- **summary**: wants ESMF_GridCompGetCurrent() --> LONG: wants ESMF_GridCompGetCurrent()\n- **assigned_to**: theurich --> oehmke\n- **milestone**: 287654 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:25:29",
        "slug": "8cad",
        "subject": "#40 LONG: wants ESMF_GridCompGetCurrent() (2)"
      },
      {
        "text": "- **assigned_to**: oehmke --> nobody\n- **labels**: 588645 --> Component",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:53:53",
        "slug": "c318",
        "subject": "#40 LONG: wants ESMF_GridCompGetCurrent() (2)"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:24:49",
        "slug": "726f",
        "subject": "#40 LONG: wants ESMF_GridCompGetCurrent() (2)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:40:41",
        "slug": "c02e",
        "subject": "#40 LONG: wants ESMF_GridCompGetCurrent() (2)"
      },
      {
        "text": "- **priority**: 5 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 15:05:30",
        "slug": "f00e",
        "subject": "#40 LONG: wants ESMF_GridCompGetCurrent() (2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\n\nWHO Tom Henderson from NCAR\r\n\r\n\r\nHi all,\r\n\r\nI'd like to request the following functionality, very\r\nsimilar in spirit to\r\nESMF\\_VMGetCurrent\\(\\). I'm going to propose it as interfaces just\r\nbecause it is easier for me to think about it that way -- I\r\ndon't have\r\na strong opinion about how these interfaces might actually\r\nlook \\(or\r\nwhether they are implemented as separate interfaces or...\\).\r\n\r\n1\\) I'd like an \"ESMF\\_GridCompGetCurrent\" that returns the\r\nESMF\\_GridComp most recently passed in as an argument to\r\nmycomp\\_init\\(\\), mycomp\\_run\\(\\), or mycomp\\_final\\(\\). By \"most\r\nrecently\" I mean going back up the call tree, not temporal.\r\nIf this\r\nnew interface is not called from somewhere beneath a\r\nmycomp\\_init\\(\\), mycomp\\_run\\(\\), or mycomp\\_final\\(\\), it is an error.\r\n\r\n2\\) I'd like an \"ESMF\\_StateGetCurrentImport\" that behaves the\r\nsame way for the most recent import state.\r\n\r\n3\\) I'd like an ESMF\\_StateGetCurentExport\" that behaves the\r\nsame way for the most recent export state.\r\n\r\n4\\) I'd like an ESMF\\_ClockGetCurrent\" that behaves the same\r\nway for the most recent ESMF\\_Clock.\r\n\r\nThe rationale is the same as for ESMF\\_VMGetGlobal\\(\\) and\r\nESMF\\_VMGetCurrent\\(\\), already well-stated succinctly by Gerhard\r\n\\(see below\\).\r\n\r\nThere is some additional rationale related to\r\nFortran90-isms, the\r\nfact that ESMF objects are not passed as Fortran90 pointers\r\nthrough init, run, and final interfaces, the desire to avoid\r\nduplication of ESMF objects inside user code, and the desire to\r\navoid having user code restrict implmentation choices inside\r\nESMF objects. I'll proceed on these in stream-of-conciousness\r\norder and we can sort it out later if there is interest.\r\nFirst, one\r\neasy, low-impact, way of incorporating ESMF objects into\r\nexisting\r\ncode is to attach references to the object to already\r\nexisting user-\r\ncode objects. Ideally, interface changes in user code can be\r\nminimized or avoided if the user-objects are already being\r\npassed\r\nto places where ESMF objects are needed \\(a bigger \"if\" for some\r\nthan for others\\). Also, addition of use-association of ESMF\\_Mod\r\ncan be encapsulated within the user-object module\\(s\\) \\(where it\r\nalready exists in some cases\\). In other languages, attaching\r\nreferences to objects is reall\r\ny easy. But, we're in Fortran. Since the ESMF objects being\r\npassed in via \"init\", \"run\", and \"final\" are not Fortran\r\nPOINTERs\r\n\\(nor are they TARGETs\\), I can't point to them. So, I must make\r\nshallow copies via overloaded assignment operators and store\r\n\"copies\". At the moment, ESMF objects are just lightweight\r\nPOINTERs inside, so we're done. Once I've copied my ESMF\r\nobjects in to user-objects, I really don't really to copy\r\nthem back\r\nout because I know that there's really nothing but PONTERs\r\ninside. Alarm bells ring: now user-code has put a constraint on\r\nimplementation of ESMF objects. Addition of anything that is not\r\na POINTER will break user code. The alternative is explicit\r\ncopy-\r\nin copy-out in user code along with whatever else might be\r\nneeded\r\nto ensure that multiple copies stay in sync. We avoid all of\r\nthis\r\nwith the above proposal by providing interfaces via use-\r\nassociation at the point where the ESMF objects are actually\r\nneeded.\r\n\r\nThanks\\!\r\n\r\n\r\nTom\r\n",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 19:42:06",
        "slug": "c52a",
        "subject": "#40 LONG: wants ESMF_GridCompGetCurrent() (2)"
      },
      {
        "text": "- **summary**: LONG: wants ESMF_GridCompGetCurrent() --> LONG: wants ESMF_GridCompGetCurrent() (2)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-24 22:07:50",
        "slug": "04b5",
        "subject": "#40 LONG: wants ESMF_GridCompGetCurrent() (2)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:45:58",
        "slug": "be5c",
        "subject": "#40 LONG: wants ESMF_GridCompGetCurrent() (2)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-11-19 21:45:44",
        "slug": "629c",
        "subject": "#40 LONG: wants ESMF_GridCompGetCurrent() (2)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-08-06 18:11:12",
        "slug": "474a",
        "subject": "#40 LONG: wants ESMF_GridCompGetCurrent() (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-06 18:11:12",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d305a2718463761fbe802",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6f5d068c/",
  "ticket_num": 40,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-29 16:34:32"
},{
  "status": "open",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "tom h. suggested adding options to container delete\r\ncalls which ask for the entire contents to be deleted,\r\nnot just the container itself.   \\(for shared objects\r\nthis will almost certainly require reference counts to\r\nknow if this is the last reference to an object\\).",
  "labels": [
    "Base"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:GARBAGE: delete container function (?)",
  "discussion_thread": {
    "_id": "fb0c55d1",
    "posts": [
      {
        "text": "- **summary**: delete container function --> LONG: delete container function\n- **assigned_to**: donstark --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:19:41",
        "slug": "8e45",
        "subject": "#41 LONG:GARBAGE: delete container function (?)"
      },
      {
        "text": "- **labels**: 473029 --> 588642\n- **milestone**: 287654 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:23:01",
        "slug": "738c",
        "subject": "#41 LONG:GARBAGE: delete container function (?)"
      },
      {
        "text": "- **assigned_to**: theurich --> nobody\n- **labels**: 588642 --> Base",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:54:58",
        "slug": "087c",
        "subject": "#41 LONG:GARBAGE: delete container function (?)"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:24:32",
        "slug": "852a",
        "subject": "#41 LONG:GARBAGE: delete container function (?)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:41:15",
        "slug": "a4b9",
        "subject": "#41 LONG:GARBAGE: delete container function (?)"
      },
      {
        "text": "- **priority**: 5 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 15:03:42",
        "slug": "4cf4",
        "subject": "#41 LONG:GARBAGE: delete container function (?)"
      },
      {
        "text": "- **summary**: LONG: delete container function --> LONG:GARBAGE: delete container function",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-07 19:12:36",
        "slug": "f0f8",
        "subject": "#41 LONG:GARBAGE: delete container function (?)"
      },
      {
        "text": "- **summary**: LONG:GARBAGE: delete container function --> LONG:GARBAGE: delete container function (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:57:52",
        "slug": "b70c",
        "subject": "#41 LONG:GARBAGE: delete container function (?)"
      },
      {
        "text": "- **priority**: 2 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:45:42",
        "slug": "a562",
        "subject": "#41 LONG:GARBAGE: delete container function (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 21:45:42",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d305c2718463761fbe83b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/fb0c55d1/",
  "ticket_num": 41,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-29 16:39:26"
},{
  "status": "open",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "the current deallocation rule is 'whoever allocates it\r\nmust deallocate it' which is succinct and clear.       \r\n\r\nfor example, if the user allocates a fortran array and\r\ngives it to the array create call with ESMF\\_DATA\\_REF,\r\nthen when the array itself is deleted the data area\r\nwill not be deleted and the user must call deallocate\\(\\)\r\nwhen they are ready to release the space.\r\n\r\ntom h. wants an option to allocate a buffer for his own\r\nreasons, use it in an array create call with REF, but\r\nthen make another call which \"gives\" the space to the\r\nframework so it will be deallocated when the array is\r\ndeleted.",
  "labels": [
    "Array - Old"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:GARBAGE: wants more options on who del data area (?)",
  "discussion_thread": {
    "_id": "3cdec056",
    "posts": [
      {
        "text": "- **summary**: wants more options on who deletes data area --> LONG: wants more options on who deletes data area\n- **assigned_to**: donstark --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:19:04",
        "slug": "c228",
        "subject": "#42 LONG:GARBAGE: wants more options on who del data area (?)"
      },
      {
        "text": "- **milestone**: 287654 --> \n- **labels**: 531937 --> 588641",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:23:26",
        "slug": "27cd",
        "subject": "#42 LONG:GARBAGE: wants more options on who del data area (?)"
      },
      {
        "text": "- **labels**: 588641 --> Array - Old\n- **assigned_to**: theurich --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:52:22",
        "slug": "95d8",
        "subject": "#42 LONG:GARBAGE: wants more options on who del data area (?)"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:24:20",
        "slug": "f58a",
        "subject": "#42 LONG:GARBAGE: wants more options on who del data area (?)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:28:41",
        "slug": "4d9d",
        "subject": "#42 LONG:GARBAGE: wants more options on who del data area (?)"
      },
      {
        "text": "- **priority**: 5 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 15:03:27",
        "slug": "4a2c",
        "subject": "#42 LONG:GARBAGE: wants more options on who del data area (?)"
      },
      {
        "text": "- **summary**: LONG: wants more options on who deletes data area --> LONG:GARBAGE: wants more options on who deletes data area",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-07 19:12:01",
        "slug": "fc08",
        "subject": "#42 LONG:GARBAGE: wants more options on who del data area (?)"
      },
      {
        "text": "- **summary**: LONG:GARBAGE: wants more options on who deletes data area --> LONG:GARBAGE: wants more options on who del data area (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:57:34",
        "slug": "9a7a",
        "subject": "#42 LONG:GARBAGE: wants more options on who del data area (?)"
      },
      {
        "text": "- **priority**: 2 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:45:25",
        "slug": "b2f8",
        "subject": "#42 LONG:GARBAGE: wants more options on who del data area (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 21:45:25",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d305e2718463761fbe86f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3cdec056/",
  "ticket_num": 42,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-29 16:58:29"
},{
  "status": "open",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "tom h. mentioned that at some point he'll want E-grid\r\nsupport in the grid code \\(which implies field, redist,\r\nregrid, etc. support, but i can't assign a bug to the\r\nentire group so jon wins here...\\)",
  "labels": [
    "DistGrid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Test to demo that E-grid staggers can be support ",
  "discussion_thread": {
    "_id": "8c446721",
    "posts": [
      {
        "text": "- **summary**: wants E grid support --> LONG: wants E grid support",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:17:02",
        "slug": "1538",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      },
      {
        "text": "- **milestone**: 287654 --> \n- **labels**: 473025 --> 588649",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:22:31",
        "slug": "11ab",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      },
      {
        "text": "- **labels**: 588649 --> 904965\n- **assigned_to**: donstark --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:54:26",
        "slug": "8d7d",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      },
      {
        "text": "- **assigned_to**: nobody --> donstark",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:23:59",
        "slug": "fd1c",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:27:55",
        "slug": "f8ae",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      },
      {
        "text": "- **priority**: 5 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:52:52",
        "slug": "8713",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      },
      {
        "text": "Logged In: YES \nuser\\_id=1453265\n\nImplementation will be tasked to task \\#125688 Impl of regrid for multipatch curvilinear grids.",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:21:22",
        "slug": "ad7f",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      },
      {
        "text": "- **summary**: LONG: wants E grid support --> LONG: wants E grid support (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:21:22",
        "slug": "7691",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      },
      {
        "text": "- **priority**: 3 --> 9",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 17:11:49",
        "slug": "9f62",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      },
      {
        "text": "- **summary**: LONG: wants E grid support (12/12) --> LONG:nGRD: E grid support (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-11-03 00:19:24",
        "slug": "9bbe",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      },
      {
        "text": "- **summary**: LONG:nGRD: E grid support (12/12) --> LONG:nGRD: E grid support (12)\n- **assigned_to**: donstark --> oehmke\n- **labels**: 904965 --> DistGrid - New",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:57:02",
        "slug": "8a57",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      },
      {
        "text": "- **priority**: 9 --> 5\n- **summary**: LONG:nGRD: E grid support (12) --> Test to demo that E-grid staggers can be support ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:35:10",
        "slug": "6070",
        "subject": "#43 Test to demo that E-grid staggers can be support "
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:35:10",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30602718463761fbe8a3",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/8c446721/",
  "ticket_num": 43,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-29 17:00:49"
},{
  "status": "open",
  "reported_by_id": "519d0169e88f3d628adf1ddb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "nscollins",
  "description": "tom h. points out that as long as our fortran top level\r\nderived types only contain a pointer to the actual\r\nderived type, then assigning like this:\r\n\r\ntype\\(ESMF\\_Field\\) :: a, b\r\n\r\na = ESMF\\_FieldCreate\\(\\)\r\nb = a\r\n\r\nmeans you have 2 references to a single object and any\r\ncalls to 'b' give you identical answers as 'a', and\r\nmore importantly, any calls using 'b' which change the\r\nobject \\(e.g. add an attribute\\) will behave correctly as\r\na reference - querying 'a' will show the change.\r\n\r\nbut he also pointed out that if we simply allowed\r\ndirect pointers to the actual object then there might\r\nbe less confusion about what is an object, what is a\r\ncopy of that object, and what is a reference.\r\n\r\ncalling with a pointer into a routine which has an\r\nobject as the argument generates automatic dereference\r\ncode, so this might not mean overloading every fortran\r\nentry point.  but it is an open issue that someone\r\nshould sit down with at some point and investigate, and\r\nis closely related to the \"orthodox canonical form\"\r\ndiscussion in which each object needs not only a create\r\nand destroy method \\(constructor and destructor\\) but a\r\ncopy operator \\(which we don't have\\) and an explicit\r\nassignment operator \\(which we only have by default\r\nbecause assigning a derived type does an item-by-item\r\nassignment and the container only has a single entry, a\r\npointer, inside\\).\r\n\r\nat one point we had talked about adding a flag to the\r\nouter derived type to indicate if the pointer was valid\r\n\\(for compilers which did not support initializers\r\ncorrectly\\) - but that would violate the \"assignment as\r\nreference\" behavior.\r\n",
  "labels": [
    "Base"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: do we need pointer interfaces to objects? (?)",
  "discussion_thread": {
    "_id": "381c14df",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:14:51",
        "slug": "5633",
        "subject": "#44 LONG: do we need pointer interfaces to objects? (?)"
      },
      {
        "text": "- **summary**: do we need pointer interfaces to objects? --> LONG: do we need pointer interfaces to objects?",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:15:23",
        "slug": "c0a6",
        "subject": "#44 LONG: do we need pointer interfaces to objects? (?)"
      },
      {
        "text": "- **milestone**: 287002 --> \n- **labels**: 473029 --> 588642",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:21:08",
        "slug": "a96e",
        "subject": "#44 LONG: do we need pointer interfaces to objects? (?)"
      },
      {
        "text": "- **assigned_to**: theurich --> nobody\n- **labels**: 588642 --> Base",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 17:55:32",
        "slug": "9ec7",
        "subject": "#44 LONG: do we need pointer interfaces to objects? (?)"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 18:22:36",
        "slug": "cdbb",
        "subject": "#44 LONG: do we need pointer interfaces to objects? (?)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 02:27:41",
        "slug": "b44b",
        "subject": "#44 LONG: do we need pointer interfaces to objects? (?)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:27:59",
        "slug": "e9be",
        "subject": "#44 LONG: do we need pointer interfaces to objects? (?)"
      },
      {
        "text": "- **summary**: LONG: do we need pointer interfaces to objects? --> LONG: do we need pointer interfaces to objects? (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:56:22",
        "slug": "74c1",
        "subject": "#44 LONG: do we need pointer interfaces to objects? (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 18:56:22",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30622718463761fbe8e8",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/381c14df/",
  "ticket_num": 44,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-08-29 17:46:07"
},{
  "status": "open",
  "reported_by_id": "519d016ee88f3d628adf1e85",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jwolfe",
  "description": "Steve Lowder wrote:\r\n\r\n\" It must be looking like Fall in Boulder.\r\n\r\nI have a question on user log files.  I want to create a user log file \r\nin the application driver and then use it into some components. \r\nUsually I would open it in the driver and pass the id/handle around.  \r\nWith ESMF I\u77e5 not sure what do to here. I could pass the name \r\naround in the config and have everyone open the file but that seems \r\nlike a lot of file handles.  Can I attach the log type to something and \r\npass it around? I\u77e5 open to suggestions.\r\n\r\nThanks again,\r\n\r\nSteve Lowder\"",
  "labels": [
    "LogErr"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "LONG: handles for Log files (?)",
  "discussion_thread": {
    "_id": "412f46e9",
    "posts": [
      {
        "text": "- **milestone**:  --> 367129",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-27 20:29:17",
        "slug": "e7cb",
        "subject": "#45 LONG: handles for Log files (?)"
      },
      {
        "text": "- **assigned_to**: jwolfe --> eschwab",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-02-03 22:30:49",
        "slug": "812e",
        "subject": "#45 LONG: handles for Log files (?)"
      },
      {
        "text": "- **milestone**: 367129 --> 155253",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:05:07",
        "slug": "71b4",
        "subject": "#45 LONG: handles for Log files (?)"
      },
      {
        "text": "- **assigned_to**: eschwab --> samsoncheung",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 22:38:32",
        "slug": "13d3",
        "subject": "#45 LONG: handles for Log files (?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nSteve Lowder is no longer with us, but we should analyse his request to see if it is something that should be considered for the future.  This will be looked at the May 2007 ticket review meeting. ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-05-11 19:07:04",
        "slug": "05ed",
        "subject": "#45 LONG: handles for Log files (?)"
      },
      {
        "text": "- **labels**: 657426 --> LogErr\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-05-11 19:07:04",
        "slug": "9c45",
        "subject": "#45 LONG: handles for Log files (?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nWe did examine this one again during 6/07, and decided to keep it open.  ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-06-08 21:44:33",
        "slug": "df4d",
        "subject": "#45 LONG: handles for Log files (?)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **priority**: 5 --> 2\n- **summary**: user log file names --> LONG: handles for Log files",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-06-08 21:44:33",
        "slug": "10e2",
        "subject": "#45 LONG: handles for Log files (?)"
      },
      {
        "text": "- **assigned_to**: samsoncheung --> nobody\n- **summary**: LONG: handles for Log files --> LONG: handles for Log files (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:55:25",
        "slug": "d12b",
        "subject": "#45 LONG: handles for Log files (?)"
      },
      {
        "text": "- **priority**: 2 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:44:57",
        "slug": "5990",
        "subject": "#45 LONG: handles for Log files (?)"
      },
      {
        "text": "- **assigned_to**: nobody --> w6ws",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:07:18",
        "slug": "d127",
        "subject": "#45 LONG: handles for Log files (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-06 18:07:18",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30632718463761fbe917",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/412f46e9/",
  "ticket_num": 45,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-09-27 21:12:22"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Silverio Vasquez from ESMF core\r\n\r\nTo help users understand and set  their environments\r\nbefore building and using the ESMF, a web interface\r\nwould be ideal.\r\nThe web interface would be interactive to walk the user\r\nthrough each environment variable, explaining the\r\nsignificance and the options available.\r\nThe web page would cover what  is supported and\r\ninstruct the user how to handle unsupported platforms\r\nand compilers. It would also cover where to find\r\ncompiler libraries.",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "LONG: Provide a web interface to help w build env. (12)",
  "discussion_thread": {
    "_id": "3b0982a6",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=562208\n\n",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-27 21:10:41",
        "slug": "867c",
        "subject": "#46 LONG: Provide a web interface to help w build env. (12)"
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:31:29",
        "slug": "d718",
        "subject": "#46 LONG: Provide a web interface to help w build env. (12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\n\nI am going to assign this to me even though the probability\r\nof it happening in my lifetime is limited. It does point out\r\nall of the issues associated with running the system and is\r\nsimiliar to other HPC simplication requests received by NCAR\r\ne.g. \"I don't want to know anything about HPC to run a model\"\r\n\r\nsylvia",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-09-29 16:40:05",
        "slug": "fe33",
        "subject": "#46 LONG: Provide a web interface to help w build env. (12)"
      },
      {
        "text": "- **assigned_to**: svasquez --> murphysj",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-09-29 16:40:05",
        "slug": "eca7",
        "subject": "#46 LONG: Provide a web interface to help w build env. (12)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:27:03",
        "slug": "bc17",
        "subject": "#46 LONG: Provide a web interface to help w build env. (12)"
      },
      {
        "text": "- **summary**: Provide a web interface to help users setup build env. --> LONG: Provide a web interface to help users setup build env.\n- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 01:39:57",
        "slug": "2c73",
        "subject": "#46 LONG: Provide a web interface to help w build env. (12)"
      },
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 284120 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 23:02:30",
        "slug": "d93f",
        "subject": "#46 LONG: Provide a web interface to help w build env. (12)"
      },
      {
        "text": "- **milestone**:  --> Add Other Capability\n- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 23:03:20",
        "slug": "c53a",
        "subject": "#46 LONG: Provide a web interface to help w build env. (12)"
      },
      {
        "text": "- **summary**: LONG: Provide a web interface to help users setup build env. --> LONG: Provide a web interface to help w build env. (12)\n- **assigned_to**: murphysj --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:54:46",
        "slug": "a9bb",
        "subject": "#46 LONG: Provide a web interface to help w build env. (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 18:54:46",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30652718463761fbe957",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3b0982a6/",
  "ticket_num": 46,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2005-11-10 23:49:15"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Arlindo da Silva from GSFC\r\n\r\nRequested that we provide the binary files as a part of\r\npublic releases.",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Provide binary files with public releases (?)",
  "discussion_thread": {
    "_id": "e21ec456",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=562208\n\n",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-27 21:07:57",
        "slug": "c314",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "- **milestone**: 367128 --> 495011",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:27:45",
        "slug": "22c2",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "- **assigned_to**: svasquez --> oehmke",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-03 16:27:19",
        "slug": "a419",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "- **milestone**: 495011 --> \n- **labels**: 509038 --> Build/Install",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:35:34",
        "slug": "d32d",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:40:39",
        "slug": "7c6e",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "- **assigned_to**: oehmke --> nobody",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-27 17:09:56",
        "slug": "e697",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nMemorandum for the record:\r\n\r\nthere was no record that this had been moved to feature requests.\r\n\r\nsylvia",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-07-25 15:08:33",
        "slug": "3137",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "- **summary**: Provide binary files with public releases --> Provide binary files with public releases (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:53:56",
        "slug": "371a",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-05 16:16:34",
        "slug": "a3ec",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nConsider doing this for the Fedora work \\(ticket \\#1881875\\).\r\n\r\nWalter",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-05 16:17:02",
        "slug": "fd5d",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "- **assigned_to**: nobody --> w6ws\n- **priority**: 5 --> 1",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-05 16:17:02",
        "slug": "5d3f",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "- **priority**: 1 --> 5",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-05 16:21:26",
        "slug": "806b",
        "subject": "#47 Provide binary files with public releases (?)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-11-05 18:03:39",
        "slug": "5bb4",
        "subject": "#47 Provide binary files with public releases (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 18:03:39",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30672718463761fbe98c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e21ec456/",
  "ticket_num": 47,
  "custom_fields": {
    "_priority": "1"
  },
  "created_date": "2005-11-10 23:53:29"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Henderson from NCAR\r\n\r\nhi tom,\r\n\r\nthis is to summarize our call, where you are looking at\r\nthe grid calls which return the number of points in a grid.\r\n\r\nfor a regional model where the edges are \\*not\\* periodic,\r\nand for a C grid staggering, there are:  cell centered\r\npoints,\r\nU points on the north and south faces, and V points on the\r\neast and west faces.   you were expecting if you asked the\r\ngrid for the C point count you'd get back a count equal to\r\nthe number of cells, but for U you'd get back one more on\r\nthe J axis, and for V you'd get back one more on the I\r\naxis.\r\n\r\nyour request is for us to add some kind of support for\r\nthis type of staggering, which differs from a periodic\r\nglobal\r\nmodel in that the east face of the highest cell number is\r\nin fact the west face of the lowest cell number and\r\ntherefore\r\nthe U point count is the same as the C point count.\r\n\r\nis this roughly a fair transcription of this part of our\r\nconversation?\r\n\r\nnancy\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:nGRD:Staggering and grid counts (12)",
  "discussion_thread": {
    "_id": "20de6886",
    "posts": [
      {
        "text": "- **assigned_to**: jwolfe --> nscollins",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-27 18:38:59",
        "slug": "7a98",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 17:03:27",
        "slug": "5346",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "- **milestone**: 284120 --> 356870\n- **assigned_to**: nscollins --> donstark",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:23:50",
        "slug": "eef6",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "- **milestone**: 356870 --> 284120",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:10:30",
        "slug": "abae",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "- **priority**: 5 --> 4\n- **milestone**: 284120 --> \n- **labels**: 588649 --> 904965",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 22:56:25",
        "slug": "b76a",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1453265\n\nImplementation will be tasked to task \\#125688 Impl of regrid for multipatch curvilinear grids.",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:20:56",
        "slug": "0d81",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "- **summary**: Staggering and grid counts --> Staggering and grid counts (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-25 15:20:56",
        "slug": "fea6",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "- **priority**: 4 --> 9",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-10-27 17:11:27",
        "slug": "d89e",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "- **summary**: Staggering and grid counts (12/12) --> LONG:nGRD:Staggering and grid counts (12/12)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2006-11-03 00:19:05",
        "slug": "eca3",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "- **labels**: 904965 --> Grid - New\n- **summary**: LONG:nGRD:Staggering and grid counts (12/12) --> LONG:nGRD:Staggering and grid counts (12)\n- **assigned_to**: donstark --> oehmke\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:53:37",
        "slug": "b670",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-10 19:48:36",
        "slug": "ef23",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "From Tom H:\r\n\r\nYes, please close the ticket. \r\n\r\nThanks\\!\r\n\r\n\r\n\\------Original Message------\r\nFrom: Robert Oehmke\r\nTo: Tom Henderson\r\nCc: ESMF Support\r\nSubject: \\[1354457\\] Staggering and grid counts\r\nSent: Sep 10, 2008 1:46 PM\r\n\r\nHi Tom,\r\n\r\nWe're working on clearing out some of our old tickets. In this one  \r\nyou ask\r\nfor the global number of grid points to vary depending on the stagger  \r\nlocation \\(e.g. a regional grid\\).\r\nIn particular, for a C grid for the u stagger to have 1 more point in  \r\nthe j axis\r\nthan the center, and for the v to have one more point in the i axis  \r\nthan the center.\r\n\r\nThe new grid supports having different numbers of points on  \r\ndifferent stagger locations.\r\nThere is a default, which would be what you described, and the user  \r\ncan also set the\r\npadding to a user defined value.\r\n\r\nOne small wrinkle is that we don't currently have a call to get the  \r\nglobal grid count,\r\nbut there is a call that allows you to retrieve the global upper and  \r\nlower boundary\r\nfor a stagger location in a grid. The global count is then just upper- \r\nlower+1.\r\n\r\nTo see an example of all of this look in Grid/tests/ \r\nESMF\\_GridCreateUTest.F90 at \"Test getting minIndex\r\nand maxIndex for 2D Grid\".\r\n\r\nMay I close the ticket?\r\n\r\nThanks,\r\n\r\n\\- Bob\r\n\r\n\r\n\r\n\r\n\r\nSent from my Verizon Wireless BlackBerry\r\n",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-10 20:07:24",
        "slug": "79f5",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-10 20:07:24",
        "slug": "361c",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      },
      {
        "text": "From Tom H:\r\n\r\nYes, please close the ticket. \r\n\r\nThanks\\!\r\n\r\n\r\n\\------Original Message------\r\nFrom: Robert Oehmke\r\nTo: Tom Henderson\r\nCc: ESMF Support\r\nSubject: \\[1354457\\] Staggering and grid counts\r\nSent: Sep 10, 2008 1:46 PM\r\n\r\nHi Tom,\r\n\r\nWe're working on clearing out some of our old tickets. In this one  \r\nyou ask\r\nfor the global number of grid points to vary depending on the stagger  \r\nlocation \\(e.g. a regional grid\\).\r\nIn particular, for a C grid for the u stagger to have 1 more point in  \r\nthe j axis\r\nthan the center, and for the v to have one more point in the i axis  \r\nthan the center.\r\n\r\nThe new grid supports having different numbers of points on  \r\ndifferent stagger locations.\r\nThere is a default, which would be what you described, and the user  \r\ncan also set the\r\npadding to a user defined value.\r\n\r\nOne small wrinkle is that we don't currently have a call to get the  \r\nglobal grid count,\r\nbut there is a call that allows you to retrieve the global upper and  \r\nlower boundary\r\nfor a stagger location in a grid. The global count is then just upper- \r\nlower+1.\r\n\r\nTo see an example of all of this look in Grid/tests/ \r\nESMF\\_GridCreateUTest.F90 at \"Test getting minIndex\r\nand maxIndex for 2D Grid\".\r\n\r\nMay I close the ticket?\r\n\r\nThanks,\r\n\r\n\\- Bob\r\n\r\n\r\n\r\n\r\n\r\nSent from my Verizon Wireless BlackBerry\r\n",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-10 20:25:36",
        "slug": "9699",
        "subject": "#48 LONG:nGRD:Staggering and grid counts (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-10 20:07:24",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30692718463761fbe9d7",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/20de6886/",
  "ticket_num": 48,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-11-11 21:04:46"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Henderson from NCAR\r\n\r\nhi tom,\r\n\r\nthis is to summarize our conversation about\r\nundistributed grids.\r\n\r\nyour suggestion was that after ESMF\\_GridCreate\\(\\)\r\nreturns, that\r\nit contains a default DistGrid which describes an\r\nundecomposed\r\ngrid which is valid and could be used in nondistributed\r\noperations\r\nwith no call to ESMF\\_GridDistribute\\(\\).    on the other\r\nhand, if\r\nESMF\\_GridDistribute\\(\\) is called, then the default DistGrid\r\nwould be discarded and replaced with a real distributed\r\nobject\r\nbased on the DELayout and other arguments to the\r\nDistribute\\(\\) call.\r\n\r\nyou pointed out that there are a couple scenarios where\r\nyou'd want\r\nan undistributed grid.  one is where it isn't worth\r\ntrying to do an\r\ninfrequent operation in parallel; that it's faster for\r\neach processor to\r\ncreate the entire data grid and operate independently,\r\nreplicating work but saving overall time.  in this case\r\neach grid wouldn't need to know anything about how many\r\nother DEs or PETs are involved.\r\n\r\nthe other scenario is where you'd want to do a\r\nFieldGather to a single root, then operate on the data,\r\nthen do a FieldScatter.  or similarly, read in all data\r\nonto a single processor and do a Scatter.  the\r\ngather/scatter would logically require a grid in which\r\nall the PETs knew about the Grid but the data was only\r\ndefined on a single PET.  In this case perhaps the\r\ndefault DistGrid would in fact have to be created with\r\nall the points on the local processor for the\r\ncommunications to operate correctly.\r\n\r\nbut either way your request is for more support of\r\nundistributed Grid options.\r\n\r\nis this roughly right?\r\nthanks,\r\nnancy\r\n\r\n\r\n",
  "labels": [
    "Grid - Old"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:UNDIST_GRD:Undistributed Grids (7)",
  "discussion_thread": {
    "_id": "5992bd57",
    "posts": [
      {
        "text": "- **assigned_to**: jwolfe --> nscollins",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-27 18:42:11",
        "slug": "2722",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "- **assigned_to**: nscollins --> nobody",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-02-03 21:48:15",
        "slug": "11b5",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 17:02:05",
        "slug": "5d5e",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\n\nWill Sawyer is also interested in replicated data",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:30:04",
        "slug": "f8bf",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:26:36",
        "slug": "dc0e",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "- **priority**: 1 --> 5\n- **summary**: Undistributed Grids --> LONG: Undistributed Grids\n- **assigned_to**: nobody --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 01:35:03",
        "slug": "79a4",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "- **milestone**: 284120 --> \n- **labels**: 588649 --> Grid - Old\n- **priority**: 5 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 22:53:05",
        "slug": "e822",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 22:53:28",
        "slug": "18d2",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "- **summary**: LONG: Undistributed Grids --> LONG: Undistributed Grids (2/4)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 16:00:12",
        "slug": "5f8c",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "- **summary**: LONG: Undistributed Grids (2/4) --> LONG: Undistributed Grids (2/5)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 16:01:47",
        "slug": "d74c",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "- **summary**: LONG: Undistributed Grids (2/5) --> LONG:UNDIST_GRD:Undistributed Grids (2/5)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:38:27",
        "slug": "7d5c",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "- **summary**: LONG:UNDIST_GRD:Undistributed Grids (2/5) --> LONG:UNDIST_GRD:Undistributed Grids (7)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:45:30",
        "slug": "17b9",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 00:47:08",
        "slug": "bfc2",
        "subject": "#49 LONG:UNDIST_GRD:Undistributed Grids (7)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-19 00:47:08",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d306c2718463761fbea27",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/5992bd57/",
  "ticket_num": 49,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-11-11 21:15:33"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Riccardo Rigon \r\n\r\nDear support,\r\n\r\nI am willing to port my distributed model, GEOtop, to\r\nthe ESMF. However, I would need tutorials and\r\ninterfaces in C++ which is my langiage of choice. Would\r\nyou please to tell me which is the state of art of the\r\ndevelopment\r\nin this sense and where I can find related information ?\r\n\r\nThank you in advance for any help, \r\n\r\nRiccardo Rigon\r\n\r\n\r\n\r\n",
  "labels": [
    "Language Interface"
  ],
  "assigned_to": "rosalind",
  "assigned_to_id": "4d564049bfc09e144e03bb04",
  "private": false,
  "summary": "LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)",
  "discussion_thread": {
    "_id": "c8662c96",
    "posts": [
      {
        "text": "- **assigned_to**: jwolfe --> cdeluca",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-02-03 21:18:05",
        "slug": "a9e9",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **milestone**: 367128 --> 155253",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:55:17",
        "slug": "d98a",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **milestone**: 155253 --> 284120\n- **labels**: 588640 --> 881192",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:06:18",
        "slug": "c680",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:26:14",
        "slug": "2715",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **priority**: 1 --> 5\n- **summary**: Porting GEOtop to ESMF --> LONG: Porting GEOtop to ESMF",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:21:05",
        "slug": "ac72",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **assigned_to**: cdeluca --> murphysj\n- **labels**: 881192 --> Language Interface\n- **milestone**: 284120 --> \n- **summary**: LONG: Porting GEOtop to ESMF --> LONG: Needs C++ interface to port GEOtop",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 22:13:30",
        "slug": "5c45",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 22:17:51",
        "slug": "5243",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 22:18:08",
        "slug": "1a54",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **assigned_to**: murphysj --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-27 17:15:00",
        "slug": "8369",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **summary**: LONG: Needs C++ interface to port GEOtop --> LONG:C_INTERF: Needs C++ interface to port GEOtop",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-03 18:42:03",
        "slug": "8cad",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **summary**: LONG:C_INTERF: Needs C++ interface to port GEOtop --> LONG:C_INTERF: Needs C++ interface to port GEOtop (40)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:47:25",
        "slug": "7527",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **assigned_to**: theurich --> rosalind",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-01-18 20:25:34",
        "slug": "3e3e",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      },
      {
        "text": "- **priority**: 9 --> 5\n- **summary**: LONG:C_INTERF: Needs C++ interface to port GEOtop (40) --> LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-05 16:14:26",
        "slug": "b5b1",
        "subject": "#50 LONG:C++_INTERF: Needs C++ interface to port GEOtop (40)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-05 16:14:26",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d306e2718463761fbea71",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c8662c96/",
  "ticket_num": 50,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-12-09 20:23:30"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Peggy Li from JPL\r\n\r\nI created a grid using ESMF\\_GridCreateHorzLatLon\\(\\) in\r\none grid component, attached it to its export state to\r\npass to the coupler component as its import state.   In\r\nthe coupler component, I would like to create the same\r\nHorizontal LatLon grid but with a different DELayout. \r\nI need to have the lat/lon coordinate arrays to\r\ncreate the grid.  How can I extract the coordinate\r\narrays from the first grid passed in from the import\r\nstate?   ESMF\\_GridGetCoord\\(\\) only gives me the\r\ncoordinates of the local data points.  Is there a\r\nfunction call to find the global grid coordinates?\r\n\r\nThanks,\r\npeggy\r\n",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:UNDIST_GRD: Function call to find global grid coord(12)",
  "discussion_thread": {
    "_id": "03c9de89",
    "posts": [
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:31:28",
        "slug": "fc09",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **milestone**: 284120 --> 356870",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 20:41:17",
        "slug": "9e40",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **assigned_to**: jwolfe --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 20:47:33",
        "slug": "89e5",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **assigned_to**: nobody --> peggyli",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 18:04:04",
        "slug": "f236",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **milestone**: 356870 --> 284120",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:10:20",
        "slug": "e37f",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **milestone**: 284120 --> 155253",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 15:14:22",
        "slug": "f4b2",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **priority**: 5 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 22:49:47",
        "slug": "7bde",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **summary**: Function call to find global grid coordinates --> LONG: Function call to find global grid coordinates(4)\n- **labels**: 588649 --> 904965\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2006-10-25 15:49:09",
        "slug": "abf2",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nWHO: Erik Kluzek\r\n\r\nHi Guys\r\n\r\nI've known about this for a while, and I may have alluded to it as a problem in the past.\r\n\r\nThe ESMF subroutine ESMF\\_GridGetCoords is the only way to get grid coordinates from a grid. When I first started using it I thought it returned the global grid coordinates, but after using it for a while I figured out that it was only returning the local grid coordinates. So in order to get the global grid coordinates I have to do the following\r\n\r\nEither...\r\n\r\nUse ESMF\\_GridGetCoords to get the local lat and lon.\r\nUse ESMF\\_GridDELocaltoGlobalIndex to get the local global indices for those lat/lon.\r\nDo a MPI gather on the lat,lon,and lat/lon indices. Note I can't use ESMF methods for the communication as all ESMF\r\ncommunication methods are gather/scatter NOT gatherv/scatterv as some of our arbitrary grids have different  sizes between PEs.\r\n\r\nThis is a lot to ask for from a user. I've developed a workaround for this for Stage-1. But, it seems clear to me that this is something that ESMF should provide to users -- the ability to get the global grid easily using a ESMF\\_Grid method directly. For Stage-1, I'll have my own version to do this, but it would be good to have it replaced by an easy to use ESMF method for Stage-2.\r\n\r\nIn my workaround all I need to do is test that the grid-points are the same on two grids, so I do a ESMF\\_BundleRedist to redistribute fields with lat and lon on them to the same decomposition. It's possible that the BundleRedist itself may detect that the fields are on different grids and abort at that point as well -- which would be fine. But I haven't tested that to this point.\r\n\r\nErik Kluzek, \\(CGD at NCAR\\)\r\nNational Center for Atmospheric Research\r\nBoulder CO, \\(off\\) \\(303\\)497-1326 \\(fax\\) \\(303\\)497-1314\r\n\\------------------ Home page ------------------------\r\nhttp://www.cgd.ucar.edu/~erik\r\n\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\r\n\r\n\r\n",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-15 17:35:28",
        "slug": "56d5",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nWHO: Erik Kluzek\r\n\r\nHi Guys\r\n\r\nI've known about this for a while, and I may have alluded to it as a problem in the past.\r\n\r\nThe ESMF subroutine ESMF\\_GridGetCoords is the only way to get grid coordinates from a grid. When I first started using it I thought it returned the global grid coordinates, but after using it for a while I figured out that it was only returning the local grid coordinates. So in order to get the global grid coordinates I have to do the following\r\n\r\nEither...\r\n\r\nUse ESMF\\_GridGetCoords to get the local lat and lon.\r\nUse ESMF\\_GridDELocaltoGlobalIndex to get the local global indices for those lat/lon.\r\nDo a MPI gather on the lat,lon,and lat/lon indices. Note I can't use ESMF methods for the communication as all ESMF\r\ncommunication methods are gather/scatter NOT gatherv/scatterv as some of our arbitrary grids have different  sizes between PEs.\r\n\r\nThis is a lot to ask for from a user. I've developed a workaround for this for Stage-1. But, it seems clear to me that this is something that ESMF should provide to users -- the ability to get the global grid easily using a ESMF\\_Grid method directly. For Stage-1, I'll have my own version to do this, but it would be good to have it replaced by an easy to use ESMF method for Stage-2.\r\n\r\nIn my workaround all I need to do is test that the grid-points are the same on two grids, so I do a ESMF\\_BundleRedist to redistribute fields with lat and lon on them to the same decomposition. It's possible that the BundleRedist itself may detect that the fields are on different grids and abort at that point as well -- which would be fine. But I haven't tested that to this point.\r\n\r\nErik Kluzek, \\(CGD at NCAR\\)\r\nNational Center for Atmospheric Research\r\nBoulder CO, \\(off\\) \\(303\\)497-1326 \\(fax\\) \\(303\\)497-1314\r\n\\------------------ Home page ------------------------\r\nhttp://www.cgd.ucar.edu/~erik\r\n\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\r\n\r\n\r\n",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-15 17:38:21",
        "slug": "ae8d",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **summary**: LONG: Function call to find global grid coordinates(4) --> LONG:GI_FLD:Function call to find global grid coordinates(4)\n- **assigned_to**: peggyli --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-15 20:27:53",
        "slug": "3988",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **summary**: LONG:GI_FLD:Function call to find global grid coordinates(4) --> LONG:GI_FLD:Function call to find global grid coord(4/8)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-15 20:28:34",
        "slug": "9264",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **summary**: LONG:GI_FLD:Function call to find global grid coord(4/8) --> LONG:GI_FLD: Function call to find global grid coord(4/8)\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-15 20:31:32",
        "slug": "a3e2",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nNote that mail from Erik Kluzek \\(see comments\\) with the same request for\r\nglobal coords has been mistakenly associated with this request\\#. It is\r\nnow filed under 1192688. - Cecelia ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-15 20:45:58",
        "slug": "fc22",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **summary**: LONG:GI_FLD: Function call to find global grid coord(4/8) --> LONG:GI_FLD: Function call to find global grid coord(12)\n- **priority**: 2 --> 5\n- **labels**: 904965 --> Grid - New",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:36:25",
        "slug": "715f",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "- **summary**: LONG:GI_FLD: Function call to find global grid coord(12) --> LONG:UNDIST_GRD: Function call to find global grid coord(12)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:38:46",
        "slug": "4414",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nWe think to address these UNDIST\\_GRD tickets that what may actually\r\nbe needed is a redist of grid coordinates.    - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:46:33",
        "slug": "ea32",
        "subject": "#51 LONG:UNDIST_GRD: Function call to find global grid coord(12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 18:38:46",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30702718463761fbeabb",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/03c9de89/",
  "ticket_num": 51,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2005-12-22 16:02:27"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Shujia Zhou from GSFC\r\n\r\nHi,\r\n\r\n\r\nWe are interested in using esmf io utility. I\r\n\r\nread the esmf reference and attach it below.\r\n\r\nI look at the system test and src, there is no example.\r\n\r\nSo what is the current capability of esmf io. Is the wrf io\r\n\r\nstill supported? I assume that I still can use field to\r\noutput\r\n\r\ndata where esmf will combine the decomposed array into\r\n\r\na whole array and output it to root pet.\r\n\r\n\r\nThanks,\r\n\r\n\r\nshujia\r\n\r\n\r\n\r\n",
  "labels": [
    "I/O"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "LONG:IO Implementation of ESMF I/O (20)",
  "discussion_thread": {
    "_id": "5c012bb3",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> cdeluca",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-26 16:33:05",
        "slug": "2406",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **milestone**: 367128 --> 155253",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:25:43",
        "slug": "2e8a",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **labels**: 588650 --> I/O\n- **assigned_to**: cdeluca --> oehmke\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 14:59:27",
        "slug": "dde0",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **priority**: 5 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 14:59:58",
        "slug": "3c6e",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **summary**: Use of ESMF I/O --> LONG: Implementation of ESMF I/O (20)\n- **assigned_to**: oehmke --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-01 06:25:19",
        "slug": "1e81",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **assigned_to**: nobody --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-01 06:27:27",
        "slug": "6efd",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **summary**: LONG: Implementation of ESMF I/O (20) --> LONG: Implementation of ESMF I/O (5/15)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-01 06:51:16",
        "slug": "7b5f",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **summary**: LONG: Implementation of ESMF I/O (5/15) --> LONG:IO Implementation of ESMF I/O (5/15)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-10-30 19:00:41",
        "slug": "e63e",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **assigned_to**: oehmke --> nobody\n- **summary**: LONG:IO Implementation of ESMF I/O (5/15) --> LONG:IO Implementation of ESMF I/O (20)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:34:51",
        "slug": "b349",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **priority**: 2 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:44:34",
        "slug": "4cbb",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **assigned_to**: nobody --> eschwab",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:03:39",
        "slug": "9d31",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 14:56:33",
        "slug": "547a",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **assigned_to**: eschwab --> samsoncheung",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2010-11-05 18:26:59",
        "slug": "7624",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "Note:  Shujia's customer has changed requirement and may not have immediate urgency to use the IO features, but he wanted to know what formats and what ESMF objects are supported.  Those are explained on the phone.\r\n\r\n\r\nOn Thu, January 13, 2011 10:19 am, Samson Cheung wrote:\r\n&gt; Hi Shujia,\r\n&gt; \r\n&gt; Nice talking to you, and it was easy to answer :-\\)\r\n&gt; Yes, I will close the ticket and the \"iofmt\" supports NETCDF and MPIIO formats.\r\n&gt; This is in our daily test.  Sorry to take that long to implement the IO feature\\!\r\n&gt; \r\n&gt; Later,\r\n&gt; \r\n&gt; ~Samson\r\n&gt; \r\n&gt; \r\n&gt; \r\n&gt; \r\n&gt; On Thu, January 13, 2011 9:10 am, Shujia Zhou wrote:\r\n&gt;&gt; Samson:\r\n&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt; Ok.  I am in my office today \\(the better time slot: 12-2pm  5-6pm EST\\). My office\r\n&gt;&gt; phone is 301-286-8227.\r\n&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt; Shujia\r\n&gt;&gt; On Jan 13, 2011, at 12:01 PM, Samson Cheung wrote:\r\n&gt;&gt;\r\n&gt;&gt;&gt; Hi Shujia,\r\n&gt;&gt;&gt;\r\n&gt;&gt;&gt; Just want to follow up with this email I sent in Nov 2010.  Can I call you?  I\r\n&gt;&gt;&gt; know\r\n&gt;&gt;&gt; it is not easy to just look at the manual.  I have examples and stuffs that may\r\n&gt;&gt;&gt; be\r\n&gt;&gt;&gt; helpful.\r\n&gt;&gt;&gt;\r\n&gt;&gt;&gt; Later,\r\n&gt;&gt;&gt;\r\n&gt;&gt;&gt; ~Samson\r\n&gt;&gt;&gt;\r\n&gt;&gt;&gt;\r\n&gt;&gt;&gt; On Fri, November 5, 2010 11:01 am, Samson Cheung wrote:\r\n&gt;&gt;&gt;&gt; Hi Shujia,\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; How are you?  Below is the email you sent to ESMF a while ago.  With the new\r\n&gt;&gt;&gt;&gt; Parallel IO capability of the current release ESMF\\_5\\_1\\_0, you may find it\r\n&gt;&gt;&gt;&gt; useful.\r\n&gt;&gt;&gt;&gt; Please take a look at the following page or send me questions.\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; http://www.earthsystemmodeling.org/esmf\\_releases/non\\_public/ESMF\\_5\\_1\\_0/ESMF\\_refdoc/node5.html\\#api:FieldBundleRead\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; Thanks\\!\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; Samson\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; \\*\\*\\*\\*\\*\\*\\*\\*ORIGINAL EMAIL\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; WHO: Shujia Zhou from GSFC\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; Hi,\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; We are interested in using esmf io utility. I\r\n&gt;&gt;&gt;&gt; read the esmf reference and attach it below.\r\n&gt;&gt;&gt;&gt; I look at the system test and src, there is no example.\r\n&gt;&gt;&gt;&gt; So what is the current capability of esmf io. Is the wrf io\r\n&gt;&gt;&gt;&gt; still supported? I assume that I still can use field to\r\n&gt;&gt;&gt;&gt; output data where esmf will combine the decomposed array into\r\n&gt;&gt;&gt;&gt; a whole array and output it to root pet.\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; Thanks,\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; shujia",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2011-01-13 18:27:36",
        "slug": "72e9",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2011-01-13 18:27:36",
        "slug": "99dc",
        "subject": "#52 LONG:IO Implementation of ESMF I/O (20)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 18:27:36",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30732718463761fbeb1a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/5c012bb3/",
  "ticket_num": 52,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-01-26 16:03:46"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Shujia Zhou from GSFC\r\n\r\nHi,\r\n\r\nIs the current esmf release supporting the following\r\noperation at sgi altix:\r\n\r\natmosphere model parallelized with mpi\r\nocean model parallelized with openMP\r\n\r\nCouple and run those two models in a serial or\r\nconcurrent style.\r\n\r\n\r\nThanks,\r\n\r\nshujia\r\n\r\n",
  "labels": [],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "PREPEND: LONG: TST_OPENMP system test",
  "discussion_thread": {
    "_id": "d04e746a",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-01-26 18:07:14",
        "slug": "ba0c",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\n\n&lt;sent email: 10/26/06&gt;",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-01-26 19:56:43",
        "slug": "0249",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **milestone**:  --> 367129",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-01-26 19:56:43",
        "slug": "7c98",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\n\n&lt;received email: 10/26/06&gt; Shujia requests example code.",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-01-26 22:47:25",
        "slug": "0c06",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **milestone**: 367129 --> 367128",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-01-26 22:47:25",
        "slug": "d6fc",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:31:27",
        "slug": "108e",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:25:56",
        "slug": "178d",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **priority**: 1 --> 5\n- **summary**: Support of applications at sgi altx --> LONG: Support of applications at sgi altx\n- **assigned_to**: theurich --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:18:49",
        "slug": "a780",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **milestone**: 284120 --> 495011\n- **summary**: LONG: Support of applications at sgi altx --> Support of applications at sgi altx\n- **priority**: 5 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 05:08:51",
        "slug": "c630",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **assigned_to**: oehmke --> samsoncheung",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 14:58:40",
        "slug": "8b08",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1481514\nOriginator: NO\n\n&gt; Hi Shujia,\r\n&gt;\r\n&gt; In case you don't know, you can go to\r\n&gt;   http://www.esmf.ucar.edu/plans/releases/sched\\_current.shtml\r\n&gt; and check our schedule.  You will see\r\n&gt;\r\n&gt;   Jan 2008 ESMF v.3.0.4   System tests for OpenMP\r\n&gt;\r\n&gt; By that time OpenMP should be fully supported.  It makes\r\n&gt; sense to test the two models with mpi and openmp at that\r\n&gt; time.  This will give you an idea about when and the plan.\r\n&gt; Hope this help.\r\n&gt;\r\n&gt; Samson\r\n&gt;\r\n&gt;\r\n&gt;\r\n&gt; On Thu, July 19, 2007 10:02 am, Shujia Zhou wrote:\r\n&gt;&gt; Hi, Samson:\r\n&gt;&gt;\r\n&gt;&gt; I think that I would like to know what is the capability or plan  \r\n&gt;&gt; of ESMF in\r\n&gt;&gt; supporting an application consisting of two models: one in mpi and  \r\n&gt;&gt; another in openMP.\r\n&gt;&gt;\r\n&gt;&gt; Thank you for following up this \"old\" ticket.\r\n&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt; shujia\r\n&gt;&gt; On Jul 19, 2007, at 12:49 PM, Samson Cheung wrote:\r\n&gt;&gt;\r\n&gt;&gt;&gt; Hi Shujia,\r\n&gt;&gt;&gt; We have not got a reply from you, so I re-send this email.\r\n&gt;&gt;&gt; I know, even I forgot about this ticket, may be you too. :-\\)\r\n&gt;&gt;&gt; However, if Gerhard's response of your ticket was what\r\n&gt;&gt;&gt; you were looking for, please let's know.  Otherwise, please\r\n&gt;&gt;&gt; let me know what issue remained for this ticket.\r\n&gt;&gt;&gt; Thanks\\!\r\n&gt;&gt;&gt; Samson",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2007-07-19 19:35:52",
        "slug": "6e36",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **summary**: Support of applications at sgi altx --> Support of models with MPI and OpenMP",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2007-07-19 19:35:52",
        "slug": "8f2f",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **milestone**: 495011 --> \n- **labels**: 588640 --> ",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2007-07-20 16:23:52",
        "slug": "02db",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **summary**: Support of models with MPI and OpenMP --> LONG: TST_OPENMP system test for mixed OpenMP needed (3)",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-03 16:46:46",
        "slug": "c811",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **assigned_to**: samsoncheung --> svasquez",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-03 16:47:15",
        "slug": "9027",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:44:13",
        "slug": "b88a",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:40:16",
        "slug": "0bfa",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **summary**: LONG: TST_OPENMP system test for mixed OpenMP needed (3) --> PREPEND: LONG: TST_OPENMP system test",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 15:06:58",
        "slug": "c470",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 15:07:09",
        "slug": "3379",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "The  ESMF\\_ArrayRedistOpenMP was added for public release ESMF\\_4\\_0\\_0r.",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2009-12-02 20:26:56",
        "slug": "4aa1",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2009-12-02 20:26:57",
        "slug": "786d",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2009-12-02 20:52:51",
        "slug": "a73d",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "Shujia was sent information concerning openmp support and documentation.\r\nHe agreed that this ticket be closed.",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2009-12-23 18:09:49",
        "slug": "f165",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2009-12-23 18:09:49",
        "slug": "dc7d",
        "subject": "#53 PREPEND: LONG: TST_OPENMP system test"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-12-23 18:09:49",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30752718463761fbeb6e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d04e746a/",
  "ticket_num": 53,
  "custom_fields": {
    "_priority": "9"
  },
  "created_date": "2006-01-26 17:20:36"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Giang Nong from NOAA\r\n\r\nHi \r\n\r\nIs there any plan to support tripolar grid in ESMF? if\r\nyes, what is the time line?  MOM4 of GFDL uses tripolar\r\ngrid so it is very desirable that ESMF  supports this\r\ngrid, either via some grid creating tool or reading\r\nexisting grid.\r\n\r\nThanks\r\n\r\nGiang Nong\r\n",
  "labels": [
    "Grid - Old"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Support for tripolar grid (3)",
  "discussion_thread": {
    "_id": "07a8a071",
    "posts": [
      {
        "text": "- **summary**: SUpport for tripolar grid --> Support for tripolar grid",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-02-16 17:08:10",
        "slug": "c270",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **assigned_to**: nobody --> cdeluca",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-02-17 15:57:17",
        "slug": "1225",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:31:26",
        "slug": "84b7",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:25:34",
        "slug": "63dc",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **assigned_to**: cdeluca --> oehmke\n- **summary**: Support for tripolar grid --> LONG: Support for tripolar grid",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:18:07",
        "slug": "f4e1",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:18:23",
        "slug": "2f95",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **labels**: 588649 --> Grid - Old\n- **milestone**: 284120 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:15:29",
        "slug": "da71",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:15:50",
        "slug": "0aa3",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 06:19:52",
        "slug": "d75c",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **summary**: LONG: Support for tripolar grid --> LONG: Support for tripolar grid (?)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 15:55:27",
        "slug": "2c28",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **summary**: LONG: Support for tripolar grid (?) --> LONG: Support for tripolar grid (4/8,2/4,1)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 15:57:20",
        "slug": "ac35",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **summary**: LONG: Support for tripolar grid (4/8,2/4,1) --> LONG: Support for tripolar grid (12)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-24 21:55:58",
        "slug": "e30b",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **summary**: LONG: Support for tripolar grid (12) --> LONG:NGRD:Support for tripolar grid (36)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-31 20:54:44",
        "slug": "349e",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **summary**: LONG:NGRD:Support for tripolar grid (36) --> LONG:NGRDT:Support for tripolar grid (36)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-10-31 21:12:42",
        "slug": "a0ca",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **summary**: LONG:NGRDT:Support for tripolar grid (36) --> LONG:nGRD:Support for tripolar grid (36)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2006-11-02 23:30:30",
        "slug": "9597",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:31:22",
        "slug": "52e1",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "Also see \\#2902831 which discusses hooking the tripole to regridding. Its not clear if this ticket is also for regridding or just creating the grid. The time for this depends on that. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 22:13:30",
        "slug": "4959",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **summary**: LONG:nGRD:Support for tripolar grid (36) --> LONG:nGRD:Support for tripolar grid (?)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 22:13:30",
        "slug": "0930",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **summary**: LONG:nGRD:Support for tripolar grid (?) --> LONG:nGRD:Support for tripolar grid (3)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 22:14:10",
        "slug": "522b",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      },
      {
        "text": "- **summary**: LONG:nGRD:Support for tripolar grid (3) --> LONG: Support for tripolar grid (3)\n- **priority**: 5 --> 9",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:31:27",
        "slug": "beca",
        "subject": "#54 LONG: Support for tripolar grid (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:31:27",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30792718463761fbebef",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/07a8a071/",
  "ticket_num": 54,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-02-16 17:06:50"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Todd PLessel from the US EPA\r\n\r\n\r\n1\\. Platforms:\r\nAny plans to add PowerMac G5 Quad OS X 10.4  64-bit\r\naddressing platform?\r\nWith 4 64-bit processors, 16GB RAM and 1TB disk for\r\nunder $10,000these are very cost-effective HPC-worthy\r\ndeskside computers.\r\n\r\n2\\. Streaming data format:\r\nI have developed several 'Subset' programs that run on\r\na remote server computer and read sets of files and\r\nwrite a single subset \\(of timesteps, variables,\r\nlon-lat-elevation\\) of data to standard output \\(in a few\r\nformats\\) for use by a custom  visualization program and\r\nalso to optionally save as files to a local disk \\(on a\r\nclient computer\\) for subsequent analysis.\r\n\r\nI've been asked to consider 'supporting ESMF' as an\r\noutput format option. Can you send me information on\r\nthe external format and structure of data \\(including\r\nmetadata\\) defined by ESMF?\r\n\r\nThe intent is that these Subset programs could be\r\ninvoked on a remote computer by an ESMF model\r\napplication \\(running on a different computer, e.g.,\r\npopen\\(\"ssh user@remote.host Subset ...\"\\)\\) and the\r\nsubset of data directly read \\(e.g., fread\\) into the\r\nmemory of the ESMF model \\(without having to write\r\nintermediate files to disk\\).\r\n\r\nFor example, if there is an ESMF XML DTD then my Subset\r\nprograms could be modified to write that stream of tags\r\nto standard output and presumably an ESMF application\r\nwould be able to read and parse the tag stream \\(from a\r\npipe\\). Of course, XML would be much too inefficient,\r\nbut the point is my Subset programs could implement\r\nESMF-format output without the burden of using any\r\nother external library routines \\(e.g., ESMF libraries\\).\r\nHopefully ESMF defines an efficient, portable binary\r\nformat for streaming data.\r\n\r\nTodd\r\n1-919-541-5500\r\nplessel.todd@epa.gov\r\n\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\r\n",
  "labels": [
    "I/O"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": " LONG: I/O Efficient, portable, binary format needed (?)",
  "discussion_thread": {
    "_id": "efa00a64",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> nscollins",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-02-24 17:41:12",
        "slug": "05c8",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      },
      {
        "text": "- **assigned_to**: nscollins --> theurich",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-03-01 15:54:53",
        "slug": "4507",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:42:50",
        "slug": "9176",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:23:28",
        "slug": "1364",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      },
      {
        "text": "- **summary**:  Q. ESMF plarform and streaming data format? -->  LONG: Q. ESMF plarform and streaming data format?\n- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:17:37",
        "slug": "989d",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      },
      {
        "text": "- **priority**: 5 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 22:50:01",
        "slug": "7934",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      },
      {
        "text": "- **labels**: 588640 --> \n- **milestone**: 284120 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 21:52:06",
        "slug": "780a",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nthe first part of this question was answered directly since we support MAC OSX and the G5 platform. It is no longer an issue.\r\n\r\nthe second question is being kept open to track if a desire for I/O capabilities. The user will be long gone by the time we get around to I/O but it is good to track this request anyway.  \r\n\r\nI am going to change the name to reflect the I/O nature of the topic.",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-31 17:51:19",
        "slug": "cbe7",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      },
      {
        "text": "- **labels**:  --> I/O",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-31 17:51:19",
        "slug": "2c64",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      },
      {
        "text": "- **summary**:  LONG: Q. ESMF plarform and streaming data format? -->  LONG: I/O Efficient, portable, binary format needed\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-31 17:51:20",
        "slug": "88ec",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      },
      {
        "text": "- **summary**:  LONG: I/O Efficient, portable, binary format needed -->  LONG: I/O Efficient, portable, binary format needed (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:34:08",
        "slug": "ef8d",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      },
      {
        "text": "- **priority**: 2 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:43:50",
        "slug": "141a",
        "subject": "#55  LONG: I/O Efficient, portable, binary format needed (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 21:43:50",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d307c2718463761fbec5c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/efa00a64/",
  "ticket_num": 55,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-02-23 20:09:19"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Mark Iredell from NOAA\r\n\r\nHere are some Config questions I can't seem to find in\r\nthe reference manual.\r\n\r\n1\\) Is there ESMF\\_ConfigPutAttribute in companion to\r\nESMF\\_ConfigGetAttribute?\r\n\r\n2\\) Is there ESMF\\_ConfigWriteFile or some such to write\r\na config to a resource file?\r\n\r\n3\\) Are there plans to support LOGICAL variables as\r\nconfig attributes?\r\n\r\nThanks in advance,\r\nMark\r\n",
  "labels": [
    "Config"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "LONG:CONFIG_SET:Implement Config write functions (2/2)",
  "discussion_thread": {
    "_id": "4341837e",
    "posts": [
      {
        "text": "- **milestone**:  --> 367128\n- **assigned_to**: nobody --> eschwab",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-02-24 17:22:50",
        "slug": "c66d",
        "subject": "#56 LONG:CONFIG_SET:Implement Config write functions (2/2)"
      },
      {
        "text": "- **milestone**: 367128 --> 155253",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:25:43",
        "slug": "a5f6",
        "subject": "#56 LONG:CONFIG_SET:Implement Config write functions (2/2)"
      },
      {
        "text": "- **labels**: 588640 --> 730385",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-09-13 20:00:33",
        "slug": "92c6",
        "subject": "#56 LONG:CONFIG_SET:Implement Config write functions (2/2)"
      },
      {
        "text": "- **priority**: 5 --> 9\n- **labels**: 730385 --> Config\n- **milestone**: 155253 --> \n- **summary**: Config questions --> Implement Config write functions",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 05:20:29",
        "slug": "e414",
        "subject": "#56 LONG:CONFIG_SET:Implement Config write functions (2/2)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 05:22:06",
        "slug": "212f",
        "subject": "#56 LONG:CONFIG_SET:Implement Config write functions (2/2)"
      },
      {
        "text": "- **summary**: Implement Config write functions --> LONG:  Implement Config write functions (2/2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 05:24:26",
        "slug": "375e",
        "subject": "#56 LONG:CONFIG_SET:Implement Config write functions (2/2)"
      },
      {
        "text": "- **summary**: LONG:  Implement Config write functions (2/2) --> LONG:CONFIG_SET:Implement Config write functions (2/2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-03 15:39:05",
        "slug": "aea4",
        "subject": "#56 LONG:CONFIG_SET:Implement Config write functions (2/2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nSorry Earl and Sylvia - overlooked \\#1438193.\r\nI did mention it to Mark but he should get a more official\r\nnotice.  So yes, Earl please write to Mark and move the\r\nticket to pending.\r\n\r\n\\-- Cecelia\r\n",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-05-11 17:44:20",
        "slug": "b0cf",
        "subject": "#56 LONG:CONFIG_SET:Implement Config write functions (2/2)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-05-11 17:44:20",
        "slug": "e1be",
        "subject": "#56 LONG:CONFIG_SET:Implement Config write functions (2/2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nThis was released in 3.0.2.  Mark was contacted in May and June of 2007 to let him know.  Other than a thank you, we received no word back.  I emailed him today to let him know we were closing the ticket down.\r\n\r\nsylvia",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-14 15:04:31",
        "slug": "b111",
        "subject": "#56 LONG:CONFIG_SET:Implement Config write functions (2/2)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-14 15:04:31",
        "slug": "095d",
        "subject": "#56 LONG:CONFIG_SET:Implement Config write functions (2/2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-08-14 15:04:31",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d307d2718463761fbeca0",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4341837e/",
  "ticket_num": 56,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-02-24 16:12:08"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "Bob,\r\nThe issue is not AIX, it is whether or not you run\r\ninside of a LoadLeveler script or not. Anyway, doesn't\r\nPOE give you an error message when you try to run\r\nmpirun.rs6000sp without having a valid pool of resources?\r\nHowever, along the lines you suggest we could check\r\ninside the mpirun.rs6000sp script if there are\r\nresources before going to try to run anything. Then we\r\nmay be able to provide the user with a slightly more\r\nhelpful message than what the POE system gives and hint\r\nat MP\\_RMPOOL.\r\n-Gerhard\r\n\r\nRobert C Oehmke wrote:\r\nThat's a good point about being able to\r\nuse it for both batch and interactive, so I guess\r\nyou wouldn't want to set it inside the mpirun script.\r\nMaybe the best\r\nsolution would be to check either when initially compiling\r\nor running the tests if the os is AIX and\r\nMP\\_RMPOOL isn't set, then issue a warning, so the user\r\nknows why the tests are failing.\r\n\\- Bob\r\nOn Fri, 17 Mar 2006, Gerhard Theurich wrote:\r\nSilverio,\r\nI think the current mpirun.rs6000sp should probably\r\nstay as it is \\(without setting the MP\\_RMPOOL variable\\).\r\nThe current script can be used for interactive \\_and\\_\r\nbatch jobs. It's normal practice on the AIX boxes to\r\nset MP\\_RMPOOL=1 if you want to run interactive and\r\ndon't want to use a LoadLeveler script. If you pack\r\nmpirun.rs6000sp into a batch script it should run fine.\r\n-Gerhard\r\n\r\nHi,\r\n\r\nOn Fri, 17 Mar 2006, Gerhard Theurich wrote:\r\n\r\nThe issue is not AIX, it is whether or not you run\r\ninside of a LoadLeveler script or not.\r\n\r\nI figured it would be easier to check if the os was\r\nAIX, then\r\nif you were using LoadLeveler. \\(Unless other OSes use\r\nLoadLeveler. I didn't think any did\\)\r\n\r\nAnyway, doesn't POE give you an error message when you\r\ntry to run mpirun.rs6000sp without having a valid pool\r\nof resources?\r\n\r\nIt does, but I was thinking of the tests failing, in which\r\ncase the error message is buried several directories deep.\r\n\r\nHowever, along the lines you suggest we could check\r\ninside the mpirun.rs6000sp script if there are\r\nresources before going to try to run anything. Then we\r\nmay be able to provide the user with a slightly more\r\nhelpful message than what the POE system gives and hint\r\nat MP\\_RMPOOL.\r\n\r\nThat's a good idea.\r\n\r\nI'm never sure how much to worry about error messages\r\nlike this when the users will probably usually be\r\nexperts with the comp. systems, but an little hint\r\nnever hurts. :-\\)\r\n\r\n\r\n\\- Bob\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "mpirun,rs6000sp script and setting of  MP_RMPOOL (?)",
  "discussion_thread": {
    "_id": "2e57d25a",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-08-01 22:34:54",
        "slug": "6da2",
        "subject": "#57 mpirun,rs6000sp script and setting of  MP_RMPOOL (?)"
      },
      {
        "text": "- **milestone**: 287002 --> 166455",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 16:22:06",
        "slug": "08b6",
        "subject": "#57 mpirun,rs6000sp script and setting of  MP_RMPOOL (?)"
      },
      {
        "text": "- **priority**: 5 --> 4",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-27 17:04:42",
        "slug": "e5f9",
        "subject": "#57 mpirun,rs6000sp script and setting of  MP_RMPOOL (?)"
      },
      {
        "text": "- **priority**: 4 --> 5\n- **milestone**: 166455 --> 287002\n- **summary**: mpirun,rs6000sp script and setting of  MP_RMPOOL --> mpirun,rs6000sp script and setting of  MP_RMPOOL (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-07 18:47:18",
        "slug": "4ab0",
        "subject": "#57 mpirun,rs6000sp script and setting of  MP_RMPOOL (?)"
      },
      {
        "text": "- **labels**: 473023 --> Build/Install\n- **milestone**: 287002 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 03:24:00",
        "slug": "6760",
        "subject": "#57 mpirun,rs6000sp script and setting of  MP_RMPOOL (?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nThe mpirun.rs6000\\_sp script now reports a clear error if it cannot find resources. This was tested on bluevista and also by Ratko on the NCEP IBM. Furthermore the script also handles execution from within a PBS session now. This was tested by Gary Block on schirra at NAS.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-21 18:48:00",
        "slug": "418a",
        "subject": "#57 mpirun,rs6000sp script and setting of  MP_RMPOOL (?)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-21 18:48:00",
        "slug": "9b9a",
        "subject": "#57 mpirun,rs6000sp script and setting of  MP_RMPOOL (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-21 18:48:00",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d307f2718463761fbece0",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/2e57d25a/",
  "ticket_num": 57,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2006-03-20 16:53:08"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  Balazs Fekete\r\n\r\nHi Balazs,\r\n\r\nThe person who does our time functions is now working\r\npart-time,\r\nand it may take him a little while to respond.\r\n\r\nIn the meantime, I took a look at ESMC\\_Time.C and there\r\nis what\r\nlooks like a reasonably complete ESMC\\_TimeSet\\(\\)\r\nfunction there.\r\nAll the Fortran TimeSet\\(\\) interface does is call that C\r\ninterface.\r\nCould you please describe a little more why you think\r\nthe C \r\ninterface is completely missing and what it is you are\r\ntrying\r\nto do with it?\r\n\r\nI'm very glad you'll be able to make it to the annual\r\nmeeting.\r\nWe do have the meeting agenda close to finalized, and\r\nit is \r\nrather overloaded already. However, if you can, please do\r\nbring some slides, and at the very least people on the ESMF\r\ndevelopment team will be eager to talk further.  It may\r\nwork to put them up during the discussion session of\r\nthe main \r\nmeeting, but I'm not really sure how that will go.\r\n\r\nCecelia\r\n\r\nFekete, Balazs M. wrote:\r\n&gt; Hi Cecelia,\r\n&gt; \r\n&gt; I din't give up quite yet to work with ESMF from\r\nC/C++, however my\r\n&gt; recent discovery that the ESMC\\_TimeSet\\(\\) functions\r\nare completely\r\n&gt; missing in ESMC\\_Time.C was discouraging. I don't know\r\nhow much time I\r\n&gt; can commit to actually contribute to ESMF code\r\ndirectly, but I am\r\n&gt; tempted to try, if I can get some helping hand. I\r\ncontacted Tim Campell,\r\n&gt; but he did not respond to my e-mail yet.\r\n&gt; \r\n&gt; You may have seen that I registered to the upcoming\r\nESMF meeting in\r\n&gt; Baltimore. I assume, the program for the meeting is\r\nalready finalized,\r\n&gt; but if there is time and interest I would be happy to\r\ntalk about the\r\n&gt; land surface modeling system I would like to see\r\ndeveloped on top of\r\n&gt; ESMF. I already talked to V. Balaji from GFDL and his\r\nreaction was that\r\n&gt; my thinking was couple of years ahead where ESMF is now.\r\n&gt; \r\n&gt; \r\n&gt; Balazs\r\n&gt; ",
  "labels": [
    "Language Interface"
  ],
  "assigned_to": "cdeluca",
  "assigned_to_id": "4f568833b9363c6a5a000769",
  "private": false,
  "summary": "LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)",
  "discussion_thread": {
    "_id": "095d2f9c",
    "posts": [
      {
        "text": "- **assigned_to**: eschwab --> cdeluca\n- **milestone**: 356493 --> 284120",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:15:58",
        "slug": "5ea2",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **labels**: 588652 --> 881192",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:16:22",
        "slug": "c419",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:21:44",
        "slug": "2035",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **summary**: Is TimeSet missing a C interface? --> LONG: Is TimeSet missing a C interface?",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:16:46",
        "slug": "cf75",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:17:00",
        "slug": "8e2a",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **assigned_to**: cdeluca --> bfekete\n- **priority**: 5 --> 9\n- **milestone**: 284120 --> \n- **labels**: 881192 --> Language Interface",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 04:28:53",
        "slug": "684b",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **summary**: LONG: Is TimeSet missing a C interface? --> LONG: Implement C interfaces for TimeMgr",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 04:32:46",
        "slug": "c540",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **summary**: LONG: Implement C interfaces for TimeMgr --> TIMEMGR_C:LONG: Implement C interfaces for TimeMgr",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-03 20:51:48",
        "slug": "a673",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-07 01:19:12",
        "slug": "8c82",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **summary**: TIMEMGR_C:LONG: Implement C interfaces for TimeMgr --> LONG: TIMEMGR_C:Implement C interfaces for TimeMgr",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-01-30 17:30:24",
        "slug": "5f99",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **assigned_to**: bfekete --> rosalind\n- **summary**: LONG: TIMEMGR_C:Implement C interfaces for TimeMgr --> LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:33:45",
        "slug": "7410",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1608107\nOriginator: NO\n\nHi Balazs,\r\n\r\nYou wrote to ESMF a while back inquiring about public C interfaces for TimeMgr classes in ESMF.\r\nA set of public C interfaces is now available on the HEAD of the ESMF cvs repository\r\nand will soon be available on the ESMF 3.1.1 release. I hope these prove useful. Please let me know if\r\nyou have trouble accessing the new C code, or have any questions or comments.\r\n\r\nRosalinda",
        "attachments": [],
        "author": "rosalind",
        "timestamp": "2008-09-05 18:17:29",
        "slug": "fc43",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rosalind",
        "timestamp": "2008-09-05 18:27:41",
        "slug": "10fd",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "Balazs has a new proposal out that may end up involving ESMF.  He may end up looking at these interfaces at some point so this one will live in pending for a while.  Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-15 23:18:20",
        "slug": "3799",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-15 23:18:20",
        "slug": "0a8a",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-15 23:24:28",
        "slug": "3044",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **assigned_to**: rosalind --> w6ws\n- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:48:34",
        "slug": "090a",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:48:57",
        "slug": "3117",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:50:20",
        "slug": "d8af",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "Reassigned to Cecelia per ticket meeting",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-03-19 17:01:18",
        "slug": "dd1c",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      },
      {
        "text": "- **assigned_to**: w6ws --> cdeluca",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-03-19 17:01:19",
        "slug": "6220",
        "subject": "#58 LONG: TIMEMGR_C:Implement C interfaces for TimeMgr (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-03-19 17:01:19",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30812718463761fbed0a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/095d2f9c/",
  "ticket_num": 58,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-05-09 22:07:24"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Max Suarez from GSFC\r\n\r\nCan GetAttribute functions have an optional default\r\nvalue in classes like Field?\r\nThis could work like the getattribute in config, which\r\nreturns the default if it cannot find the attribute\r\nname, but does not set a return code.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG: GetAttribute functions have optional default value (3)",
  "discussion_thread": {
    "_id": "1051e170",
    "posts": [
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:31:25",
        "slug": "f7e6",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **milestone**: 284120 --> 356870\n- **labels**: 588640 --> 881193",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-08-10 21:20:03",
        "slug": "e98b",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **assigned_to**: nobody --> cdeluca",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-08-16 22:03:46",
        "slug": "47a5",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **milestone**: 356870 --> 284120",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:10:06",
        "slug": "3301",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **assigned_to**: cdeluca --> eschwab",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-14 01:50:24",
        "slug": "8fbe",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **priority**: 5 --> 4\n- **labels**: 881193 --> Attribute\n- **milestone**: 284120 --> \n- **summary**: attribute suggestion --> GetAttribute functions have optional default value",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:54:36",
        "slug": "b7e6",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:55:12",
        "slug": "b25a",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nsamson,\r\ni am reassigning this to you.  it was earls.  this is also a record that this has been moved to feature requests.",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-07-25 15:13:36",
        "slug": "097e",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **assigned_to**: eschwab --> samsoncheung",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-07-25 15:13:36",
        "slug": "ebac",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **assigned_to**: samsoncheung --> rokuingh",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:33:01",
        "slug": "6745",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **summary**: GetAttribute functions have optional default value --> LONG: GetAttribute functions have optional default value (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:33:22",
        "slug": "05b1",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **priority**: 4 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:43:35",
        "slug": "60dd",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-07-18 20:22:28",
        "slug": "091c",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 21:16:13",
        "slug": "5d41",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-12 21:25:58",
        "slug": "6af1",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "Closed on 1/15/09 by Ryan O'Kuinghttons due to unresponsive user.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-01-15 14:51:43",
        "slug": "e6e3",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-01-15 14:51:43",
        "slug": "9a91",
        "subject": "#59 LONG: GetAttribute functions have optional default value (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-01-15 14:51:43",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30842718463761fbed7c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/1051e170/",
  "ticket_num": 59,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-05-26 21:26:30"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Lie Pan from JPL\r\n\r\nHi Lei,\r\nI have not done this personally, but Tim Campbell\r\n\\(Navy\\) has \\(Tim please correct me if I am wrong\\). I am\r\nforwarding your email to esmf\\_support and Tim.\r\n-Gerhard\r\n\r\nLei Pan wrote:\r\nYes, I changed to use 32 bit and ESMF compiles.\r\nBut I have other problems now.  mpich2 does not seem\r\nto work on my MacBook Pro \\(I built from source\r\nand there was no error message, but mpirun with\r\na helloworld MPI program failed\\).\r\nGerhard: did any of you guys test ESMF/mpich2/or 1\r\non the Intel based MacBook Pro?\r\nThanks,\r\n-Lei\r\nPeggy Li wrote:\r\nDoes it say \"64-bit mode not compiled\"?  You need to\r\ncompile using 32 bit I assume.\r\n\r\npeggy\r\n\\--------------\r\nAt 5/25/2006 12:49 PM, you wrote:\r\n\r\nHi Gerhard:\r\n\r\nI installed g95, gcc 4.0.1, and mpich2 on my Mac, but\r\nthe installation\r\nof ESMF failed.  I am attaching the error message and\r\nthe output of\r\nmake info.  I don't quite understand what the error\r\nmessage says,\r\ncould you please shed some light on this?  If you need\r\nmore info.,\r\nplease let me know.\r\n\r\nThanks a lot for your help\\!\r\n\r\n-Lei\r\n\r\n\\------------------ make error ---------------\r\ndir=\\`pwd\\`; cd\r\n/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/mod/modO/Darwin.g95.64.default;\r\nmake -f $\\{dir\\}/makefile MAKEFILE=$\\{dir\\}/makefile esmflib\r\ntree\\_lib in:\r\n/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs\r\ndir=\\`pwd\\`; cd\r\n/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/mod/modO/Darwin.g95.64.default;\r\nmake -f $\\{dir\\}/makefile MAKEFILE=$\\{dir\\}/makefile esmflib\r\ntree\\_lib in:\r\n/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/mpiuni\r\n\r\ndir=\\`pwd\\`; cd\r\n/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/mod/modO/Darwin.g95.64.default;\r\nmake -f $\\{dir\\}/makefile MAKEFILE=$\\{dir\\}/makefile esmflib\r\ngcc  -c -O  -march=k8 -m64 -mcmodel=medium  \r\n-DESMF\\_MPIUNI -DESMF\\_NO\\_IOCODE -DS64=1\r\n-D\\_\\_SDIR\\_\\_='\"src/Infrastructure/stubs/mpiuni/\"'\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/mpiuni/\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/mpiuni//../include\r\n\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/build\\_config/Darwin.g95.default\r\n\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/include\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/mod/modO/Darwin.g95.64.default\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/mpiuni\r\n\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/netcdf\\_stubs\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/pthread\r\n/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/mpiuni/mpi.c\r\n\r\n/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/mpiuni/mpi.c:1:\r\nsorry, unimplemented: code model medium not supported\r\nin PIC mode\r\n/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/mpiuni/mpi.c:1:\r\nsorry, unimplemented: 64-bit mode not compiled in\r\nmake\\[7\\]: \\*\\*\\*\r\n\\[/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/lib/libO/Darwin.g95.64.default/libmpiuni.a\\(mpi.o\\)\\]\r\nError 1\r\nmake\\[6\\]: \\*\\*\\* \\[esmflib\\] Error 2\r\nmake\\[5\\]: \\*\\*\\* \\[tree\\_lib\\] Error 2\r\nmake\\[4\\]: \\*\\*\\* \\[tree\\] Error 1\r\nmake\\[3\\]: \\*\\*\\* \\[tree\\] Error 1\r\nmake\\[2\\]: \\*\\*\\* \\[tree\\] Error 1\r\nmake\\[1\\]: \\*\\*\\* \\[tree\\] Error 1\r\nmake: \\*\\*\\* \\[build\\_libs\\] Error 2\r\nPanMacBook:~/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2 pan$\r\n\r\n\r\n\r\n\\------------------------------------------\r\nVersion information:\r\nC Compiler version:\r\n4.0.1\r\n\r\nC++ Compiler version:\r\n4.0.1\r\n\r\nFortran Compiler version:\r\nG95 \\(GCC 4.0.3 \\(g95\\!\\) May 23 2006\\)\r\nCopyright \\(C\\) 2002-2005 Free Software Foundation, Inc.\r\n\r\nG95 comes with NO WARRANTY, to the extent permitted by law.\r\nYou may redistribute copies of G95\r\nunder the terms of the GNU General Public License.\r\nFor more information about these matters, see the file\r\nnamed COPYING\r\n\r\nESMF\\_VERSION\\_STRING \"2.2.2\"\r\n\r\n\\------------------------------------------\r\nUsing ESMF flags:\r\nESMF\\_DIR: /Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2\r\nESMF\\_ARCH: Darwin\r\nESMF\\_COMPILER: g95\r\nESMF\\_BOPT: O\r\nESMF\\_PREC: 64\r\nESMF\\_COMM: mpiuni\r\nESMF\\_SITE: default\r\nESMF\\_EXHAUSTIVE: OFF\r\nESMF\\_BATCHQUEUE: default\r\nESMF\\_PTHREADS: ON\r\nESMF\\_TESTWITHTHREADS: OFF\r\nESMF\\_NO\\_IOCODE: true\r\n\r\n\\------------------------------------------\r\nIf set, using additional flags:\r\nMPI\\_HOME:\r\n/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/mpiuni\r\n\r\nNETCDF\\_LIB: -lnetcdf\\_stubs\r\nTHREAD\\_LIB: -lpthread\r\n\r\n\\------------------------------------------\r\nCompilers, Flags, and Libraries:\r\nLocation of the preprocessor:  /usr/bin/gcc\r\nLocation of the C compiler:  /usr/bin/gcc\r\nLocation of the C++ compiler:  /usr/bin/g++\r\nLocation of the Fortran compiler:  /Users/pan/bin/g95\r\nLinking C with: g++\r\nLinking Fortran with: g95\r\n\r\nCompiling C with flags: -O -march=k8 -m64\r\n-mcmodel=medium   -DESMF\\_MPIUNI -DESMF\\_NO\\_IOCODE\r\n-DS64=1  -D\\_\\_SDIR\\_\\_=''\r\nCompiling C++ with flags: -O -march=k8 -m64\r\n-mcmodel=medium   -DESMF\\_MPIUNI -DESMF\\_NO\\_IOCODE\r\n-DS64=1  -D\\_\\_SDIR\\_\\_=''\r\nC include dirs:\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/build\\_config/Darwin.g95.default\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/include\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/mod/modO/Darwin.g95.64.default\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/mpiuni\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/netcdf\\_stubs\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/pthread\r\n\r\nLinking C with flags:\r\n-L/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/lib/libO/Darwin.g95.64.default\r\n-L/usr/lib -L/usr/lib -L/usr/lib -L/usr/lib\r\nLinking C with libraries: -lesmf -lmpiuni  -lrt -lf95\r\n-lstdc++\r\n\r\nCompiling Fortran with flags: -O -fno-second-underscore\r\n-march=k8 -m64 -mcmodel=medium    -DESMF\\_MPIUNI\r\n-DESMF\\_NO\\_IOCODE -DS64=1\r\nFortran module flag:\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/mod/modO/Darwin.g95.64.default\r\n\r\nFortran include dirs:\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/build\\_config/Darwin.g95.default\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/include\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/mod/modO/Darwin.g95.64.default\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/mpiuni\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/netcdf\\_stubs\r\n-I/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/src/Infrastructure/stubs/pthread\r\n\r\nLinking Fortran with flags:\r\n-L/Users/pan/work/jpl/ESMF\\_tutorial/ESMF.2\\_2\\_2/lib/libO/Darwin.g95.64.default\r\n-L/usr/lib -L/usr/lib -L/usr/lib -L/usr/lib\r\nLinking Fortran with libraries: -lesmf -lmpiuni  -lrt\r\n-lc -lstdc++\r\n\r\n\\------------------------------------------\r\nCompiling on Thu May 25 11:47:20 PDT 2006 on\r\nPanMacBook.local\r\nMachine characteristics: Darwin PanMacBook.local 8.6.1\r\nDarwin Kernel Version 8.6.1: Tue Mar 7 16:55:45 PST\r\n2006; root:xnu-792.9.22.obj~1/RELEASE\\_I386 i386 i386\r\n==========================================\r\n\r\n\r\n\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "installing ESMF on Mac OS X (Intel core duo)",
  "discussion_thread": {
    "_id": "cbed6c57",
    "posts": [
      {
        "text": "- **milestone**: 367128 --> 155253",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:34:32",
        "slug": "63d5",
        "subject": "#60 installing ESMF on Mac OS X (Intel core duo)"
      },
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 155253 --> \n- **assigned_to**: theurich --> samsoncheung",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:46:20",
        "slug": "0cb5",
        "subject": "#60 installing ESMF on Mac OS X (Intel core duo)"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform\n- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:47:06",
        "slug": "ec92",
        "subject": "#60 installing ESMF on Mac OS X (Intel core duo)"
      },
      {
        "text": "- **priority**: 1 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:07:41",
        "slug": "4864",
        "subject": "#60 installing ESMF on Mac OS X (Intel core duo)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1481514\nOriginator: NO\n\n\r\n\r\nOn Thu, January 25, 2007 5:45 pm, Lei Pan wrote:\r\n&gt; Yes, please close it.  I am using a linux\r\n&gt; cluster and don't have time to resolve\r\n&gt; the issues with my MacBook Pro.\r\n&gt; \r\n&gt; Thanks,\r\n&gt; \r\n&gt; -Lei\r\n&gt; \r\n&gt; \r\n&gt; Samson Cheung wrote:\r\n&gt;&gt; Hi Lei,\r\n&gt;&gt;\r\n&gt;&gt; Do you recall this ticket? I am not sure if the success\r\n&gt;&gt; of the 32-bit compilation \\(Peggy suggested\\) made you happy.\r\n&gt;&gt; If you are happy with it, can I close the ticket? Thanks\\!\r\n&gt;&gt; Cheers,\r\n&gt;&gt;\r\n&gt;&gt; Samson\r\n&gt;&gt;\r\n&gt;&gt;",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2007-01-26 01:59:27",
        "slug": "01b2",
        "subject": "#60 installing ESMF on Mac OS X (Intel core duo)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2007-01-26 01:59:27",
        "slug": "12e0",
        "subject": "#60 installing ESMF on Mac OS X (Intel core duo)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-01-26 01:59:27",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30872718463761fbedda",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/cbed6c57/",
  "ticket_num": 60,
  "custom_fields": {
    "_priority": "2",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2006-05-30 21:21:24"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "\r\n\r\n\r\n",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Merge GMAO modifications into official ESMF development path",
  "discussion_thread": {
    "_id": "2ac31369",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-06-01 23:04:38",
        "slug": "b95d",
        "subject": "#61 Merge GMAO modifications into official ESMF development path"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\n\nNeed to talk to Atanas/Max to figure out what GMAO modifies\r\nin their ESMF installation before they put it into their\r\nbaselibs. Hopefully most of these modifications could be\r\nabsorbed into the official ESMF development.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-06-01 23:14:24",
        "slug": "23c2",
        "subject": "#61 Merge GMAO modifications into official ESMF development path"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\n\nI think ESMF\\_2\\_2\\_2 is the latest version they have modified.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-06-01 23:21:51",
        "slug": "7025",
        "subject": "#61 Merge GMAO modifications into official ESMF development path"
      },
      {
        "text": "- **assigned_to**: theurich --> nobody",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-06-15 17:21:27",
        "slug": "b0fe",
        "subject": "#61 Merge GMAO modifications into official ESMF development path"
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:31:23",
        "slug": "441e",
        "subject": "#61 Merge GMAO modifications into official ESMF development path"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich\n- **milestone**: 284120 --> 356870\n- **labels**: 588640 --> 509038",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-09-13 19:50:51",
        "slug": "0438",
        "subject": "#61 Merge GMAO modifications into official ESMF development path"
      },
      {
        "text": "- **milestone**: 356870 --> 284120",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:09:54",
        "slug": "b7a4",
        "subject": "#61 Merge GMAO modifications into official ESMF development path"
      },
      {
        "text": "- **labels**: 509038 --> 904957\n- **milestone**: 284120 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:26:28",
        "slug": "145d",
        "subject": "#61 Merge GMAO modifications into official ESMF development path"
      },
      {
        "text": "- **priority**: 5 --> 1\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:27:27",
        "slug": "f77d",
        "subject": "#61 Merge GMAO modifications into official ESMF development path"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\n\nGerhard,\r\n\r\nI have good news - I checked out 2\\_2\\_2\\_beta\\_snapshot\\_22,\r\nbuilds OK on halem, then compiled our GEOS-5 \\(with the\r\nchange of defaultLogType\\) and it run fine - no differences\r\nwith the version using 2\\_2\\_0rp2 tag.\r\n\r\nAs far as I am concerned this version is OK with us.\r\n\r\nThanks\\!\\!\\!\r\n-Atanas\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-01 21:08:28",
        "slug": "1570",
        "subject": "#61 Merge GMAO modifications into official ESMF development path"
      },
      {
        "text": "- **labels**: 904957 --> Multiple Categories\n- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-01 21:08:28",
        "slug": "88e2",
        "subject": "#61 Merge GMAO modifications into official ESMF development path"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2006-11-01 21:08:28",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30882718463761fbee01",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/2ac31369/",
  "ticket_num": 61,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-06-01 22:55:11"
},{
  "status": "closed",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Megan Damon from GSFC\r\n\r\nHello,\r\n\r\nI would like to use the State serialize and deserialize\r\nroutines in ESMF.  I have not seen any documentation in\r\nthe API.  I have also heard that the routines are not\r\navailable to end users.  I would like to get more\r\ninformation about these routines.\r\n\r\nThank you,\r\nMegan Damon\r\n",
  "labels": [
    "State"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Serialize/Deserialize State routines (4)",
  "discussion_thread": {
    "_id": "f2847ea3",
    "posts": [
      {
        "text": "- **labels**:  --> 588651\n- **milestone**: 356493 --> 367128",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-06-05 15:43:15",
        "slug": "908e",
        "subject": "#62 LONG: Serialize/Deserialize State routines (4)"
      },
      {
        "text": "- **milestone**: 367128 --> 284120",
        "attachments": [],
        "author": "rfaincht",
        "timestamp": "2006-08-03 16:29:12",
        "slug": "8199",
        "subject": "#62 LONG: Serialize/Deserialize State routines (4)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:21:21",
        "slug": "2b89",
        "subject": "#62 LONG: Serialize/Deserialize State routines (4)"
      },
      {
        "text": "- **priority**: 1 --> 5\n- **summary**: Serialize/Deserialize State routines --> LONG: Serialize/Deserialize State routines",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 23:16:29",
        "slug": "4154",
        "subject": "#62 LONG: Serialize/Deserialize State routines (4)"
      },
      {
        "text": "- **labels**: 588651 --> State\n- **milestone**: 284120 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:25:22",
        "slug": "42dc",
        "subject": "#62 LONG: Serialize/Deserialize State routines (4)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:25:44",
        "slug": "d5cc",
        "subject": "#62 LONG: Serialize/Deserialize State routines (4)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:52:32",
        "slug": "c88b",
        "subject": "#62 LONG: Serialize/Deserialize State routines (4)"
      },
      {
        "text": "- **summary**: LONG: Serialize/Deserialize State routines --> LONG: Serialize/Deserialize State routines (2/2)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-24 22:03:21",
        "slug": "a668",
        "subject": "#62 LONG: Serialize/Deserialize State routines (4)"
      },
      {
        "text": "- **summary**: LONG: Serialize/Deserialize State routines (2/2) --> LONG: Serialize/Deserialize State routines (4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:31:30",
        "slug": "7960",
        "subject": "#62 LONG: Serialize/Deserialize State routines (4)"
      },
      {
        "text": "We do not expect to make these routines public. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:41:25",
        "slug": "eb32",
        "subject": "#62 LONG: Serialize/Deserialize State routines (4)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:41:25",
        "slug": "7b61",
        "subject": "#62 LONG: Serialize/Deserialize State routines (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-06 18:41:25",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d308a2718463761fbee40",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f2847ea3/",
  "ticket_num": 62,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-06-02 22:09:01"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Weiyu Yang from NOAA\r\n\r\nHi, Gerhard,\r\n\r\nThank you very much for your helps before.  Right now I\r\nhave a question for you.  I use the ESMF\\_FieldGather to\r\ngather the distributed ESMF fields into one PE. \r\nHowever I cannot find the \"ESMF\\_FieldScatter\" from the\r\n3.0.0 ESMF manual.  I need this function because I need\r\nto do the following:\r\nI have an un-distributed fortran ayyay in one PE and I\r\nhave the ESMF grid which was distributed with the ESMF\r\nDELayout.  I need to add that fortran array to the ESMF\r\nstate with the distributed ESMF grid, thus I need\r\nsomething like the \"ESMF\\_FieldScatter\" to do the\r\nscattering with the special designed ESMF grid.   It is\r\nclearly that the ESMF\\_VMScatter cannot do it since the\r\ngrid distributed with different way.   Could you tell\r\nme how to do it? \r\nThank you very much.  Have a nice day.\r\n\r\nBest regards\r\nWeiyu\r\n\r\n\r\n",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "LONG:ARY_GS: Implement ESMF_FieldScatter (3)",
  "discussion_thread": {
    "_id": "d89f5b62",
    "posts": [
      {
        "text": "- **milestone**: 155253 --> \n- **labels**: 588648 --> Field",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 02:15:13",
        "slug": "1780",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **summary**: How to do ESMF_FieldScatter? --> Implement ESMF_FieldScatter",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 02:16:02",
        "slug": "9967",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "- **summary**: Implement ESMF_FieldScatter --> LONG: Implement ESMF_FieldScatter",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-20 18:24:04",
        "slug": "c376",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "- **summary**: LONG: Implement ESMF_FieldScatter --> LONG: Implement ESMF_FieldScatter (2/3)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-24 22:02:58",
        "slug": "311f",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-27 17:11:23",
        "slug": "623b",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "- **summary**: LONG: Implement ESMF_FieldScatter (2/3) --> LONG:ARRAY: Implement ESMF_FieldScatter (2/3)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-03 18:44:23",
        "slug": "0206",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "- **summary**: LONG:ARRAY: Implement ESMF_FieldScatter (2/3) --> LONG:ARY_GS: Implement ESMF_FieldScatter (2/3)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-04 00:03:44",
        "slug": "0345",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-15 17:40:51",
        "slug": "005e",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nmemorandum for the IMAP servers to indicate change in status",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-31 18:10:03",
        "slug": "5a96",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "- **summary**: LONG:ARY_GS: Implement ESMF_FieldScatter (2/3) --> LONG:ARY_GS: Implement ESMF_FieldScatter (3)\n- **assigned_to**: theurich --> feiliu",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:31:07",
        "slug": "de80",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:43:14",
        "slug": "8019",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "mark status to pending after emailing weiyu about 311 release.",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2008-09-15 17:34:53",
        "slug": "d107",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2008-09-15 17:34:53",
        "slug": "700f",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "user contends with the solution, close ticket",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2008-09-15 20:23:09",
        "slug": "e41e",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2008-09-15 20:23:09",
        "slug": "30d1",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      },
      {
        "text": "user contends with the solution, close ticket",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2008-09-15 20:23:40",
        "slug": "a822",
        "subject": "#63 LONG:ARY_GS: Implement ESMF_FieldScatter (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-15 20:23:09",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d308c2718463761fbee7f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d89f5b62/",
  "ticket_num": 63,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-08-31 20:23:33"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Dmitry Sheinin from NOAA\r\n\r\nDear Colleagues,\r\n\r\nThis is to point out at a certain ESMF limitation that\r\nin my opinion/experience can be easily eliminated to a\r\ngreat advantage of ESMF and non-ESMF users.\r\n\r\nCurrently, any coupling effort with existing ESMF\r\nrequires that all coupled components be ESMF models.\r\nHowever, as it occurred in our coupling experience and\r\nas may often be the case, one of the components to be\r\ncoupled \\(say, an atmosphere model\\) can be an ESMF model\r\nand the other \\(another\\) one \\(e.g. an ocean model\\) can\r\nbe not \"ESMF-ized\". In such cases, the coupling effort\r\nhas necessarily to be preceded by either \"ESMF-ization\"\r\nof the non-ESMF component or \"de-ESMF-ization\" of the\r\nESMF component. It may well be that neither alternative\r\nis practical or desirable.\r\n\r\nThe problem may be restated as follows: of the two\r\ncomponents to be coupled \\(either via inter-executable\r\nMPI communications, i.e. MPMD, or, less conveniently,\r\nby combining them in one code/executable and using SPMD\r\nintra-executable MPI communications\\), either both or\r\nneither must be ESMF models.\r\n\r\nNow, the source of the problem is only the fact that\r\nthe subroutine ESMF\\_Initialize, which is a starting\r\nESMF call in all ESMF models \\(components\\), is global in\r\nterms of MPI communications: it operates with the\r\nglobal communicator MPI\\_COMM\\_WORLD and contains a\r\nglobal MPI barrier. This means that all processes have\r\nto call ESMF\\_Initialize so that such calls match one\r\nanother and pass the barrier. Because MPI\\_COMM\\_WORLD is\r\nthe parent for all other MPI communicators used by\r\nESMF, some subsequent ESMF calls have also to be made\r\nfrom all processes and match one another. Thus, if at\r\nleast one process is \"ESMF-ized,\" so must be all other\r\nprocesses.\r\n\r\nA simple solution to the problem described is to\r\ninclude an MPI communicator as an optional argument for\r\nESMF\\_Initialize. With such a modification, \"CALL\r\nESMF\\_Initialize\\(\\)\" will be equivalent to \"CALL\r\nESMF\\_Initialize\\(MPI\\_COMM\\_WORLD\\),\" whereas \"CALL\r\nESMF\\_Initialize\\(MPI\\_COMM\\_local\\)\" will restrict all\r\nsubsequent ESMF MPI-related activities \\(including\r\nbarriers\\) to the processes belonging to the user\r\ndefined communicator MPI\\_COMM\\_local. The ESMF component\r\n\\(processes\\) subject to coupling with a non-ESMF\r\ncomponent \\(processes\\) will then contain statements:\r\n\r\nCALL MPI\\_INIT\\(\\)\r\n...............\r\nCALL MPI\\_COMM\\_SPLIT\\(...,MPI\\_COMM\\_local,...\\) \\! or an\r\nanalog thereof\r\n.................\r\nCALL ESMF\\_Initialize\\(...,MPI\\_COMM\\_local,...\\)\r\n....................\r\n\\[subsequent ESMF calls\\]\r\n\r\nwhereas the non-ESMF component \\(processes\\) will proceed\r\nwith its own MPI communications and may safely ignore ESMF.\r\n\r\nI implemented the required modification of\r\nESMF\\_Initialize \\(i.e. added MPI communicator as an\r\noptional argument\\) in the ESMF source code. This\r\nallowed us to successfully couple GFS, which is an ESMF\r\natmosphere model, with MOM3, which is a non-ESMF ocean\r\nmodel. However, my implementation of the modification\r\nmay not meet ESMF standards, such as portability\r\nbetween different platforms etc.; it was rather an ad\r\nhoc device. I believe it would be extremely beneficial\r\nif this modification could be implemented at an\r\n\"official\" level and become part of all subsequent\r\nversions of ESMF.\r\n\r\nYour feedback will be greatly appreciated.\r\n\r\n\r\nSincerely,\r\n\r\nDmitry Sheinin\r\n\r\n",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)",
  "discussion_thread": {
    "_id": "80e06480",
    "posts": [
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-04 17:21:02",
        "slug": "a107",
        "subject": "#64 LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)"
      },
      {
        "text": "- **summary**: Making MPI communicator argument to ESMF_Initialize --> LONG: Making MPI communicator argument to ESMF_Initialize\n- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-13 22:55:24",
        "slug": "cf3f",
        "subject": "#64 LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)"
      },
      {
        "text": "- **priority**: 5 --> 8\n- **milestone**: 284120 --> \n- **labels**: 880647 --> Multiple Categories",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-16 22:26:42",
        "slug": "2a3c",
        "subject": "#64 LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-16 22:27:11",
        "slug": "0774",
        "subject": "#64 LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)"
      },
      {
        "text": "- **priority**: 8 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-17 15:12:33",
        "slug": "0ee3",
        "subject": "#64 LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 02:08:22",
        "slug": "b4ab",
        "subject": "#64 LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)"
      },
      {
        "text": "- **summary**: LONG: Making MPI communicator argument to ESMF_Initialize --> LONG: Making MPI comm argument to ESMF_Initialize (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 02:11:59",
        "slug": "5460",
        "subject": "#64 LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)"
      },
      {
        "text": "- **summary**: LONG: Making MPI comm argument to ESMF_Initialize (2) --> LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-03 15:45:40",
        "slug": "fae2",
        "subject": "#64 LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nAdded optional argument \"mpiCommunicator\" to ESMF\\_Initialize\\(\\) which is scheduled to be released with 3.0.1\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-30 22:02:27",
        "slug": "ded3",
        "subject": "#64 LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-30 22:02:27",
        "slug": "d70c",
        "subject": "#64 LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-04-10 21:33:27",
        "slug": "3723",
        "subject": "#64 LONG:COMM_INIT:MPI comm argument to ESMF_Initialize (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-04-10 21:33:27",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d308f2718463761fbeed7",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/80e06480/",
  "ticket_num": 64,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-09-21 20:35:02"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "bmy@io.as.harvard.edu\r\njhy@as.harvard.edu\r\n\r\n\r\n\r\nHi --\r\n\r\nI'm just curious...I noticed on the ESMF website that\r\nSun is not one of the supported platforms.  Are there\r\nany plans to port ESMF to the Sun 4100 platform\r\n\\(64-bit, AMD64 chipset, little-endian\\) in the near future?\r\n\r\nThe reason we ask is that the Sun 4100 \\(etc.\\) is the\r\nnext generation of Sun hardware, which will eventually\r\nreplace the older Sun/SPARC machines.  One can purchase\r\none 4-processor node of a Sun 4100 for approximately\r\nthe same price as a high-end Linux PC...but the Sun\r\nmachine runs much faster.  So we feel that the new Suns\r\nwill increase in popularity very soon.\r\nIn the near future \\(i.e. a few months\\) our group will\r\nbe required to use ESMF-compliant software for\r\natmospheric modeling.   We have already installed ESMF\r\non our SGI Altix machine.  However, because the Sun\r\n4100 is faster than the Altix, we would like to install\r\nESMF there as well so that people can take advantage of\r\nthe faster machine.\r\n\r\nPlease keep us advised of any Sun-related development\r\nat ESMF.\r\n\r\nThanks much\\!\r\nBob Y.\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)",
  "discussion_thread": {
    "_id": "32f5fda9",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2006-10-03 16:32:50",
        "slug": "53f4",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **labels**: 509028 --> 509038\n- **assigned_to**: theurich --> samsoncheung",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-04 18:56:51",
        "slug": "098a",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **milestone**: 356494 --> \n- **labels**: 509038 --> Build/Install",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-17 17:49:37",
        "slug": "cd2d",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-17 17:50:13",
        "slug": "caec",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **summary**: ESMF on Sun 4100 (AMD 64-bit chipset) --> LONG: ESMF on Sun 4100 (AMD 64-bit chipset) (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-17 22:58:44",
        "slug": "41a0",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **priority**: 5 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:29:06",
        "slug": "e438",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **priority**: 2 --> 3",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 03:55:53",
        "slug": "a4ff",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **priority**: 3 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 15:17:07",
        "slug": "1759",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG: ESMF on Sun 4100 (AMD 64-bit chipset) (2) --> LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64-bit chipset) (2)",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2006-11-01 02:42:03",
        "slug": "940a",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **priority**: 2 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-12 19:58:59",
        "slug": "200b",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64-bit chipset) (2) --> LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64-bit chipset) (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-12 20:07:35",
        "slug": "eae4",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64-bit chipset) (3) --> LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 00:51:02",
        "slug": "21f8",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nBob no longer needs this port, he moved over to a Linux OS.  However we will keep this pending until we confirm that the Solaris port works on an AMD64 machine. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-13 16:54:45",
        "slug": "f239",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-13 20:57:00",
        "slug": "f7fa",
        "subject": "#65 LONG:PORT2SUN:ESMF on Sun 4100 (AMD 64) (Contrib ?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-06-13 20:57:00",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30912718463761fbef15",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/32f5fda9/",
  "ticket_num": 65,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2006-09-29 17:07:20"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Amidu.O.Oloso.1@gsfc.nasa.gov\r\ntrayanov@janus.gsfc.nasa.gov\r\nEugene.Mirvis@gsfc.nasa.gov\r\ndkokron@gmao.gsfc.nasa.gov\r\n\r\n\r\nDear support,\r\nWe are porting ESMF to the Cray XT3 at ORNL. The\r\ncompute nodes run the Cray Catamount Microkernel OS\r\nthat has no support for the functions indicated in the\r\nseries of email below. What would you advise? This may\r\nbe of special interest to Gerhard since he developed\r\nthe VMKernel that seems to be where the indicated\r\nfunctions are used.\r\nThanks.\r\nHamid\r\n\r\nAtanas tells me that VMKernel is Gerhard's creation, so\r\nhe seems like a\r\ngood place to start.  Atanas also suggested that\r\nGerhard might already\r\nbe working on ESMF-3.  The GMAO would prefer a solution for\r\nESMF-2.2.0rp2 \\(used currently\\), but could work with a\r\nESMF-2.3 solution.\r\nV3 is too different for us to use right now.\r\n\r\nCould you cc myself and Atanas on the email to\r\nesmf-support?\r\n\r\nDan ",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:XT3_PORT:ESMF on the ORN XT3 (2)",
  "discussion_thread": {
    "_id": "c28b3baa",
    "posts": [
      {
        "text": "- **labels**: 648884 --> Build/Install\n- **milestone**: 356494 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-17 23:12:27",
        "slug": "dc8f",
        "subject": "#66 LONG:XT3_PORT:ESMF on the ORN XT3 (2)"
      },
      {
        "text": "- **summary**: ESMF on the ORN XT3 --> LONG: ESMF on the ORN XT3 (2)\n- **milestone**:  --> Port to New Platform",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-17 23:12:54",
        "slug": "1e07",
        "subject": "#66 LONG:XT3_PORT:ESMF on the ORN XT3 (2)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 02:06:36",
        "slug": "9164",
        "subject": "#66 LONG:XT3_PORT:ESMF on the ORN XT3 (2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\n\nsent announcement of ESMF\\_2\\_2\\_2\\_beta\\_snapshot\\_21\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-23 19:04:17",
        "slug": "e750",
        "subject": "#66 LONG:XT3_PORT:ESMF on the ORN XT3 (2)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-23 19:04:17",
        "slug": "189f",
        "subject": "#66 LONG:XT3_PORT:ESMF on the ORN XT3 (2)"
      },
      {
        "text": "- **summary**: LONG: ESMF on the ORN XT3 (2) --> LONG:XT3_PORT:ESMF on the ORN XT3 (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-03 15:44:30",
        "slug": "913f",
        "subject": "#66 LONG:XT3_PORT:ESMF on the ORN XT3 (2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1312539\n\nThis Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 14 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2006-11-07 03:20:03",
        "slug": "149f",
        "subject": "#66 LONG:XT3_PORT:ESMF on the ORN XT3 (2)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2006-11-07 03:20:03",
        "slug": "e345",
        "subject": "#66 LONG:XT3_PORT:ESMF on the ORN XT3 (2)"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-07 03:35:47",
        "slug": "5483",
        "subject": "#66 LONG:XT3_PORT:ESMF on the ORN XT3 (2)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-14 17:17:04",
        "slug": "1d91",
        "subject": "#66 LONG:XT3_PORT:ESMF on the ORN XT3 (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2006-11-14 17:17:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30932718463761fbef63",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c28b3baa/",
  "ticket_num": 66,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2006-09-29 17:47:09"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Alan Wallcraft from the Navy\r\n\r\nHas anyone had an luck getting ESMF to work on a Cray XT3?\r\n\r\nCode that works on IBM AIX and SGI IRIX64 is failing on\r\nthe XT3.  The first bug\r\nI hit is from:\r\n\r\ncall ESMF\\_GridDistribute\\(grid2D,\r\n&     deLayout       =deLayout,\r\n&     countsPerDEDim1=countde1\\(1:ipr\\),\r\n&     countsPerDEDim2=countde2\\(1:jpr\\),\r\n&     rc=rc\\)\r\n\r\nThis seems to be the same problem as one of the many\r\nunit tests that fail \\(or is\r\nnever reached\\):\r\n\r\nsapphire06 115&gt; pwd\r\n/usr/local/usp/BEI/esmf/2.2.2/test/testg/Linux.pgi.64.default\r\nsapphire06 116&gt; ll ESMF\\_GridCreateUTest\\*\r\n-rwxr-xr-x    1 tjc      hpcmoin3 47937320 Sep 11 08:27\r\nESMF\\_GridCreateUTest\\*\r\n-rw-r--r--    1 tjc      hpcmoin3        0 Sep 11 11:21\r\nESMF\\_GridCreateUTest.Log\r\n-rw-r--r--    1 tjc      hpcmoin3     3579 Sep 11 11:21\r\nESMF\\_GridCreateUTest.stdout\r\n\r\nThe Cray XT3 uses the Portland Group compilers, and we\r\nget a similar failure on\r\nour local Opteron workstations:\r\n\r\najax 35&gt; pwd\r\n/common/BEI/esmf/2.2.2/test/testg/Linux.pgi.64.x86\\_64\r\najax 36&gt; ll l ESMF\\_GridCreateUTest\\*\r\n/bin/ls: l: No such file or directory\r\n-rwxr-xr-x  1 tjcamp NRL7320 38255191 Sep 15 08:45\r\nESMF\\_GridCreateUTest\\*\r\n-rw-r--r--  1 tjcamp NRL7320        0 Sep 15 08:45\r\nESMF\\_GridCreateUTest.Log\r\n-rw-r--r--  1 tjcamp NRL7320    12152 Sep 15 08:45\r\nESMF\\_GridCreateUTest.stdout\r\n\r\nOverall, many more unit tests fail on the XT3 \\(219 vs\r\n82 on the Opteron\r\nworkstation\\).  We compile without pthreads on the XT3,\r\nbut we get the same 82\r\nfailures with and without pthreads on the Opteron.\r\n\r\nThis is from the standard v2.2.2 release.  I am running\r\non the ERDC Cray XT3, using the 6.1.1 compiler:\r\n\r\nsapphire06 277&gt; module list\r\nCurrently Loaded Modulefiles:\r\n1\\) modules/3.1.6         7\\) papi/3.2.1           13\\)\r\nxt-boot/1.3.28\r\n2\\) acml/2.7              8\\) PrgEnv-pgi/1.3.28    14\\)\r\nxt-crms/1.3.28\r\n3\\) pgi/6.1.1             9\\) xt-service/1.3.28    15\\)\r\nxt-lustre-ss/1.3.28\r\n4\\) xt-libsci/1.3.28     10\\) xt-libc/1.3.28       16\\)\r\nBase-opts/1.3.28\r\n5\\) xt-mpt/1.3.28        11\\) xt-os/1.3.28         17\\)\r\nxt-lsfhpc/6.1\r\n6\\) xt-pe/1.3.28         12\\) xt-catamount/1.3.28\r\n\r\nAlan.\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\r\nEsmf\\_support mailing list\r\nEsmf\\_support@ucar.edu\r\nhttp://mailman.ucar.edu/mailman/listinfo/esmf\\_support\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "donstark",
  "assigned_to_id": "519d24f32718463761fab8d0",
  "private": false,
  "summary": "LONG:XT3_PORT:ESMF on the Cray XT3 (2)",
  "discussion_thread": {
    "_id": "28f019e0",
    "posts": [
      {
        "text": "- **milestone**: 155253 --> \n- **labels**: 509038 --> Build/Install",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-17 22:57:27",
        "slug": "b5fe",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-17 22:57:56",
        "slug": "bf81",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **summary**: ESMF on the Cray XT3 --> LONG: ESMF on the Cray XT3 (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-17 22:58:26",
        "slug": "baca",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **assigned_to**: donstark --> theurich",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-17 23:13:16",
        "slug": "7b9e",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 02:04:55",
        "slug": "6ca9",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-23 19:03:06",
        "slug": "ef89",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\n\nsent announcement of ESMF\\_2\\_2\\_2\\_beta\\_snapshot\\_21",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-10-23 19:05:52",
        "slug": "bd56",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **summary**: LONG: ESMF on the Cray XT3 (2) --> LONG:XT3_PORT:ESMF on the Cray XT3 (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-03 15:44:07",
        "slug": "bc01",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1312539\n\nThis Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 14 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2006-11-07 03:20:03",
        "slug": "5247",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2006-11-07 03:20:03",
        "slug": "fdec",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-07 03:35:27",
        "slug": "d964",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **assigned_to**: theurich --> donstark\n- **status**: pending --> open",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-01-12 17:49:19",
        "slug": "e13f",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-01-12 17:49:32",
        "slug": "0a96",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2007-02-16 00:48:23",
        "slug": "800b",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2007-02-16 17:57:37",
        "slug": "e034",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2007-02-21 17:05:24",
        "slug": "0017",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1453265\nOriginator: NO\n\nSpoke to Alan and he confirmed that the ESMF\\_2\\_2\\_2\\_beta\\_snapshot\\_21 snapshot solves this issue on XT3",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2007-03-30 19:19:10",
        "slug": "b7d8",
        "subject": "#67 LONG:XT3_PORT:ESMF on the Cray XT3 (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-02-21 17:05:24",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30952718463761fbef9d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/28f019e0/",
  "ticket_num": 67,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2006-10-13 21:49:57"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "This is a clock requested by Ghee Fry / BEI for space\r\nweather applications.",
  "labels": [
    "Time Manager"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Support Carrington time calendar (4)",
  "discussion_thread": {
    "_id": "0382539c",
    "posts": [
      {
        "text": "- **summary**: Add Carrington time clock --> Support Carrington time calendar",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-10-18 04:41:41",
        "slug": "a1d9",
        "subject": "#68 Support Carrington time calendar (4)"
      },
      {
        "text": "- **assigned_to**: eschwab --> nobody",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-28 16:27:14",
        "slug": "5a4b",
        "subject": "#68 Support Carrington time calendar (4)"
      },
      {
        "text": "- **summary**: Support Carrington time calendar --> Support Carrington time calendar (4)\n- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:30:29",
        "slug": "ce13",
        "subject": "#68 Support Carrington time calendar (4)"
      },
      {
        "text": "- **assigned_to**: nobody --> eschwab",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-09-05 16:19:19",
        "slug": "77e3",
        "subject": "#68 Support Carrington time calendar (4)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-09-05 16:21:18",
        "slug": "5232",
        "subject": "#68 Support Carrington time calendar (4)"
      },
      {
        "text": "Ghee confirmed on 9/22/08 that he would still like to have this implemented.\r\n\r\n\\-- Earl",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-09-24 17:17:39",
        "slug": "1ff6",
        "subject": "#68 Support Carrington time calendar (4)"
      },
      {
        "text": "Carrington calendar reference info, below, provided by Ghee under ticket \\#3088158.  Also, Ghee's timeframe is now after April 2011 at the earliest, see e-mail thread.\r\n\r\n\"Hi Earl and Ricky,\r\n\r\nThe Carrington calendar started on Nov 9, 1853, about 6 years before the Carrington Event. There is a nice short description of Carrington coordinates at: http://wso.stanford.edu/words/Coordinates.html.\r\n\r\nI think the Naval Observatory's Astronomical Almanac still contains a detailed description of the Carrington calendar and calculations.  It is available from www.gpo.gov.\r\n\r\nThe algorithm that I used to compute Carrington Rotation and Longitude at a given time is from the 1991 version of a book by Jean Meeus: Astronomical Algorithms, published by Willmann-Bell, Inc.  pp 177-180, ISBN 0-943396-35-2.  The most recent version is 1998, available on Amazon.com.   \r\n\r\nSee also the description at http://umtof.umd.edu/pm/crn/CARRTIME.HTML for calculating Carrington Longitude using a different technique.\r\n\r\nHope this helps,\r\n\r\nGhee\"",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-01 19:53:36",
        "slug": "359f",
        "subject": "#68 Support Carrington time calendar (4)"
      },
      {
        "text": "- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 17:35:09",
        "slug": "4057",
        "subject": "#68 Support Carrington time calendar (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:35:09",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30992718463761fbeffb",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0382539c/",
  "ticket_num": 68,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-10-18 04:38:15"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "WHO Charles Poole, Computational Physics Inc.\r\nworking with NRL. Unknown model.\r\n\r\ncpoole@ssd5.nrl.navy.mil\r\n\r\nall,\r\n\r\nI found the below text in another request. This second\r\nquestion was never opened. Even though it is old, it is\r\na good question that we should have a record of...\r\n\r\n\r\nAlso, is there any way to use derived \\(user defined\\)\r\ntypes in ESMF\\_Arrays and ESMF\\_Fields? I see in the\r\nreference documentation that it might be possible to\r\ncreate data buffers and use start/end/stride triplets\r\nto create/reference ESMF\\_Arrays using an array of such\r\nbuffers. Has this been implemented and if so are there\r\nexamples of its usage?",
  "labels": [
    "State"
  ],
  "assigned_to": "cdeluca",
  "assigned_to_id": "4f568833b9363c6a5a000769",
  "private": false,
  "summary": "LONG:USRDEF:User defined types in array and field? (?)",
  "discussion_thread": {
    "_id": "e96dbcc1",
    "posts": [
      {
        "text": "- **summary**: User defined types in array and field? --> LONG:USRDEF:User defined types in array and field?\n- **milestone**: 155253 --> \n- **labels**: 588648 --> 904962",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-12-01 18:00:55",
        "slug": "795a",
        "subject": "#69 LONG:USRDEF:User defined types in array and field? (?)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-12-01 18:02:31",
        "slug": "18c8",
        "subject": "#69 LONG:USRDEF:User defined types in array and field? (?)"
      },
      {
        "text": "- **labels**: 904962 --> State",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-12-01 18:03:06",
        "slug": "e54f",
        "subject": "#69 LONG:USRDEF:User defined types in array and field? (?)"
      },
      {
        "text": "- **assigned_to**: donstark --> samsoncheung",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-12-01 18:03:21",
        "slug": "c598",
        "subject": "#69 LONG:USRDEF:User defined types in array and field? (?)"
      },
      {
        "text": "- **assigned_to**: samsoncheung --> cdeluca\n- **summary**: LONG:USRDEF:User defined types in array and field? --> LONG:USRDEF:User defined types in array and field? (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:29:45",
        "slug": "4400",
        "subject": "#69 LONG:USRDEF:User defined types in array and field? (?)"
      },
      {
        "text": "We are closing this one because we do not feel it is a good idea or consistent with the ESMF design. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:37:09",
        "slug": "8dad",
        "subject": "#69 LONG:USRDEF:User defined types in array and field? (?)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:38:37",
        "slug": "5040",
        "subject": "#69 LONG:USRDEF:User defined types in array and field? (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-06 18:38:37",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d309a2718463761fbf02b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e96dbcc1/",
  "ticket_num": 69,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-10-30 18:58:25"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "Incorporate a performance profiler \\(likely Tau\\) into\r\nESMF makefiles, source as useful, documentation,\r\ndownload page.",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "Incorporate perf profiler into ESMF (2)",
  "discussion_thread": {
    "_id": "dd99c862",
    "posts": [
      {
        "text": "- **summary**: LONG: Incorporate perf profiler into ESMF (3) --> LONG: Incorporate perf profiler into ESMF (2/2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-01 06:49:31",
        "slug": "a808",
        "subject": "#70 Incorporate perf profiler into ESMF (2)"
      },
      {
        "text": "- **summary**: LONG: Incorporate perf profiler into ESMF (2/2) --> LONG: Incorporate perf profiler into ESMF (4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:27:04",
        "slug": "d33e",
        "subject": "#70 Incorporate perf profiler into ESMF (2)"
      },
      {
        "text": "- **summary**: LONG: Incorporate perf profiler into ESMF (4) --> Incorporate perf profiler into ESMF",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:28:02",
        "slug": "f430",
        "subject": "#70 Incorporate perf profiler into ESMF (2)"
      },
      {
        "text": "- **summary**: Incorporate perf profiler into ESMF --> Incorporate perf profiler into ESMF (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:28:19",
        "slug": "0950",
        "subject": "#70 Incorporate perf profiler into ESMF (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-06 18:28:19",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d309c2718463761fbf055",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/dd99c862/",
  "ticket_num": 70,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-11-01 05:47:10"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "This request was from Tom Clune, who would like\r\nutilities to make it easier to work with Fortran units. ",
  "labels": [
    "I/O"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "LONG: Implement handles for Fortran units (2)",
  "discussion_thread": {
    "_id": "77122037",
    "posts": [
      {
        "text": "- **summary**: LONG: Implement handles for Fortran units --> LONG: Implement handles for Fortran units (1/1)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-01 06:50:11",
        "slug": "ff72",
        "subject": "#71 LONG: Implement handles for Fortran units (2)"
      },
      {
        "text": "- **summary**: LONG: Implement handles for Fortran units (1/1) --> LONG: Implement handles for Fortran units (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:24:35",
        "slug": "6644",
        "subject": "#71 LONG: Implement handles for Fortran units (2)"
      },
      {
        "text": "- **assigned_to**: nobody --> w6ws",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-05 16:06:37",
        "slug": "9be2",
        "subject": "#71 LONG: Implement handles for Fortran units (2)"
      },
      {
        "text": "Email with Tom on 10/28/2008 indicated that between the new code for resetting the unit numbers used by ESMF \\(ticket \\#2035333\\), and making ESMF\\_FIOUnitGet public, would satisfy his needs.  In particular, he did not feel that ESMF needed to implement any sort of unit number reservation system above what OPEN and CLOSE already do internally.\r\n\r\nA mod has now been made to make the internal documentation for ESMF\\_FIOUnitGet public.\r\n\r\nWalter",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-10-29 04:50:19",
        "slug": "e5e1",
        "subject": "#71 LONG: Implement handles for Fortran units (2)"
      },
      {
        "text": "Emailed Tom to ask if the current implementation is sufficient for his needs.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-12-17 02:08:58",
        "slug": "20ea",
        "subject": "#71 LONG: Implement handles for Fortran units (2)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-12-17 02:08:59",
        "slug": "7187",
        "subject": "#71 LONG: Implement handles for Fortran units (2)"
      },
      {
        "text": "Tom confirmed that the I/O unit feature satisfies his needs.  Closing.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-12-17 17:23:27",
        "slug": "e822",
        "subject": "#71 LONG: Implement handles for Fortran units (2)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-12-17 17:23:27",
        "slug": "9a85",
        "subject": "#71 LONG: Implement handles for Fortran units (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-12-17 17:23:27",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d309d2718463761fbf070",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/77122037/",
  "ticket_num": 71,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-11-01 06:00:28"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "Implement method of transferring data between\r\ncomponents mid-timestep.  This strategy involved\r\nwrapping function pointers to send/recv methods that\r\nact on States in a Fortran derived type, and passing\r\nthese types through the component interface.  In order\r\nto do the send the call would be something like\r\nESMF\\_StateTransform\\(state,transform\\), where the\r\nfunction inside of the transform acts on the State.  We\r\nnow have other strategies \\(i.e. the work being done by\r\nAlan Sussman on MPMD\\) that accomplish much the same\r\nthing, so it's not clear that this task is still\r\nnecessary.  The group most interested in transforms was\r\nCCSM.",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "LONG: Implement transforms (?)",
  "discussion_thread": {
    "_id": "4bf5a0d7",
    "posts": [
      {
        "text": "- **summary**: LONG: Implement transforms (8/8) --> LONG: Implement transforms (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:24:21",
        "slug": "6848",
        "subject": "#72 LONG: Implement transforms (?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: YES\n\nWe have no users who are waiting on this or want it, and we have adopted simpler strategies for mid-timestep communications. It appears okay to close the ticket. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-25 23:21:38",
        "slug": "883c",
        "subject": "#72 LONG: Implement transforms (?)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-25 23:21:38",
        "slug": "118b",
        "subject": "#72 LONG: Implement transforms (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-25 23:21:38",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d309e2718463761fbf0a0",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4bf5a0d7/",
  "ticket_num": 72,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-11-01 06:48:45"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Lei Pan from JPL\r\n\r\nHi,\r\n\r\nI was wondering if in ESMF there is a similar concept\r\nand mechanism\r\nlike the FMS field manager?\r\nhttp://www.gfdl.noaa.gov/fms/pubrel/j/atm\\_dycores/src/shared/field\\_manager/field\\_manager.html\r\n\r\nThanks,\r\n\r\n-Lei Pan\r\nJPL\r\n",
  "labels": [
    "Field"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": " LONG:FIELD_TBL:FMS field manager available in ESMF? (?)",
  "discussion_thread": {
    "_id": "b6485c65",
    "posts": [
      {
        "text": "- **labels**: 588648 --> Field\n- **milestone**: 495011 --> \n- **summary**:  FMS field manager available in ESMF? -->  LONG:FIELD_TBL:FMS field manager available in ESMF?",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2006-11-17 00:35:34",
        "slug": "6efb",
        "subject": "#73  LONG:FIELD_TBL:FMS field manager available in ESMF? (?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nmemorandum for the IMAP folders indicating this was moved to feature requests and marked LONG.",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-09-25 17:24:17",
        "slug": "e280",
        "subject": "#73  LONG:FIELD_TBL:FMS field manager available in ESMF? (?)"
      },
      {
        "text": "- **summary**:  LONG:FIELD_TBL:FMS field manager available in ESMF? -->  LONG:FIELD_TBL:FMS field manager available in ESMF? (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:24:06",
        "slug": "9175",
        "subject": "#73  LONG:FIELD_TBL:FMS field manager available in ESMF? (?)"
      },
      {
        "text": "- **priority**: 5 --> 1\n- **assigned_to**: samsoncheung --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 17:31:50",
        "slug": "664e",
        "subject": "#73  LONG:FIELD_TBL:FMS field manager available in ESMF? (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:31:50",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d309f2718463761fbf0b6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b6485c65/",
  "ticket_num": 73,
  "custom_fields": {
    "_priority": "1"
  },
  "created_date": "2006-11-01 16:22:14"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "After bilinear, 1st order conservative",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: RGRD: higher order conserv regridding (8)",
  "discussion_thread": {
    "_id": "9b27c7c6",
    "posts": [
      {
        "text": "- **summary**: LONG: Internally generated 2nd order conserv regrid (8) --> LONG: Internally generated 2nd order conserv regrid (2/8)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-02 10:27:38",
        "slug": "31f3",
        "subject": "#74 LONG: RGRD: higher order conserv regridding (8)"
      },
      {
        "text": "- **summary**: LONG: Internally generated 2nd order conserv regrid (2/8) --> LONG: Internally generated 2nd order conserv regrid (10)\n- **assigned_to**: nobody --> dneckels",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:23:48",
        "slug": "94b2",
        "subject": "#74 LONG: RGRD: higher order conserv regridding (8)"
      },
      {
        "text": "- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:42:42",
        "slug": "91dc",
        "subject": "#74 LONG: RGRD: higher order conserv regridding (8)"
      },
      {
        "text": "attach recent email conversations with Amik",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-07-15 22:19:53",
        "slug": "326e",
        "subject": "#74 LONG: RGRD: higher order conserv regridding (8)"
      },
      {
        "text": "- **summary**: LONG: Internally generated 2nd order conserv regrid (10) --> LONG: RGRD: 2nd order conserv regridding (?)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 22:07:59",
        "slug": "09ce",
        "subject": "#74 LONG: RGRD: higher order conserv regridding (8)"
      },
      {
        "text": "WHO: David Neckels \\(core team member\\). Will help groups such as CCSM who need precise conservative regridding. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 18:03:03",
        "slug": "30b1",
        "subject": "#74 LONG: RGRD: higher order conserv regridding (8)"
      },
      {
        "text": "- **summary**: LONG: RGRD: 2nd order conserv regridding (?) --> LONG: RGRD: 2nd order conserv regridding (6)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-01-12 21:41:26",
        "slug": "74f9",
        "subject": "#74 LONG: RGRD: higher order conserv regridding (8)"
      },
      {
        "text": "- **summary**: LONG: RGRD: 2nd order conserv regridding (6) --> LONG: RGRD: 2nd order conserv regridding (8)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-01-12 22:58:38",
        "slug": "9694",
        "subject": "#74 LONG: RGRD: higher order conserv regridding (8)"
      },
      {
        "text": "- **summary**: LONG: RGRD: 2nd order conserv regridding (8) --> LONG: RGRD: higher order conserv regridding (8)\n- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 12:42:34",
        "slug": "351d",
        "subject": "#74 LONG: RGRD: higher order conserv regridding (8)"
      },
      {
        "text": "- **assigned_to**: dneckels --> oehmke\n- **priority**: 7 --> 9",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:29:45",
        "slug": "cb60",
        "subject": "#74 LONG: RGRD: higher order conserv regridding (8)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:29:45",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d309f2718463761fbf0d2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/9b27c7c6/",
  "ticket_num": 74,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-11-02 10:27:01"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "Support is not yet well-defined.",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "dneckels",
  "assigned_to_id": "5123f7a234309d566cb6aaf5",
  "private": false,
  "summary": "LONG: uGRD:Support  for unstructured grids (32)",
  "discussion_thread": {
    "_id": "ba395dba",
    "posts": [
      {
        "text": "- **priority**: 2 --> 5\n- **summary**: LONG: Support  for unsrtructured grids (8/24) --> LONG: Support  for unstructured grids (8/24)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-02 11:04:57",
        "slug": "77e2",
        "subject": "#75 LONG: uGRD:Support  for unstructured grids (32)"
      },
      {
        "text": "- **summary**: LONG: Support  for unstructured grids (8/24) --> LONG: uGRD:Support  for unstructured grids (8/24)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-12 20:55:45",
        "slug": "42b7",
        "subject": "#75 LONG: uGRD:Support  for unstructured grids (32)"
      },
      {
        "text": "- **summary**: LONG: uGRD:Support  for unstructured grids (8/24) --> LONG: uGRD:Support  for unstructured grids (32)\n- **labels**: 904965 --> Grid - New\n- **assigned_to**: nobody --> dneckels",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:23:28",
        "slug": "ee93",
        "subject": "#75 LONG: uGRD:Support  for unstructured grids (32)"
      },
      {
        "text": "Keeping this open until we have a FieldRegrid interface for Fields built on Meshes. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-16 00:29:49",
        "slug": "0e1e",
        "subject": "#75 LONG: uGRD:Support  for unstructured grids (32)"
      },
      {
        "text": "- **summary**: LONG: uGRD:Support  for unstructured grids (32) --> PREPEND: LONG: uGRD:Support  for unstructured grids (32)\n- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 15:46:44",
        "slug": "80e6",
        "subject": "#75 LONG: uGRD:Support  for unstructured grids (32)"
      },
      {
        "text": "- **summary**: PREPEND: LONG: uGRD:Support  for unstructured grids (32) --> LONG: uGRD:Support  for unstructured grids (32)\n- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-12-02 17:32:49",
        "slug": "85f0",
        "subject": "#75 LONG: uGRD:Support  for unstructured grids (32)"
      },
      {
        "text": "The scope desired for BEI was achieved \\(ADCIRC-pWASH123\\). - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 17:51:39",
        "slug": "89b1",
        "subject": "#75 LONG: uGRD:Support  for unstructured grids (32)"
      },
      {
        "text": "Closing ticket. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 17:51:58",
        "slug": "6186",
        "subject": "#75 LONG: uGRD:Support  for unstructured grids (32)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 17:51:58",
        "slug": "a863",
        "subject": "#75 LONG: uGRD:Support  for unstructured grids (32)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:51:58",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30a12718463761fbf10d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/ba395dba/",
  "ticket_num": 75,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-11-02 10:40:39"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "Based on GFDL FMS.",
  "labels": [
    "Grid - Old"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "LONG: Exchange grid implementation (32)",
  "discussion_thread": {
    "_id": "a79f837c",
    "posts": [
      {
        "text": "- **priority**: 2 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-11-02 11:04:33",
        "slug": "9bde",
        "subject": "#76 LONG: Exchange grid implementation (32)"
      },
      {
        "text": "- **assigned_to**: nobody --> feiliu\n- **summary**: LONG: Exchange grid implementation (8/24) --> LONG: Exchange grid implementation (32)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:22:55",
        "slug": "9bb3",
        "subject": "#76 LONG: Exchange grid implementation (32)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 15:11:41",
        "slug": "d41a",
        "subject": "#76 LONG: Exchange grid implementation (32)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-11-30 15:11:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30a22718463761fbf142",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a79f837c/",
  "ticket_num": 76,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-11-02 10:59:26"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "\r\nCurrently, many compilers lack support for automatic initialization\r\nof types. Its important for ESMF to know if a compiler supports\r\nthis initialization so the code can be altered accordingly. Unfortunately,\r\nwhether a compiler supports this feature changes from version \r\nto version, and can only be determined manually. This request\r\nis to add the automatic detection of whether a compiler supports\r\ninitialization to the ESMF configure \\(e.g. through compiling \r\na piece of test code\\), and to set the appropriate flags accordingly. ",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "LONG: Automated check for comp. support for init (3)",
  "discussion_thread": {
    "_id": "11a753d6",
    "posts": [
      {
        "text": "- **summary**: LONG: Automated check for comp. support for initialization --> LONG: Automated check for comp. support for init (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:22:30",
        "slug": "bb74",
        "subject": "#77 LONG: Automated check for comp. support for init (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 18:22:30",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30a42718463761fbf159",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/11a753d6/",
  "ticket_num": 77,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2006-11-07 18:33:48"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "WHO: John Eylander/AFWA\r\n\r\nAFWA is interested in running ESMF on a Sun platform by\r\nthe end of the year.  They have a workaround of running\r\na non-ESMF version.  The request here is to find out\r\nwhat Sun configuration exactly they want to run on -\r\nthe AFWA folks at the meeting where this came up don't\r\nknow.  Then we can figure out whether it makes sense to\r\nmove this to a request for a port or not.\r\n\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "cdeluca",
  "assigned_to_id": "4f568833b9363c6a5a000769",
  "private": false,
  "summary": "LONG:PORT2SUN:Sun support (Contrib ?)",
  "discussion_thread": {
    "_id": "0a7d3883",
    "posts": [
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **summary**: Sun support clarification --> LONG:PORT2SUN:Sun support \n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-12-01 17:57:49",
        "slug": "206a",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "- **priority**: 5 --> 2",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-01-25 19:59:26",
        "slug": "a4ac",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "- **priority**: 2 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-12 19:58:25",
        "slug": "9e9b",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG:PORT2SUN:Sun support  --> LONG:PORT2SUN:Sun support (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-12 20:06:55",
        "slug": "6a1f",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG:PORT2SUN:Sun support (3) --> LONG:PORT2SUN:Sun support (Contrib ?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 00:50:22",
        "slug": "ea3f",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nRight now I am working with Bill Aiken from Sun on getting his build\\_rules.mk working. All correspondence with Bill is under this ticket number.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-01-23 21:36:47",
        "slug": "afa0",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "- **assigned_to**: samsoncheung --> theurich",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-01-23 21:36:47",
        "slug": "73e4",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nThe SunOS port is done and available on 310branch starting with 310bs50, and on the trunk starting with 311bs24. Cecelia contacted the AFWA folks indicating that the SunOS port will become available with 310r. This ticket is pending on feedback from AFWA.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-04-17 16:51:59",
        "slug": "5aea",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform\n- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-04-17 16:51:59",
        "slug": "021c",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "Per 01/16/09 ticket meeting Cecelia is going to contact AFWA folks.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-01-16 21:48:37",
        "slug": "deb9",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "The current contact has been Joe Reich. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:48:18",
        "slug": "30d0",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "- **assigned_to**: theurich --> cdeluca\n- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:48:18",
        "slug": "b972",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG:PORT2SUN:Sun support (Contrib ?) --> PREPEND: LONG:PORT2SUN:Sun support (Contrib ?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 14:52:48",
        "slug": "9161",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 14:52:59",
        "slug": "b6ca",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "Will write during semi-annual code check. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-12-29 04:18:07",
        "slug": "ac95",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "- **summary**: PREPEND: LONG:PORT2SUN:Sun support (Contrib ?) --> LONG:PORT2SUN:Sun support (Contrib ?)\n- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-12-29 04:18:07",
        "slug": "021a",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "Close per 2786112. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-06-25 14:56:20",
        "slug": "9004",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-06-25 14:56:21",
        "slug": "1b54",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      },
      {
        "text": "On Dec 21, 2009, at 4:57 PM, Cecelia DeLuca wrote:\r\n\r\n&gt; &gt; \r\n&gt; &gt; Thanks, Joe.  - Cecelia\r\n&gt; &gt; \r\n&gt; &gt; Reich, Joseph P III Capt USAF AFWA 16 WS/WXN wrote:\r\n&gt;&gt; &gt;&gt; SWMS is not running and won't be implemented in ops for some time, so you\r\n&gt;&gt; &gt;&gt; can probably close the ticket and we can reengage when needed.\r\n&gt;&gt; &gt;&gt; \r\n&gt;&gt; &gt;&gt; Joe\r\n&gt;&gt; &gt;&gt; \r\n",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-03-31 15:54:46",
        "slug": "29db",
        "subject": "#78 LONG:PORT2SUN:Sun support (Contrib ?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-25 14:56:21",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30a42718463761fbf165",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0a7d3883/",
  "ticket_num": 78,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2006-11-08 17:18:54"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "WHO: Erik Kluzek\r\n\r\nAs I noted in my last message, there aren't gatherv/scatterv methods for VM communication. In my stage-1 prototype since I needed to do this I used MPI directly to do this. But, it seems like ESMF should provide this ability at the VM communication level. As a matter of fact I'm surprised you don't need it internally already?\r\n\r\nAgain I don't need this for Stage-1 as I'm using MPI directly to do so. But, in the long-term it seems like ESMF should provide methods to do so. We probably wouldn't need this for Stage-2 either, but if the methods are developed for internal use they should probably be allowed for public use within a year or so.\r\n\r\nErik Kluzek, \\(CGD at NCAR\\)\r\nNational Center for Atmospheric Research\r\nBoulder CO, \\(off\\) \\(303\\)497-1326 \\(fax\\) \\(303\\)497-1314",
  "labels": [
    "VM"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "VM_GS: Add VM gatherv and scatterv",
  "discussion_thread": {
    "_id": "83f6c9e3",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nAdded feature in ESMF\\_3\\_0\\_2\\_beta\\_snapshot\\_08 and scheduled for release with ESMF 3.0.2. Sent note to Erik.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-04-24 23:38:26",
        "slug": "a476",
        "subject": "#79 VM_GS: Add VM gatherv and scatterv"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-04-24 23:38:26",
        "slug": "d948",
        "subject": "#79 VM_GS: Add VM gatherv and scatterv"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nThank you Samson, I'll keep this ticket pending,\r\n-Gerhard\r\n\r\nSamson Cheung wrote:\r\n\r\n&gt; Hi Gerhard,\r\n&gt;\r\n&gt; I talked to Erik and Mariana about this pending ticket. Since it\r\n&gt; would not being using ESMF3 series until stage-2, and there\r\n&gt; is no resources to make stage-1 using ESMF3, so the modification\r\n&gt; will not be tested until stage-2. However, stage-2 is\r\n&gt; scheduled to come.\r\n&gt;\r\n&gt; Cheers,\r\n&gt;\r\n&gt; Samson\r\n&gt;\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-06-12 17:10:03",
        "slug": "54d7",
        "subject": "#79 VM_GS: Add VM gatherv and scatterv"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1312539\nOriginator: NO\n\nThis Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 365 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2008-04-24 02:20:12",
        "slug": "5cb1",
        "subject": "#79 VM_GS: Add VM gatherv and scatterv"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2008-04-24 02:20:12",
        "slug": "35d8",
        "subject": "#79 VM_GS: Add VM gatherv and scatterv"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nkeep pending\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-04-24 03:17:32",
        "slug": "d18d",
        "subject": "#79 VM_GS: Add VM gatherv and scatterv"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-04-24 03:17:32",
        "slug": "6ea1",
        "subject": "#79 VM_GS: Add VM gatherv and scatterv"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nnotified Erik that methods are available in \\_public\\_ 310r, close ticket as per ticket meeting 07/18/08,\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-18 22:26:31",
        "slug": "bcd2",
        "subject": "#79 VM_GS: Add VM gatherv and scatterv"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-18 22:26:31",
        "slug": "54c4",
        "subject": "#79 VM_GS: Add VM gatherv and scatterv"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-18 22:26:31",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30a82718463761fbf1cb",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/83f6c9e3/",
  "ticket_num": 79,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-11-15 18:28:39"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "WHO: Atanas Trayanov\r\n\r\nCecelia,\r\n\r\nThis request is follow-up on Eric Kluzek request \\(sourceforge item number 1597180\\)\r\n\r\nCould you also add the following communication methods to the list:\r\nallgather\r\nallgatherv\r\n\r\nCouurently GEOS-5 uses staright MPI call for these but it would be nice sometime in the future to try to use VM only communications\r\n\r\n-Atanas ",
  "labels": [
    "VM"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "VM_GS: Add VMScatterV()",
  "discussion_thread": {
    "_id": "682436ca",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nVMGatherV\\(\\) and VMAllGatherV\\(\\) are part of ESMF 2.2.2r and 3.0.1. Sent note to Atanas.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-04-25 15:22:33",
        "slug": "2381",
        "subject": "#80 VM_GS: Add VMScatterV()"
      },
      {
        "text": "- **summary**: VM_GS: Add VM allgatherv and allscatterv --> VM_GS: Add VM allgather and allgatherv\n- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-04-25 15:22:33",
        "slug": "609a",
        "subject": "#80 VM_GS: Add VMScatterV()"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nTurns out that Atanas needed VMScatterV\\(\\) -&gt; added in 3.0.2\r\n1st user notification: 04/25/07\r\n2nd user notification: 06/12/07\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-06-12 17:07:25",
        "slug": "f517",
        "subject": "#80 VM_GS: Add VMScatterV()"
      },
      {
        "text": "- **summary**: VM_GS: Add VM allgather and allgatherv --> VM_GS: Add VMScatterV()",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-06-12 17:07:25",
        "slug": "7f1b",
        "subject": "#80 VM_GS: Add VMScatterV()"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1312539\nOriginator: NO\n\nThis Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 365 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2008-04-25 02:20:12",
        "slug": "0601",
        "subject": "#80 VM_GS: Add VMScatterV()"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2008-04-25 02:20:13",
        "slug": "f118",
        "subject": "#80 VM_GS: Add VMScatterV()"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nthis ticket to stay pending for now\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-04-25 03:01:45",
        "slug": "f5c2",
        "subject": "#80 VM_GS: Add VMScatterV()"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-04-25 03:01:45",
        "slug": "040f",
        "subject": "#80 VM_GS: Add VMScatterV()"
      },
      {
        "text": "Atanas Trayanov wrote:\r\n\r\n&gt; Yes,\r\n&gt;\r\n&gt; This is already in MAPL and GEOS-5 runs with it\\!\r\n&gt;\r\n&gt; -Atanas\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-01-16 21:45:16",
        "slug": "9177",
        "subject": "#80 VM_GS: Add VMScatterV()"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-01-16 21:45:16",
        "slug": "a285",
        "subject": "#80 VM_GS: Add VMScatterV()"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-01-16 21:45:16",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30aa2718463761fbf200",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/682436ca/",
  "ticket_num": 80,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-11-15 19:26:39"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Lei Pan from JPL NASA\r\n\r\nHi,\r\n\r\nThe ESMF reference manual says \"States can contain Bundles,\r\nFields, Arrays, and other States.  They cannot directly\r\ncontain Fortran arrays.\"  From this, I assume that user\r\nderived types \\(structures\\) aren't supported directly either.\r\n\r\nI am working on making JPL's ocean data assimilation code\r\nESMF compliant and making it couple with MOM4.  In our first\r\nstep, we will be only using the ESMF superstructure.  Our\r\nassimilation code will be working on MOM4's data types\r\nsuch as ocean\\_domain\\_type and ocean\\_grid\\_type.  So I am\r\nlooking for a convenient way of adding variables of those\r\nderived types into ESMF import/output states and transfer\r\nthem between MOM4 and assimilation.\r\n\r\nI could manually transfer, e.g., an ocean\\_grid\\_type into\r\nESMF Arrays, but I would like to avoid this if possible,\r\ncause these MOM4 data structures are large \\(for example,\r\nocean\\_grid\\_type has 100+ lines of code and consists of\r\nmany Fortran arrays\\).  Our assimilation uses these\r\ntypes anyway, so even if I did transfer them into\r\nESMF Arrays, I will have to transfer the ESMF Arrays\r\nback to MOM4 type at the other end.\r\n\r\nCould you please show me how to do this?  It will be\r\nbetter if you could provide a simple example.\r\n\r\nThanks and best regards,\r\n\r\n-Lei\r\nJPL\r\n\\(818\\) 393-0477\r\n\r\n\r\n\r\n",
  "labels": [
    "State"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "LONG:USRDEF:adding user defined types to a State? (?)",
  "discussion_thread": {
    "_id": "4b7a4b65",
    "posts": [
      {
        "text": "- **labels**: 588651 --> State\n- **milestone**: 155253 --> \n- **summary**: adding user defined types to a State? --> LONG:adding user defined types to a State?",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-12-01 17:51:52",
        "slug": "5e97",
        "subject": "#81 LONG:USRDEF:adding user defined types to a State? (?)"
      },
      {
        "text": "- **priority**: 5 --> 1\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-12-01 17:52:26",
        "slug": "fd15",
        "subject": "#81 LONG:USRDEF:adding user defined types to a State? (?)"
      },
      {
        "text": "- **summary**: LONG:adding user defined types to a State? --> LONG:USRDEF:adding user defined types to a State?",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2006-12-01 18:01:25",
        "slug": "f117",
        "subject": "#81 LONG:USRDEF:adding user defined types to a State? (?)"
      },
      {
        "text": "- **summary**: LONG:USRDEF:adding user defined types to a State? --> LONG:USRDEF:adding user defined types to a State? (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:21:56",
        "slug": "b4f6",
        "subject": "#81 LONG:USRDEF:adding user defined types to a State? (?)"
      },
      {
        "text": "REJECTED: During ticket meeting 08/06/09 we decided to finally close this ticket. The suggestion goes against the current ESMF fundamentals. Cecelia gave her verbal O.K..\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-08-06 17:55:59",
        "slug": "5539",
        "subject": "#81 LONG:USRDEF:adding user defined types to a State? (?)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-08-06 17:55:59",
        "slug": "af8d",
        "subject": "#81 LONG:USRDEF:adding user defined types to a State? (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-06 17:55:59",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30ad2718463761fbf23a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4b7a4b65/",
  "ticket_num": 81,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2006-11-30 19:24:09"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "I upgraded to GCC 4.2.0, and found the ESMF gfortran build\\_config files on CVS.\r\nBasic \"make\" now works on ESMF 2.2.2r \\(although with many warnings, mostly \"deprecated conversion from string constant to \u2018char\\*\u2019\"\\).  \"make check\" has many\r\nfailures:  Unit tests: 220 pass, 174 fail; System tests: 16 pass, 2 fail.  All of the failures are segfaults.  Probably a pointer-passing problem fixable by some option flag.  I'll try to to track the problems via gdb in January, but if anyone already knows of this problem, I'd be glad of hints.\r\n\r\n\\-- \r\nTom Wainwright\r\nNOAA Northwest Fisheries Science Center\r\n2032 SE OSU Drive, Newport, OR 97365 USA\r\nthomas.wainwright@noaa.gov\r\n+1 541.867.0435\r\n\r\nTom Wainwright wrote:\r\nDo you know if anyone has had success building ESMF with the GCC Fortran compiler \\(gfortran\\)?  The compiler now comes with the GCC suite, so I tried it using \"GNU Fortran 95 \\(GCC\\) 4.1.0\", but get a compiler seg fault in the file esmf/src/Infrastructure/LocalArray/interface/ESMF\\_LocalArrayCreate.F90.\r\n\r\nJust curious if anyone has had success with any other gfortran versions.  If not, I'll try to isolate the problem, or switch back to g95.\r\n\r\nHappy Holidays\\!\r\n\r\n\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "GFORTRAN: Problems with Linux.gfortran.default ",
  "discussion_thread": {
    "_id": "69e8b77b",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nI need to test ESMF 2.2.2r with GCC 4.2.0's gfortran and if it works get back to him about this. He is                           not currently waiting but we should test and get back to him then.\r\n\\*gjt\\*\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-03-30 17:45:40",
        "slug": "fe39",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nHad a chat with Tom today about this ticket.  \r\n\r\n1\\) he has given up on gfortran and is using g95 which is working for him\r\n\r\n2\\) even though he is aware that gfortran is available in the 3 series, he wants to stick with 222r for now\r\n\r\n3\\) gerhard had contemplated trying to back port 222r to gfortran but his time was sent elsewhere\r\n\r\n4\\) tom indicates we can close this out",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-07 19:19:12",
        "slug": "1a67",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-07 19:19:12",
        "slug": "a114",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "- **labels**: 509038 --> 904957\n- **summary**:  gfortran build? --> Port 222r to gfortran\n- **milestone**: 155253 --> \n- **status**: closed --> open",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-09-28 16:20:58",
        "slug": "68ba",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "- **summary**: Port 222r to gfortran --> Back-port 222r to gfortran (available in 3 series)",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-09-28 16:32:45",
        "slug": "5c01",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nsent note about 2.2.2rp2\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-10-25 16:50:34",
        "slug": "537f",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "- **milestone**:  --> 650740\n- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-10-25 16:50:34",
        "slug": "9029",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "- **labels**: 904957 --> 473023\n- **milestone**: 650740 --> \n- **summary**: Back-port 222r to gfortran (available in 3 series) --> Problems with Linux.gfortran.default \n- **status**: pending --> open",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-01-30 20:14:32",
        "slug": "203f",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nThis ticket is active again with Tom's recent feedback.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-01-30 21:06:19",
        "slug": "0b7b",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "- **milestone**:  --> 166455",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-01-30 21:06:19",
        "slug": "7ab8",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "- **assigned_to**: theurich --> w6ws",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-18 21:22:04",
        "slug": "461d",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "- **milestone**: 166455 --> \n- **labels**: 473023 --> Build/Install",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-18 21:23:03",
        "slug": "341a",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "- **summary**: Problems with Linux.gfortran.default  --> GFORTRAN: Problems with Linux.gfortran.default \n- **milestone**:  --> Port to New Platform",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-20 19:04:48",
        "slug": "7490",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nTom has now successfully tried gfortran 4.3 with ESMF 3.1.0r and reports 100% success.  So this ticket can now be closed.\r\n\r\nWalter\r\n\r\n\\---------------------------------\r\n\r\nWalter,\r\n\r\nThanks for the follow up.  Yes, I have tried it and all works fine \"out of the box,\" disregarding the many compiler warnings about deprecated conversions. \r\nTests pass 100% and my model code compiles and runs.  Surprisingly, given past problems, it works with openMPI default install from Fedora Core 9--didn't have to tweak double-underscores or anything.\r\n\r\nHere's my system setup in case you keep track of such things:\r\n\r\n\\--------------------------------------------------------------\r\nFortran Compiler version:\r\nGNU Fortran \\(GCC\\) 4.3.0 20080428 \\(Red Hat 4.3.0-8\\) ...\r\nC++ Compiler version:\r\ng++ \\(GCC\\) 4.3.0 20080428 \\(Red Hat 4.3.0-8\\)\r\n...\r\nESMF\\_VERSION\\_STRING \"3.1.0r\"\r\n...\r\n\\* ESMF environment variables \\*\r\nESMF\\_DIR: /home/twain/Code/esmf\r\nESMF\\_OS:                Linux\r\nESMF\\_MACHINE:           x86\\_64\r\nESMF\\_ABI:               64\r\nESMF\\_COMPILER:          gfortran\r\nESMF\\_BOPT:              g\r\nESMF\\_COMM:              openmpi\r\nESMF\\_SITE:              default\r\nESMF\\_PTHREADS:          ON\r\nESMF\\_ARRAY\\_LITE:        FALSE\r\nESMF\\_NO\\_INTEGER\\_1\\_BYTE: FALSE\r\nESMF\\_NO\\_INTEGER\\_2\\_BYTE: FALSE\r\nESMF\\_FORTRANSYMBOLS:    default\r\nESMF\\_TESTEXHAUSTIVE:    OFF\r\nESMF\\_TESTWITHTHREADS:   OFF\r\nESMF\\_TESTMPMD:          OFF\r\n\\----------------------------------------------------------------------\r\n\r\nHeatding off to keep my son from blowing the house up--enjoy the holiday\\!\r\n\r\n\\--Tom\r\n\r\nOn 07/03/2008 02:36 PM, Walter Spector wrote:\r\n&gt; Hi Tom,\r\n&gt; \r\n&gt; I would like to follow up on Gerhards last gfortran comments, and see where we were with this ticket.\r\n&gt; \r\n&gt; In ESMF v3.1.0r, we are now formally testing the linux/gfortran combination.  With gfortran 4.3, all unit tests, system tests, and examples work with 100% pass rate.  This is on x86\\_64, with both small and medium memory models.  I also tested it with ia32, and it passed 100%.\r\n&gt; \r\n&gt; It seems important to use gfortran 4.3 \\(or newer\\), as there are a few tests that fail with 4.2 and later 4.1 versions.  And as you originally noted, with gfortran 4.1.0 the compiler actually SEGVs.\r\n&gt; \r\n&gt; Have you had a chance to try v3.1.0r with gfortran 4.3 yet?\r\n&gt; \r\n&gt; Thanks, and have a happy 4th,\r\n&gt; \r\n&gt; Walter Spector\r\n&gt; ESMF Core developer\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-04 00:50:10",
        "slug": "8c5b",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-04 00:50:10",
        "slug": "0537",
        "subject": "#82 GFORTRAN: Problems with Linux.gfortran.default "
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-04 00:50:10",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30af2718463761fbf260",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/69e8b77b/",
  "ticket_num": 82,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2006-12-26 17:18:51"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Ufuk Utku Turuncoglu from ITU, Informatics Institute\r\nHPC Lab\r\n\r\nHi,\r\n\r\nI try to compile ESMF 2\\_2\\_2r in 64 bit emulated architecture \\(EM64T\\) but\r\nit gives me following error,\r\n\r\nerror: identifier \"ESMF\\_F90\\_PTR\\_BASE\\_SIZE\" is undefined\r\nerror: identifier \"ESMF\\_F90\\_PTR\\_BASE\\_SIZE\" is undefined\r\nerror: identifier \"ESMF\\_F90\\_PTR\\_PLUS\\_RANK\" is undefined\r\n...\r\n\r\nI am using Xeon EM64T cluster, Intel Compiler 9.0 \\(non-commercial version\\) and mpich 1.2.7p1. I find the information in user list \\(ESMF Support request 1209450\\) but i don't know how can i set the environment variable.  When i set using export command, \"Deprecated environment\r\nvariable ESMF\\_PREC detected. Please see README.\" appears and building process stop.\r\n\r\nBest wishes,\r\n\r\nUfuk Utku Turuncoglu\r\nITU, Informatics Institute\r\nHPC Lab\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Port ESMF_2_2_2r to EM64T",
  "discussion_thread": {
    "_id": "03e44623",
    "posts": [
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 155253 --> \n- **summary**: compile problem in esmf ESMF_2_2_2r --> Port ESMF_2_2_2r to EM64T",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-01-12 16:56:13",
        "slug": "0c2f",
        "subject": "#83 Port ESMF_2_2_2r to EM64T"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nI modified two files in Linux.intel.default which make ESMF build on EM64T with the Intel compilers. Ufuk wrote that ESMF 2.2.r now builds on his machine without problem. I committed the modifications onto the 2\\_2\\_2branch and the trunk so they will go out with the upcoming releases. Ufuk still has some follow-on issues which we will track under a new tracker and Samson will take over since he is Ufuk's advocate. At this point we consider the EM64T port for the Intel compilers finished.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-01-17 19:38:16",
        "slug": "ce81",
        "subject": "#83 Port ESMF_2_2_2r to EM64T"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform\n- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-01-17 19:38:16",
        "slug": "2618",
        "subject": "#83 Port ESMF_2_2_2r to EM64T"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-01-17 19:38:16",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30b12718463761fbf2b3",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/03e44623/",
  "ticket_num": 83,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2007-01-09 21:13:32"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Erik Kluzek from NCAR CCSM\r\n\r\nHey ESMF people\\!\r\n\r\nAs we told Cecelia, Don and Ed in our joint meeting yesterday, we'd like to formally request the ability to add ESMF time-objects to ESMF\\_States. The most important one are time-instants, so you can time-stamp a ESMF\\_State, but I can also see adding time-intervals as well. I don't see any reason to add a full-clock, or calendars \\(and calendars are already part of a time-instant\\). Until that time we'll probably add integer attributes for yyyymmdd and time-of-day in seconds to time-stamp our states. We'll also pass time-intervals in seconds on states as well. The general problem with doing that is that we then have a specific mechanism unique to CCSM for time-stamping states, and we won't be interoperable. So the capability to time-stamp ESMF\\_States, with ESMF time-objects, just seems rather important for interoperability to me. I envision that we'd want to put specific time-instants and/or time-intervals on a ESMF\\_State, and I also envision wanting to time-stamp it with the current time in my clock. The later would be the most general and interoperable way, since I wouldn't have to assume names for these time-instants. Possibly the best thing would be to have a general time-stamp function like this...\r\n\r\nESMF\\_StateAddTimeStamp\\( estate, clock \\)\r\n\r\nthat would add the following to the state: current, start, stop, ref times, and clock time-interval. Then I could query any of these values in a standard way with something like...\r\n\r\nESMF\\_StateGetTimeStamp\\( estate, currtime=curr\\_time, starttime=start\\_time, stoptime=stop\\_time, timestep=time\\_step \\)\r\nAnd it would also be useful to be able to tell if the current clock I'm using has reached the time-stamp on a state, with something like...\r\n\r\nESMF\\_StateReachedTimeStamp\\( estate, clock \\)\r\n\r\nwhich would be a logical to check the time-stamp and if the given clock has a time less than the time-stamp of the given state -- it returns false, and if it's equal or beyond it returns true.\r\n\r\nBut, we also might need to put specific time-instants on with something like...\r\n\r\nESMF\\_StateAddTimeInstant\\( estate, time=perp\\_time, desc=\"Perpetual\\_time\" \\)\r\n\r\nSo having some standard naming conventions for time objects might be helpful as well.\r\n\r\nThis is NOT something we need right away for the Stage-1 evaluation, but we would like to have it for the Stage-2 evaluation. Stage-2 is not likely to start until next Fall, and we could limp by with the integer attributes that I mentioned above for the beginning.\r\n\r\nI'll also send this out to esmf\\_jst to get some feedback from the general ESMF audience and see if others might like these type of features as well.\r\n\r\n\r\nThanks\r\n\r\nErik Kluzek, \\(CGD at NCAR\\)\r\nNational Center for Atmospheric Research\r\nBoulder CO, \\(off\\) \\(303\\)497-1326 \\(fax\\) \\(303\\)497-1314",
  "labels": [
    "State"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:COMP_CLK:ESMF time-objects to States (5)",
  "discussion_thread": {
    "_id": "7352fd97",
    "posts": [
      {
        "text": "- **labels**: 588651 --> State\n- **summary**: ability to add ESMF time-objects to ESMF_States --> LONG:ability to add ESMF time-objects to ESMF_States\n- **milestone**: 367128 --> ",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-02-16 17:05:11",
        "slug": "0828",
        "subject": "#84 LONG:COMP_CLK:ESMF time-objects to States (5)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-02-16 17:25:03",
        "slug": "51d3",
        "subject": "#84 LONG:COMP_CLK:ESMF time-objects to States (5)"
      },
      {
        "text": "- **summary**: LONG:ability to add ESMF time-objects to ESMF_States --> LONG:COMP_CLK:add ESMF time-objects to ESMF_States",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-16 17:52:35",
        "slug": "8b64",
        "subject": "#84 LONG:COMP_CLK:ESMF time-objects to States (5)"
      },
      {
        "text": "- **summary**: LONG:COMP_CLK:add ESMF time-objects to ESMF_States --> LONG:COMP_CLK:ESMF time-objects to States (1/4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-16 17:53:53",
        "slug": "478d",
        "subject": "#84 LONG:COMP_CLK:ESMF time-objects to States (5)"
      },
      {
        "text": "- **assigned_to**: theurich --> feiliu\n- **summary**: LONG:COMP_CLK:ESMF time-objects to States (1/4) --> LONG:COMP_CLK:ESMF time-objects to States (5)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:21:06",
        "slug": "11c5",
        "subject": "#84 LONG:COMP_CLK:ESMF time-objects to States (5)"
      },
      {
        "text": "Gerhard mentioned an outcome of a discussion is to allow Clock as attribute to higher level data structures.",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2009-08-06 17:54:41",
        "slug": "eb14",
        "subject": "#84 LONG:COMP_CLK:ESMF time-objects to States (5)"
      },
      {
        "text": "Using time-based attributes may be a way to handle this; if so, this would be related to ticket \\#2990604 \"Add ESMF\\_Time & ESMF\\_TimeInterval Attribute types\".",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 17:51:28",
        "slug": "605c",
        "subject": "#84 LONG:COMP_CLK:ESMF time-objects to States (5)"
      },
      {
        "text": "- **assigned_to**: feiliu --> theurich\n- **priority**: 5 --> 9",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 17:51:28",
        "slug": "b74d",
        "subject": "#84 LONG:COMP_CLK:ESMF time-objects to States (5)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 17:28:59",
        "slug": "2244",
        "subject": "#84 LONG:COMP_CLK:ESMF time-objects to States (5)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:28:59",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30b22718463761fbf2c9",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7352fd97/",
  "ticket_num": 84,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-01-12 23:23:00"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Erik Kluzek from CGD at NCAR, CCSM\r\n\r\nWith my meeting with Sylvia last Friday we found two issues that hadn't been sent in, this is the first.\r\n\r\nI put this into the\r\n\r\nImportant issues for Stage-2 \\(Summer 2007\\) with ESMF\\_3\\_x\r\n\r\nCategory.\r\n\r\nI need to be able to query a grid and figure out what the global decomposition is. This coupled with the ability to get global grid coordinates enables the ability to figure out if two grids are the same -- and have the same decomposition -- so I can copy data. Or that the grid is the same -- but decomposition different -- so I need to use a redist. Or that the grids are different -- so I need to do a regrid.\r\n\r\nIt also allows me to create a new grid with an appropriately modified decomposition.\r\n\r\nErik Kluzek, \\(CGD at NCAR\\)\r\nNational Center for Atmospheric Research\r\nBoulder CO, \\(off\\) \\(303\\)497-1326 \\(fax\\) \\(303\\)497-1314\r\n\\------------------ Home page ------------------------",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:GI_FLD:Ability to get descript. of decomp. on grid (3)",
  "discussion_thread": {
    "_id": "1e63e1bf",
    "posts": [
      {
        "text": "- **milestone**: 155253 --> \n- **summary**: Ability to get description of decomposition on a grid --> LONG:GI_FLD:Ability to get descript. of decomp. on grid\n- **labels**: 588649 --> 904965",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-02-16 16:52:50",
        "slug": "f48a",
        "subject": "#85 LONG:GI_FLD:Ability to get descript. of decomp. on grid (3)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-02-16 17:24:32",
        "slug": "dc0e",
        "subject": "#85 LONG:GI_FLD:Ability to get descript. of decomp. on grid (3)"
      },
      {
        "text": "- **labels**: 904965 --> Grid - New\n- **assigned_to**: theurich --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:17:12",
        "slug": "e473",
        "subject": "#85 LONG:GI_FLD:Ability to get descript. of decomp. on grid (3)"
      },
      {
        "text": "- **summary**: LONG:GI_FLD:Ability to get descript. of decomp. on grid --> LONG:GI_FLD:Ability to get descript. of decomp. on grid (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:17:33",
        "slug": "a2e7",
        "subject": "#85 LONG:GI_FLD:Ability to get descript. of decomp. on grid (3)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 17:41:29",
        "slug": "554b",
        "subject": "#85 LONG:GI_FLD:Ability to get descript. of decomp. on grid (3)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:26:33",
        "slug": "edb1",
        "subject": "#85 LONG:GI_FLD:Ability to get descript. of decomp. on grid (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:26:33",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30b42718463761fbf2ff",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/1e63e1bf/",
  "ticket_num": 85,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-01-29 22:07:20"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "WHO: Bobby Hunter\r\nERDC, Working on ADCIRC and WASH123\r\n\r\n\r\nDon,\r\n\r\nHi. I am working with Ruth Cheng to couple ADCIRC and pWASH123 using ESMF\r\n3.0. Currently, I have been looking for a method to register an unstructured\r\ngrid that has already been partitioned, but have not seen any methods\r\navailable for this.\r\n\r\nIs there currently anyway to do this or will there be support in the near\r\nfuture?\r\n\r\nThanks,\r\n\r\n\r\n\r\nBobby Hunter\r\nERDC MSRC\r\n3909 Halls Ferry RD\r\nVicksburg MS 39180\r\n\\(601\\) 634-3766\r\n",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:uGRD:Method for Registration of unstructured grids(8)",
  "discussion_thread": {
    "_id": "019777c3",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=1453265\nOriginator: NO\n\nProvided a work around using local arrays to produce global arrays with the existing distribution.",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2007-02-07 16:41:52",
        "slug": "11d7",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2007-02-07 16:41:52",
        "slug": "e0ee",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **status**: closed --> open",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2007-02-16 17:11:42",
        "slug": "9c57",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1453265\nOriginator: NO\n\nProvided a work around for the unstructured grid case until array class development provides necessary support.\r\n\r\nSee feature request :\\[ 1589180 \\] LONG: uGRD:Support for unstructured grids \\(8/24\\)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2007-02-16 17:17:33",
        "slug": "6cb3",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **summary**: Method for the Registration of unstructured grids --> uGRD:Method for the Registration of unstructured grids\n- **milestone**: 155253 --> \n- **labels**: 588649 --> 904965",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2007-02-16 17:17:33",
        "slug": "ddd3",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2007-02-16 17:23:36",
        "slug": "e855",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **summary**: uGRD:Method for the Registration of unstructured grids --> LONG:uGRD:Method for Registration of unstructured grids(8)",
        "attachments": [],
        "author": "donstark",
        "timestamp": "2007-04-12 21:00:41",
        "slug": "c6a5",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **assigned_to**: donstark --> dneckels",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:16:04",
        "slug": "8f1a",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "Moving this to pending since Bobby was informed about the new Mesh class in v3.1.1.  He did not originally ask about a regrid interface for Meshes built on Fields, but is likely to be interested in it when it comes out.  - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-16 00:32:26",
        "slug": "23e6",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **labels**: 904965 --> Grid - New\n- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-16 00:32:27",
        "slug": "8503",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **assigned_to**: dneckels --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-01-16 18:14:56",
        "slug": "64ff",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 730 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2010-09-22 02:20:59",
        "slug": "891b",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2010-09-22 02:20:59",
        "slug": "29b8",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "sf-robot trying to be too smart -&gt; re-open\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-01-21 19:09:23",
        "slug": "fce2",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **status**: closed --> open",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-01-21 19:09:23",
        "slug": "c1fa",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:24:10",
        "slug": "0690",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **priority**: 7 --> 5\n- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-15 20:29:19",
        "slug": "0f04",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "Bob,\r\n\r\nHi. \r\n\r\nYes you can close this ticket.\r\n\r\nUnfortunately, I have not had a chance to implement the changes you sent me a month or so ago regarding the unstructured mesh support. It is still on my radar. Will let you know when I get a chance to test.\r\n\r\nBobby",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-17 16:33:45",
        "slug": "476d",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-17 16:33:45",
        "slug": "8d79",
        "subject": "#86 LONG:uGRD:Method for Registration of unstructured grids(8)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-17 16:33:45",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30b52718463761fbf325",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/019777c3/",
  "ticket_num": 86,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-01-31 18:17:45"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Gary Block from JPL NASA\r\n\r\nHi-\r\n\r\nI am working with the new DistGrid and Array classes and am having a problem determining the global coordinates associated with a local array.  In general, I like the new classes.\r\n\r\nSince I am cycling through the local DEs on each PET, I was hoping to find a form of the ESMF\\_ArrayGet that would return an array indexed by \\(dim, localDe\\) that I could get the global offsets for the local array origin.  This would be similar to the way I get the local array bounds for the various local regions.\r\n\r\nI can't find a mapping from the \\(PetNo, local DE\\) to the global DE number so I could get an index list for each dimension.  I am using the method that you have outlined on bottom of page 256 in the ESMF Reference Manual, Version 3.0.\r\n\r\nBesides, this seems very tedious.  That is, first using the localDE to get the globalDE; Using the ESMF\\_Array to get the ESMF\\_DistGrid to get the dimension extents; allocating and fetching an index list for each dimension, just to get the global coordinates.  Did I miss something?\r\n\r\nIs there some reasonable way I can get the global coordinates from an ESMF\\_Array instance?\r\n\r\nIf not, can you add a globOffset parameter to ESMF\\_ArrayGet that would return an array of offsets indexed by \\(dim, localDE\\) similar to exclusiveLBound, exclusiveUBound, etc?\r\n\r\nFeel free to contact me via e-mail at gblock@jpl.nasa.gov if you have any questions or comments.\r\n\r\nThanks,\r\nGary\r\n\r\n",
  "labels": [
    "Array - Old"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:Need method for getting global coordinates from Array",
  "discussion_thread": {
    "_id": "ab64a6d0",
    "posts": [
      {
        "text": "- **assigned_to**: oehmke --> peggyli",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-02-08 18:01:07",
        "slug": "8458",
        "subject": "#87 LONG:Need method for getting global coordinates from Array"
      },
      {
        "text": "- **milestone**: 155253 --> \n- **labels**: 588641 --> Array - Old\n- **summary**: Need method for getting global coordinates from ESMF_Array --> LONG:Need method for getting global coordinates from Array",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-02-16 16:46:18",
        "slug": "54b1",
        "subject": "#87 LONG:Need method for getting global coordinates from Array"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nAdded additional ESMF\\_ArrayGet\\(\\) interface to provide convenient access to indexList for each localDE/dim. The functionality is also showcased in a newly added test in ESMF\\_ArrayScatterUTest.F90. Notified Gary that this has become available with ESMF\\_3\\_0\\_2\\_beta\\_snapshot\\_06. It is also scheduled for release with ESMF 3.0.2.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-04-11 22:59:40",
        "slug": "8119",
        "subject": "#87 LONG:Need method for getting global coordinates from Array"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **assigned_to**: peggyli --> theurich\n- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-04-11 22:59:40",
        "slug": "5a91",
        "subject": "#87 LONG:Need method for getting global coordinates from Array"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nSent 2nd reminder about the added feature: 04/24/07\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-04-24 22:15:56",
        "slug": "63a4",
        "subject": "#87 LONG:Need method for getting global coordinates from Array"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nHi Gerhard-\r\n\r\nI'm pretty sure that using the indexflag parameter will solve my problem with \"Arrays\".  I hope to test this out before the meeting in Boulder, but I have a review in a couple of weeks on my other project.  I hope to get some updated test cases that cover this and other areas better.\r\n\r\nI agree that we don't need anymore tickets for things that are already covered.  But I think that we need to have a couple of sentences added to the documentation.  I think that a few words there would have saved me a some of time.\r\n\r\nWhile I'm in Boulder, I may want some short \\(~15 minute\\) conversations with you to get your perspective on arrays, couplers and their relationship to the universe.  I'm planning on attending the meetings and Friday tutorial, so your perspective on these things may be covered there.\r\n\r\nGary\r\n\r\nAt 08:50 AM 5/10/2007, you wrote:\r\n\r\n&gt; Sylvia and Gary,\r\n&gt;\r\n&gt; Ticket \\#1655394 \"Need method for getting global coordinates from Array\" is still pending with Gary. I was waiting to get confirmation from Gary that all issues have been resolved with this and that he has tested the newly added functionalities. It was within this ticket \\(\\#1655394\\) that I mentioned the indexflag=ESMF\\_INDEX\\_GLOBAL to Gary.\r\n&gt;\r\n&gt; To me it seems that we should keep \\#1655394 open and discuss indexflag documentation issues within this ticket instead of opening a new related ticket. Does this sound right to you Sylvia and Gary?\r\n&gt;\r\n&gt; BTW, Gary, did the added functionality to ArrayGet\\(\\) work for you and provide a more convenient way to get to the information you need?\r\n&gt;\r\n&gt; Thank you,\r\n&gt; -Gerhard\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-05-11 15:42:49",
        "slug": "5e66",
        "subject": "#87 LONG:Need method for getting global coordinates from Array"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-05-11 15:42:49",
        "slug": "fcd9",
        "subject": "#87 LONG:Need method for getting global coordinates from Array"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nGary Block wrote:\r\n&gt; Hi-\r\n&gt; \r\n&gt; Great description.  I haven't tried it yet, but I have confidence that \r\n&gt; it will work.  I think we can close out the ticket & if it doesn't work \r\n&gt; as advertised I'll contact you.\r\n&gt; \r\n&gt; Gary\r\n&gt; \r\n&gt; At 12:21 PM 5/11/2007, you wrote:\r\n&gt; \r\n&gt;&gt; Hi Gary,\r\n&gt;&gt;\r\n&gt;&gt; We just added more documentation to the indexflag argument to \r\n&gt;&gt; ESMF\\_ArrayCreate\\(\\). It is now available on the ESMF web site. Please \r\n&gt;&gt; look at the docs for the HEAD on \r\n&gt;&gt; http://www.esmf.ucar.edu/download/releases.shtml and let us know if \r\n&gt;&gt; this is clearer now.\r\n&gt;&gt;\r\n&gt;&gt; Thank you,\r\n&gt;&gt; -Gerhard\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-05-23 19:07:40",
        "slug": "31cf",
        "subject": "#87 LONG:Need method for getting global coordinates from Array"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-05-23 19:07:40",
        "slug": "f686",
        "subject": "#87 LONG:Need method for getting global coordinates from Array"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-05-23 19:07:40",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30ba2718463761fbf38e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/ab64a6d0/",
  "ticket_num": 87,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-02-08 17:27:48"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "requirements:\r\n\r\n1\\) free or cheap\r\n\r\n2\\) easy to add events and invite guests\r\n\r\n3\\) remotely hosted. we don't want to download and install software on the server for maintenance and security reasons\r\n\r\n4\\) shrinkable down to thumbnail size\r\n\r\n5\\) can hover over thumbnail to view events in pop up window.\r\n\r\n\r\n",
  "labels": [
    "Website"
  ],
  "assigned_to": "murphysj",
  "assigned_to_id": "4d794255b9363c57d70002fc",
  "private": false,
  "summary": "Calendar for website",
  "discussion_thread": {
    "_id": "bc4aa7fc",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: YES\n\nhttp://www.easyphpcalendar.com/index.php\r\n\r\nCecelia like this calendar b/c of the thumbnail.\r\n\r\nIt fails however b/c it is a downloadable PHP program which would not meet our security standards.\r\n",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-02-12 16:00:10",
        "slug": "fd71",
        "subject": "#88 Calendar for website"
      },
      {
        "text": "- **summary**: calendar for website --> Calendar for website",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-02-12 16:00:10",
        "slug": "9198",
        "subject": "#88 Calendar for website"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: YES\n\nOption Google calender:\r\n\r\nhas all requirements except last two. can not shrink down enough and no hover capability.\r\n\r\n",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-02-12 16:01:16",
        "slug": "c08c",
        "subject": "#88 Calendar for website"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: YES\n\nSurfed on 2/8/07 for hover capability since google calender does not have it.  Did not find that specifically. there are several for fee remotely hosted calenders:\r\n\r\nTheir fees vary from $9/month to $100/year.  Looking at their demos, none of them are better than google calender. One said you could embed their calender into the website b/c they don't show or discuss it. \r\n\r\nI will keep looking.",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-02-12 16:04:22",
        "slug": "bea4",
        "subject": "#88 Calendar for website"
      },
      {
        "text": "- **labels**:  --> 960355",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-03-23 14:55:37",
        "slug": "6f42",
        "subject": "#88 Calendar for website"
      },
      {
        "text": "- **milestone**:  --> 705828",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-03-30 19:56:32",
        "slug": "2386",
        "subject": "#88 Calendar for website"
      },
      {
        "text": "- **labels**: 960355 --> Website\n- **milestone**: 705828 --> ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-07-21 16:58:47",
        "slug": "e51d",
        "subject": "#88 Calendar for website"
      },
      {
        "text": "- **milestone**:  --> Add Other Capability",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-07-21 16:59:49",
        "slug": "f3a2",
        "subject": "#88 Calendar for website"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-07-21 16:59:49",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30bc2718463761fbf3c2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/bc4aa7fc/",
  "ticket_num": 88,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2007-02-12 15:58:35"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "Although this is going to be contributed, we are expeting that some time will be required on the core team side for review and integration.",
  "labels": [
    "Grid - Old"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:LOC_STREAM: Location stream implementation (4)",
  "discussion_thread": {
    "_id": "3f2a782e",
    "posts": [
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-05 16:01:36",
        "slug": "2d30",
        "subject": "#89 LONG:LOC_STREAM: Location stream implementation (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-05 16:01:36",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30bd2718463761fbf3f1",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3f2a782e/",
  "ticket_num": 89,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-02-12 20:49:47"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "Proposal for Associating User Defined Methods \\(Function Pointers\\)\r\nwith ESMF States, Bundles and Fields\r\n\r\nArlindo da Silva, NASA/GSFC\r\n15 February 2007\r\n\r\n\r\nINTRO\r\n\\-----\r\n\r\nCurrentlt ESMF data types are used to exchange data between\r\ncomponents. One requirement is that all exports can be computed\r\nahead of time, during the provider component run method \\(or\r\nby a coupler\\). Often times, memory constraints or otherwise\r\nthe nature of the algorithm, requires that the final calculation\r\nbe performed right before the data is consumed. Therefore, if\r\na field could carry a method with it \\(that is, be a real class\\)\r\nand we could simply execute\r\n\r\nstate.DoThatCalculation\\(\\)\r\n\r\nwe would have the means of handling tightly coupled physical\r\nprocesses without the awkward tricks we have been forced to do.\r\n\r\n\r\nUSE CASE\r\n\\--------\r\n\r\n1\\) Deferred calculation\r\n\\-----------------------\r\n\r\n1a\\) The \"provider component\" prepares a state with associated method\r\n'speed'. This \"speedState\" has 3 fields: the \"u\" and \"v\" fields\r\ngets filled by the \"provider\" component; the \"speed\" field is to\r\nbe filled later when the 'CalcSpeed' method is invoked on speedState.\r\n\r\ntype\\(ESMF\\_Field\\) :: u, v, speed\r\ntype\\(ESMF\\_State\\) :: exportState \r\ntype\\(ESMF\\_State\\) :: speedState\r\n\r\n\\! Create state\r\n\\! ------------\r\nspeedState = ESMF\\_StateCreate \\( name='speed', state=speeState \\)\r\n\r\n\\! Populate it with fields\r\n\\! -----------------------\r\n... create u, v, speed fields\r\n... attach u, v, speed to speedState\r\n\r\n\\! Register a \"speed\" method\r\n\\! -------------------------\r\ncall ESMF\\_SetEntryPoint \\( speedState, name='CalcSpeed', CalcSpeed\\_, rc \\)\r\n\r\n... attach speedState to the component's export state\r\n\r\nNote: the speed state could also provide fields to be filled by\r\nthe consumer component\r\n\r\n1b\\) The \"provider component\" implements\r\n\r\nsubroutine CalcSpeed\\_ \\( state, clock, rc \\)\r\ntype\\(ESMF\\_State\\), intent\\(inout\\)           :: state\r\ntype\\(ESMF\\_Clock\\), intent\\(in\\),    OPTIONAL :: clock\r\ninteger,          intent\\(out\\),   OPTIONAL :: clock\r\n... computes  speed = sqrt\\(u\\*\\*2 + v\\*\\*2 \\)\r\nend subroutine CalcSpeed\\_ \r\n\r\n1c\\) The \"consumer component\" gets \"speedState\" thru its import state\r\nand executes the 'CalcSpeed' method:\r\n\r\ntype\\(ESMF\\_Field\\) :: speed\r\ntype\\(ESMF\\_State\\) :: importState \r\ntype\\(ESMF\\_State\\) :: speedState\r\n\r\n\\! Retrieve 'speedState' from import state\r\n\\! ----------------------------------------\r\n...\r\n\r\n\\! Execute the CalcSpeed method: \"speedState.CalcSpeed\\(\\)\"\r\n\\! ------------------------------------------------------\r\ncall ESMF\\_Exec \\( speedState, name='CalcSpeed', clock=clock, rc=rc \\)\r\n\r\n\\! Retrieve field 'speed' from 'speedState' and do what it pleases\r\n\\!  with it\r\n\\! ---------------------------------------------------------------\r\n...\r\n\r\n\r\nSKETCH OF AN API\r\n\\----------------\r\n\r\nsubroutine ESMF\\_SetEntryPoint \\( State, name, function, \\[rc\\] \\)\r\nsubroutine ESMF\\_Exec          \\( State, name, \\[clock\\],  \\[rc\\] \\)\r\n\r\nsubroutine ESMF\\_SetEntryPoint \\( Bundle, name, function, \\[rc\\] \\)\r\nsubroutine ESMF\\_Exec          \\( Bundle, name, \\[clock\\],  \\[rc\\] \\)\r\n\r\nsubroutine ESMF\\_SetEntryPoint \\( Field, name, function, \\[rc\\] \\)\r\nsubroutine ESMF\\_Exec          \\( Field, name, \\[clock\\],  \\[rc\\] \\)\r\n\r\nsubroutine ESMF\\_SetEntryPoint \\( Field, name, function, \\[rc\\] \\)\r\nsubroutine ESMF\\_Exec          \\( Field, name, \\[clock\\],  \\[rc\\] \\)\r\n\r\nNotes:\r\n\r\n1\\) At the very least one could implement this for states, but\r\nextending for the other types may be trivial\r\n\r\n2\\) I am not sure if we should include \\[clock\\] or not",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:USRDEF:Associate user-defined methods w/objs (?)",
  "discussion_thread": {
    "_id": "eb21f561",
    "posts": [
      {
        "text": "- **summary**: LONG: Associate user-defined methods w/objs (6) --> LONG:USR_DEF:Associate user-defined methods w/objs (6)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-16 18:08:59",
        "slug": "6d4f",
        "subject": "#90 LONG:USRDEF:Associate user-defined methods w/objs (?)"
      },
      {
        "text": "- **summary**: LONG:USR_DEF:Associate user-defined methods w/objs (6) --> LONG:USRDEF:Associate user-defined methods w/objs (6)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-02-16 18:09:31",
        "slug": "dc95",
        "subject": "#90 LONG:USRDEF:Associate user-defined methods w/objs (?)"
      },
      {
        "text": "- **priority**: 3 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:41:35",
        "slug": "a024",
        "subject": "#90 LONG:USRDEF:Associate user-defined methods w/objs (?)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:42:25",
        "slug": "7c14",
        "subject": "#90 LONG:USRDEF:Associate user-defined methods w/objs (?)"
      },
      {
        "text": "- **summary**: LONG:USRDEF:Associate user-defined methods w/objs (6) --> LONG:USRDEF:Associate user-defined methods w/objs (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-19 00:53:06",
        "slug": "8a6e",
        "subject": "#90 LONG:USRDEF:Associate user-defined methods w/objs (?)"
      },
      {
        "text": "ESMF\\_4\\_0\\_0\\_beta\\_snapshot\\_17 contains a prototype of attachable methods that works with States.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-04-21 08:02:21",
        "slug": "9dc9",
        "subject": "#90 LONG:USRDEF:Associate user-defined methods w/objs (?)"
      },
      {
        "text": "- **priority**: 1 --> 9\n- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-04-21 08:02:21",
        "slug": "b563",
        "subject": "#90 LONG:USRDEF:Associate user-defined methods w/objs (?)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-08-06 17:47:21",
        "slug": "65b1",
        "subject": "#90 LONG:USRDEF:Associate user-defined methods w/objs (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-06 17:47:21",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30be2718463761fbf3fe",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/eb21f561/",
  "ticket_num": 90,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-02-16 00:26:32"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Weiyu Yang from GFS\r\n\r\nDear Gerhard,\r\n\r\nI compiled and installed successfully the new released ESMF 3.0.1 library on the NCEP IBM computer \"mist\" and \"dew\".  However when I tried to run the new library with the NCEP GFS Ensemble model, it failed as the error message in the ESMF error log file:\r\n\r\n20070306 161013.809445 ERROR    PET0 ESMF\\_GridComp.F90 656 ESMF\\_GridCompInitialize Bad Object\r\n20070306 161013.809457 ERROR    PET0 Run the GFS Initialize\r\n20070306 161013.809474 INFO     PET0 Calling the GFS COUPLER Initialize\r\n20070306 161013.809762 ERROR    PET0 ESMF\\_CplComp.F90 638 ESMF\\_CplCompInitialize Bad Object\r\n20070306 161013.809772 ERROR    PET0 Run the GFS Coupler Initialize\r\n20070306 161013.809788 INFO     PET0 Calling the GFS Run\r\n20070306 161013.810065 ERROR    PET0 ESMF\\_GridComp.F90 839 ESMF\\_GridCompRun Bad Object\r\n20070306 161013.810076 ERROR    PET0 Run the GFS RUN\r\n20070306 161013.810092 INFO     PET0 Calling the GFS Coupler Run\r\n20070306 161013.810269 ERROR    PET0 ESMF\\_CplComp.F90 823 ESMF\\_CplCompRun Bad Object\r\n20070306 161013.810280 ERROR    PET0 Run the GFS COupler RUN\r\n...\r\n...\r\n\r\nI also test the following ESMF test routine and the demo routine as to use:\r\na\\) 'gmake unit\\_tests' to build and run the unit tests\r\nb\\) 'gmake system\\_tests' to build and run the system tests\r\nc\\) 'gmake check' to build and run the unit and system tests.\r\nd\\) 'gmake examples' to build and run the examples\r\ne\\) 'gmake demos' to build and run the demos\r\nThey ALL failed on the NCEP IBM machine.\r\n\r\nCould you help to fix this problem? \r\nThe 'gmake info' output the followings as:\r\n\r\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\r\nd2n7@/gpfs/d/global/save/wx20wy/esmf\\_3\\_0\\_1\\_src/esmf 26 &gt;&gt; gmake info\r\n\\--------------------------------------------------------------\r\nMake version:\r\nGNU Make 3.80\r\nCopyright \\(C\\) 2002  Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.\r\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A\r\nPARTICULAR PURPOSE.\r\n\r\n\\--------------------------------------------------------------\r\nFortran Compiler version:\r\nxlf.Bnd                   10.1.0.0  COMMITTED  XL Fortran Compiler Media\r\nxlf.lic                   10.1.0.0  COMMITTED  XL Fortran Compiler Licence\r\nxlf.licAgreement          10.1.0.0  COMMITTED  XL Fortran Electronic License\r\nxlf.man.en\\_US             10.1.0.2  COMMITTED  XL Fortran Compiler Man\r\nxlf.ndi                   10.1.0.2  COMMITTED  XLF for AIX Non-Default\r\nxlfcmp                    10.1.0.2  COMMITTED  XL Fortran Compiler\r\nxlfcmp.aix51              10.1.0.2  COMMITTED  XL Fortran Compiler AIX 5.1\r\nxlfcmp.html.common        10.1.0.2  COMMITTED  XL Fortran Compiler\r\nxlfcmp.html.en\\_US         10.1.0.2  COMMITTED  XL Fortran Compiler\r\nxlfcmp.msg.en\\_US          10.1.0.2  COMMITTED  XL Fortran Compiler Messages -\r\nxlfcmp.pdf.en\\_US          10.1.0.2  COMMITTED  XL Fortran Compiler\r\nxlfrte                    10.1.0.2  COMMITTED  XL Fortran Runtime Environment\r\nxlfrte.aix51              10.1.0.2  COMMITTED  XL Fortran Runtime Environment\r\nxlfrte.msg.en\\_US          10.1.0.2  COMMITTED  XL Fortran Runtime Messages -\r\nxlfcmp                    10.1.0.2  COMMITTED  XL Fortran Compiler\r\n\r\n\\--------------------------------------------------------------\r\nC++ Compiler version:\r\nxlC.adt.include            8.0.0.5  COMMITTED  C Set ++ Application\r\nxlC.aix50.rte              8.0.0.5  COMMITTED  C Set ++ Runtime for AIX 5.0\r\nxlC.cpp                    6.0.0.0  COMMITTED  C for AIX Preprocessor\r\nxlC.msg.en\\_US.cpp          6.0.0.0  COMMITTED  C for AIX Preprocessor\r\nxlC.msg.en\\_US.rte          8.0.0.5  COMMITTED  C Set ++ Runtime\r\nxlC.rte                    8.0.0.5  COMMITTED  C Set ++ Runtime\r\n\r\n\\--------------------------------------------------------------\r\nESMF\\_VERSION\\_STRING \"3.0.1\"\r\n\\--------------------------------------------------------------\r\n\\--------------------------------------------------------------\r\n\\* ESMF environment variables \\*\r\nESMF\\_DIR: /gpfs/d/global/save/wx20wy/esmf\\_3\\_0\\_1\\_src/esmf\r\nESMF\\_OS:                AIX\r\nESMF\\_MACHINE:           default\r\nESMF\\_ABI:               64\r\nESMF\\_COMPILER:          default\r\nESMF\\_BOPT:              O\r\nESMF\\_COMM:              mpi\r\nESMF\\_SITE:              default\r\nESMF\\_EXHAUSTIVE:        OFF\r\nESMF\\_PTHREADS:          ON\r\nESMF\\_TESTWITHTHREADS:   OFF\r\nESMF\\_ARRAY\\_LITE:        FALSE\r\nESMF\\_NO\\_INTEGER\\_1\\_BYTE: FALSE\r\nESMF\\_NO\\_INTEGER\\_2\\_BYTE: FALSE\r\nESMF\\_FORTRANSYMBOLS:    default\r\n\\--------------------------------------------------------------\r\n\\* ESMF environment variables pointing to 3rd party software \\*\r\n\\--------------------------------------------------------------\r\n\\* ESMF environment variables for final installation \\*\r\nESMF\\_INSTALL\\_PREFIX:    ./DEFAULTINSTALLDIR\r\nESMF\\_INSTALL\\_HEADERDIR: include\r\nESMF\\_INSTALL\\_MODDIR:    mod/modO/AIX.default.64.mpi.default\r\nESMF\\_INSTALL\\_LIBDIR:    lib/libO/AIX.default.64.mpi.default\r\nESMF\\_INSTALL\\_DOCDIR:    doc\r\n\\--------------------------------------------------------------\r\n\\* Compilers, Linkers, Flags, and Libraries \\*\r\nLocation of the preprocessor:      /usr/bin/gcc\r\nLocation of the Fortran compiler:  /usr/bin/mpxlf90\\_r\r\nLocation of the Fortran linker:    /usr/bin/mpxlf90\\_r\r\nLocation of the C++ compiler:      /usr/bin/mpCC\\_r\r\nLocation of the C++ linker:        /usr/bin/mpCC\\_r\r\n\r\nFortran compiler flags:\r\nESMF\\_F90COMPILEOPTS: -O -q64\r\nESMF\\_F90COMPILEPATHS: -I/gpfs/d/global/save/wx20wy/esmf\\_3\\_0\\_1\\_src/esmf/mod/modO/AIX.default.64.mpi.default -I/gpfs/d/global/save/wx20wy/esmf\\_3\\_0\\_1\\_src/esmf/src/include\r\nESMF\\_F90COMPILECPPFLAGS:  -WF,-DS64=1\r\n\r\nFortran linker flags:\r\nESMF\\_F90LINKOPTS:  -q64\r\nESMF\\_F90LINKPATHS: -L/gpfs/d/global/save/wx20wy/esmf\\_3\\_0\\_1\\_src/esmf/lib/libO/AIX.default.64.mpi.default\r\nESMF\\_F90LINKRPATHS:\r\nESMF\\_F90LINKLIBS:  -lmpi\\_r -lxlf90\\_r -lC\\_r\r\nESMF\\_F90ESMFLINKLIBS: -lesmf  -lmpi\\_r -lxlf90\\_r -lC\\_r\r\n\r\nC++ compiler flags:\r\nESMF\\_CXXCOMPILEOPTS: -O -q64\r\nESMF\\_CXXCOMPILEPATHS: -I/gpfs/d/global/save/wx20wy/esmf\\_3\\_0\\_1\\_src/esmf/src/include\r\nESMF\\_CXXCOMPILECPPFLAGS: -DS64=1 -D\\_\\_SDIR\\_\\_=''\r\n\r\nC++ linker flags:\r\nESMF\\_CXXLINKOPTS:  -q64\r\nESMF\\_CXXLINKPATHS: -L/gpfs/d/global/save/wx20wy/esmf\\_3\\_0\\_1\\_src/esmf/lib/libO/AIX.default.64.mpi.default\r\nESMF\\_CXXLINKRPATHS:\r\nESMF\\_CXXLINKLIBS:  -lmpi\\_r -lm\\_r -lxlf90\\_r -lC\\_r\r\nESMF\\_CXXESMFLINKLIBS: -lesmf  -lmpi\\_r -lm\\_r -lxlf90\\_r -lC\\_r\r\n\r\n\r\n\\--------------------------------------------------------------\r\nCompiling on Thu Mar 8 16:15:21 EST 2007 on d2n7.ncep.noaa.gov\r\nMachine characteristics: AIX d2n7 3 5 00CB012C4C00\r\n==============================================================\r\n\r\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\r\n\r\nBy the way, the ESMF 3.0.0 library runs very well and I did not find any problem with the 3.0.0 library.\r\n\r\nThank you very much.  Have a good day.\r\n\r\nBest regards\r\nWeiyu\r\n\r\n\r\n\r\n\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "ESMF 3.0.1 test executables on NCEP IBM machines",
  "discussion_thread": {
    "_id": "193c3888",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nThe problem with the NCEP GFS Ensemble model was due to the new initializer code in ESMF 3.0.1. Weiyu was able to fix this with the hint I sent him.\r\nNow we are still trying to verify that Weiyu is able to run the tests that are bundled with ESMF 3.0.1 on the NCEP IBM machines.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-04-12 05:34:09",
        "slug": "bec1",
        "subject": "#91 ESMF 3.0.1 test executables on NCEP IBM machines"
      },
      {
        "text": "- **summary**: ESMF 3.0.1 library. --> ESMF 3.0.1 test executables on NCEP IBM machines",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-04-12 05:34:09",
        "slug": "c5e0",
        "subject": "#91 ESMF 3.0.1 test executables on NCEP IBM machines"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nThis is a memorandum for the record:\r\n\r\nWeiyu does not have the time or inclination to try and run the tests on their systems and we can't close the ticket until it has been verified that the tests run.  So alas, we will have to do this ourselves.  Weiyu sent Gerhard all the info he needs to dork with this.  We just need to give him to do it.\r\n\r\nI wonder, could silverio do this instead?\r\n\r\n",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-27 22:01:15",
        "slug": "245b",
        "subject": "#91 ESMF 3.0.1 test executables on NCEP IBM machines"
      },
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 03:23:28",
        "slug": "6901",
        "subject": "#91 ESMF 3.0.1 test executables on NCEP IBM machines"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nThe way user's can specify user-written, system specific mpirun scripts has been simplified and better documented in 310rp1. With Ratko's and Weiyu's help we were able to put an NCEP specific script together, mpirun.loadlevler.ncep. This script is accessible through esmfcontrib repository, module scripts.\r\n\r\nWeiyu reported success on both NCEP IBMs: \"dew\" P5/AIX and \"vapor\" P6/AIX.\r\n\r\nSee email traffic for more details.\r\n\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-31 19:51:36",
        "slug": "dd2e",
        "subject": "#91 ESMF 3.0.1 test executables on NCEP IBM machines"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-31 19:51:36",
        "slug": "fa6b",
        "subject": "#91 ESMF 3.0.1 test executables on NCEP IBM machines"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-31 19:51:36",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30bf2718463761fbf42d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/193c3888/",
  "ticket_num": 91,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2007-03-08 21:26:59"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tim Campbell from ADCIRC\r\n\r\nIn the process of working ESMC\\_Config changes into the head I found that the esmf.mk method does not work when building C/C++ applications.  The reason is that certain required header files are not copied into src/include and include paths are not provided for the platform specific headers.  I have worked in some simple changes that enable one to build C/C++ applications using the esmf.mk method.  The changes are described below.  I submit these for review by the core team and approval to check-in the changes.\r\n\r\n\r\nProblem Description\r\n\r\nWhen building C/C++ applications with ESMF the user code includes ESMC.h.  This header subsequently includes other required ESMC header files.\r\n\r\n\\(P1\\) ESMC\\_Start.h, which is included by ESMC.h, depends on ESMF\\_Conf.inc and ESMC\\_Conf.h which are located in the platform specific config directories \\(i.e., ESMF\\_SITEDIR and ESMF\\_CONFDIR\\).  ESMF\\_SITEDIR and ESMF\\_CONFDIR are added to ESMF\\_F90COMPILEPATHSLOCAL and ESMF\\_CXXCOMPILEPATHSLOCAL.  However, they are not added to ESMF\\_F90COMPILEPATHS or ESMF\\_CXXCOMPILEPATHS.  Hence, they are not added to esmf.mk.\r\n\r\n\\(P2\\) Several header files that depend on pthreads are included by ESMC.h.  These header files include ESMF\\_Pthread.h, which provides a layer for hiding the switching between the system pthreads and a stub.  In the case of using pthread stubs the pthread\\_stubs.h header is included by ESMF\\_Pthread.h.  Both ESMF\\_Pthread.h and pthread\\_stubs.h sit in src/Infrastructure/stubs/pthread and are not copied into src/include.  The include path for src/Infrastructure/stubs/pthread is not added to ESMF\\_F90COMPILEPATHS or ESMF\\_CXXCOMPILEPATHS.\r\n\r\n\r\nSuggested Changes\r\n\r\n\\(C1\\) The fix for problem P1 is simply to add ESMF\\_SITEDIR and ESMF\\_CONFDIR to ESMF\\_F90COMPILEPATHS and ESMF\\_CXXCOMPILEPATHS.  This results in those paths being included in esmf.mk.  Here is a diff of build/common.mk to show what the change consists of.\r\n\r\ndiff -u -r1.180 common.mk\r\n\\--- common.mk   13 Mar 2007 17:00:59 -0000      1.180\r\n+++ common.mk   20 Mar 2007 17:29:21 -0000\r\n@@ -471,8 +471,10 @@\r\nESMF\\_F90COMPILEPATHS += $\\(ESMF\\_F90IMOD\\)$\\(ESMF\\_F90MODDIR\\)\r\nESMF\\_F90COMPILEPATHSLOCAL =\r\nifneq \\($\\(ESMF\\_SITE\\),default\\)\r\n+ESMF\\_F90COMPILEPATHS += -I$\\(ESMF\\_SITEDIR\\)\r\nESMF\\_F90COMPILEPATHSLOCAL += -I$\\(ESMF\\_SITEDIR\\)\r\nendif\r\n+ESMF\\_F90COMPILEPATHS += -I$\\(ESMF\\_CONFDIR\\)\r\nESMF\\_F90COMPILEPATHSLOCAL += -I$\\(ESMF\\_CONFDIR\\)\r\nESMF\\_F90COMPILEPATHS += -I$\\(ESMF\\_INCDIR\\)\r\nESMF\\_F90COMPILEFREECPP +=\r\n@@ -503,8 +505,10 @@\r\nESMF\\_CXXCOMPILEPATHSLOCAL = -I$\\(ESMF\\_DIR\\)/$\\(LOCDIR\\)\r\nESMF\\_CXXCOMPILEPATHSLOCAL += -I$\\(ESMF\\_DIR\\)/$\\(LOCDIR\\)/../include\r\nifneq \\($\\(ESMF\\_SITE\\),default\\)\r\n+ESMF\\_CXXCOMPILEPATHS += -I$\\(ESMF\\_SITEDIR\\)\r\nESMF\\_CXXCOMPILEPATHSLOCAL += -I$\\(ESMF\\_SITEDIR\\)\r\nendif\r\n+ESMF\\_CXXCOMPILEPATHS += -I$\\(ESMF\\_CONFDIR\\)\r\nESMF\\_CXXCOMPILEPATHSLOCAL += -I$\\(ESMF\\_CONFDIR\\)\r\nESMF\\_CXXCOMPILEPATHS += -I$\\(ESMF\\_INCDIR\\)\r\nESMF\\_CXXCOMPILECPPFLAGS += $\\(CPPFLAGS\\) -D\\_\\_SDIR\\_\\_='\"$\\(LOCDIR\\)\"'\r\n\r\n\\(C2\\) The fix for problem P2 involves rearranging the layout of stubs/pthread so that the build will copy the required header files into src/include.  Here are suggested changes to accomplish this.\r\n\r\n\\(C2a\\) Add stubs/pthread/src and stubs/pthread/include directories.  Move stubs/pthread/ESMF\\_Pthread.h to stubs/pthread/include/ESMF\\_Pthread.h.  Move stubs/pthread/pthread\\_stubs.h to stubs/pthread/include/ESMF\\_PthreadStubs.h.  Edit stubs/pthread/include/ESMF\\_Pthread.h to include ESMF\\_PthreadStubs.h instead of pthread\\_stubs.h.\r\n\r\n\\(C2b\\) Add stubs/pthread/makefile.  This makefile only sets \"DIRS = src\" so that the recursive make will traverse into the src directory.\r\n\r\n\\(C2c\\) Add stubs/pthread/src/makefile.  This makefile only sets STOREH so that the appropriate header files are picked up by the tree\\_include action of the tree target.\r\n\r\n\\(C2d\\) Modify build/common.mk so that stubs/pthread is not added to the local include path.  Here is a diff showing the changes to build/common.mk.\r\n\r\ndiff -u -r1.180 common.mk\r\n\\--- common.mk   13 Mar 2007 17:00:59 -0000      1.180\r\n+++ common.mk   20 Mar 2007 17:29:21 -0000\r\n@@ -630,12 +634,11 @@\r\n\\#-------------------------------------------------------------------------------\r\n\\# ESMF\\_PTHREADS is passed \\(by CPP\\) into the library compilation to control the\r\n\\# dependency on of the ESMF library on Pthreads.\r\n+\\# The required common headers are copied to $\\(ESMF\\_DIR\\)/src/include.\r\n\\#-------------------------------------------------------------------------------\r\nifeq \\($\\(ESMF\\_PTHREADS\\),OFF\\)\r\nCPPFLAGS       += -DESMF\\_NO\\_PTHREADS\r\nendif\r\n-\\# even when compiling with ESMF\\_PTHREADS=ON we need to find common header\r\n-ESMF\\_CXXCOMPILEPATHSLOCAL += -I$\\(ESMF\\_DIR\\)/src/Infrastructure/stubs/pthread\r\n\\#-------------------------------------------------------------------------------\r\n\\# ESMF\\_TESTWITHTHREADS is passed \\(by CPP\\) into test programs to control the\r\n\r\n\r\n~Tim\r\n\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:C_INTERF changes to build for public C interfaces (4)",
  "discussion_thread": {
    "_id": "c1e9e86c",
    "posts": [
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 356870 --> \n- **summary**: suggested changes to build --> LONG:C_INTERF changes to build for public C interfaces",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-03-30 15:59:13",
        "slug": "70ad",
        "subject": "#92 LONG:C_INTERF changes to build for public C interfaces (4)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nWe need to check into the build implications of the public ESMF C interface after we have settled the details and conventions of such an interface. This is a separate discussion currently on esmf\\_core.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-03-30 21:41:12",
        "slug": "8d63",
        "subject": "#92 LONG:C_INTERF changes to build for public C interfaces (4)"
      },
      {
        "text": "- **summary**: LONG:C_INTERF changes to build for public C interfaces --> LONG:C_INTERF changes to build for public C interfaces (4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:15:11",
        "slug": "9926",
        "subject": "#92 LONG:C_INTERF changes to build for public C interfaces (4)"
      },
      {
        "text": "A new and clean ESMC.h header was introduced in ESMF 3.1.1. Now esmf.mk correctly works also for ESMF C applications. This is tested automatically via the checkinstall target on all platforms.\n\n-&gt; Sent note to Tim about this update.\n\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-09-12 22:16:13",
        "slug": "0172",
        "subject": "#92 LONG:C_INTERF changes to build for public C interfaces (4)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-09-12 22:16:42",
        "slug": "82f5",
        "subject": "#92 LONG:C_INTERF changes to build for public C interfaces (4)"
      },
      {
        "text": "Bobby reports that they are compiling and linking w/o problem using the esmf.mk approach Tim implemented for them.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-28 19:07:37",
        "slug": "2f0c",
        "subject": "#92 LONG:C_INTERF changes to build for public C interfaces (4)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-28 19:07:37",
        "slug": "ddf9",
        "subject": "#92 LONG:C_INTERF changes to build for public C interfaces (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-28 19:07:37",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30c12718463761fbf452",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c1e9e86c/",
  "ticket_num": 92,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2007-03-20 18:31:25"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "WHO:  Hiroshi Takahara/NEC\r\n\r\nAdd port to NEC.  This is an expected contribution from\r\nNEC staff.  Contact info is below, see also freeCRM.\r\n\r\nHiroshi Takahara \r\nh-takahara@bc.jp.nec.com\r\n\r\nAddress him as:\r\n\r\nTakahara-san,\r\n\r\nYour message here\r\n\r\nBest regards,\r\nYou\r\n\r\n\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "murphysj",
  "assigned_to_id": "4d794255b9363c57d70002fc",
  "private": false,
  "summary": "PORT2NEC: Port to NEC (Contrib ?)",
  "discussion_thread": {
    "_id": "58ed4d93",
    "posts": [
      {
        "text": "- **summary**: Port to NEC --> PORT2NEC: Port to NEC",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-05-10 16:44:46",
        "slug": "0750",
        "subject": "#93 PORT2NEC: Port to NEC (Contrib ?)"
      },
      {
        "text": "- **summary**: PORT2NEC: Port to NEC --> PORT2NEC: Port to NEC (Contrib ?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:11:48",
        "slug": "2b12",
        "subject": "#93 PORT2NEC: Port to NEC (Contrib ?)"
      },
      {
        "text": "- **priority**: 2 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:41:18",
        "slug": "393a",
        "subject": "#93 PORT2NEC: Port to NEC (Contrib ?)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 17:36:36",
        "slug": "8c01",
        "subject": "#93 PORT2NEC: Port to NEC (Contrib ?)"
      },
      {
        "text": "- **priority**: 1 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 17:37:16",
        "slug": "ec54",
        "subject": "#93 PORT2NEC: Port to NEC (Contrib ?)"
      },
      {
        "text": "- **priority**: 5 --> 7\n- **assigned_to**: nobody --> murphysj",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-02-17 17:23:05",
        "slug": "b0f2",
        "subject": "#93 PORT2NEC: Port to NEC (Contrib ?)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-03-14 19:22:04",
        "slug": "cf3c",
        "subject": "#93 PORT2NEC: Port to NEC (Contrib ?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-14 19:22:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30c32718463761fbf47c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/58ed4d93/",
  "ticket_num": 93,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2007-04-27 16:48:18"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "WHO: Ankush Gupta\r\n\r\n&gt; \r\n&gt; Subject:\r\n&gt; ESMF Fortran Compiler Issue\r\n&gt; From:\r\n&gt; Ankush Gupta &lt;Ankush.Gupta@Sun.COM&gt;\r\n&gt; Date:\r\n&gt; Wed, 02 May 2007 17:11:22 +0530\r\n&gt; To:\r\n&gt; esmf\\_jst@ucar.edu\r\n&gt; \r\n&gt; To:\r\n&gt; esmf\\_jst@ucar.edu\r\n&gt; \r\n&gt; \r\n&gt; Hi All\r\n&gt;      I am using Solaris Operating System and I was trying to port the \r\n&gt; application to the Solaris OS. It gives some compiling problems when I \r\n&gt; use G77 fortran compiler.\r\n&gt;    The manual says that the Cray compiler is required.I searched the net \r\n&gt; for the same , but dint get one. Please help me what should I do.\r\n&gt; \r\n&gt; Thanks\r\n&gt; Ankush\r\n&gt; \r\n&gt; \r\n\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "LONG:PORT2SUN: Solaris port by Sun (Contrib ?)",
  "discussion_thread": {
    "_id": "91296f14",
    "posts": [
      {
        "text": "- **priority**: 3 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-05-03 15:23:11",
        "slug": "536b",
        "subject": "#94 LONG:PORT2SUN: Solaris port by Sun (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG:PORT2SUN: Solaris port --> LONG:PORT2SUN: Solaris port by Sun",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-06-08 20:55:03",
        "slug": "b3d0",
        "subject": "#94 LONG:PORT2SUN: Solaris port by Sun (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG:PORT2SUN: Solaris port by Sun --> LONG:PORT2SUN: Solaris port by Sun (Contrib ?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:11:26",
        "slug": "a555",
        "subject": "#94 LONG:PORT2SUN: Solaris port by Sun (Contrib ?)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-12 20:01:06",
        "slug": "2bbb",
        "subject": "#94 LONG:PORT2SUN: Solaris port by Sun (Contrib ?)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-13 16:33:36",
        "slug": "7728",
        "subject": "#94 LONG:PORT2SUN: Solaris port by Sun (Contrib ?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-06-13 16:33:36",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30c52718463761fbf4a6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/91296f14/",
  "ticket_num": 94,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2007-05-03 15:13:29"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "WHO: Paul van den Bogaard from Sun Microsystems\r\n\r\nPaul van den Bogaard wrote:\r\n&gt; Hi,\r\n&gt; \r\n&gt; currently I see Solaris is not supported. I will try to start porting  \r\n&gt; the ESMF software so it will run on Solaris 10, X86. And  if time  \r\n&gt; allows also to Solaris 10 on SPARC.\r\n&gt; \r\n&gt; Are you aware of a similar activity that is already taking place,  that \r\n&gt; I could join, of is this a new attempt to get this software  running on \r\n&gt; Solaris 10?\r\n&gt; \r\n&gt; Are there any scripts available to \\(unit\\) test the ported product? If  \r\n&gt; so can these be run  in reasonable time on a single or dual core  \r\n&gt; workstation?\r\n&gt; \r\n&gt; I read on your website there is a recommendation to use gcc for  \r\n&gt; preprocessing. Is this just preprocessing or are there other  \r\n&gt; dependencies on gcc? As you might expect I have a preference for Suns  \r\n&gt; Studio compiler\\(s\\) \\(Sun Studio 11 to be more precise\\).\r\n&gt; \r\n&gt; Any hints, tips, etc are ofcourse very welcome.\r\n&gt; \r\n&gt; Thanks so much for your help and attention.\r\n&gt; \r\n&gt; Regards,\r\n&gt; Paul van den Bogaard",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "LONG:PORT2SUN: Solaris port by another Sun guy (Contrib ?)",
  "discussion_thread": {
    "_id": "07b8f430",
    "posts": [
      {
        "text": "- **summary**: LONG:PORT2SUN: Solaris port --> LONG:PORT2SUN: Solaris port by another Sun guy",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-06-08 20:55:27",
        "slug": "13e7",
        "subject": "#95 LONG:PORT2SUN: Solaris port by another Sun guy (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG:PORT2SUN: Solaris port by another Sun guy --> LONG:PORT2SUN: Solaris port by another Sun guy (Contrib ?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:11:09",
        "slug": "3e41",
        "subject": "#95 LONG:PORT2SUN: Solaris port by another Sun guy (Contrib ?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: YES\n\nI wrote to Paul letting him know the Solaris port was in version 3.1.0r, and told him that if he could build successfully we would close the ticket. - Cecelia ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-12 19:45:54",
        "slug": "55d5",
        "subject": "#95 LONG:PORT2SUN: Solaris port by another Sun guy (Contrib ?)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-12 19:45:54",
        "slug": "8ba8",
        "subject": "#95 LONG:PORT2SUN: Solaris port by another Sun guy (Contrib ?)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-12 20:01:47",
        "slug": "20c6",
        "subject": "#95 LONG:PORT2SUN: Solaris port by another Sun guy (Contrib ?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-06-12 20:01:47",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30c62718463761fbf4c7",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/07b8f430/",
  "ticket_num": 95,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2007-05-03 15:24:53"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "In MAPL, we are registering read and write restart methods\r\nwith ESMF in addition to init, run and finalize, and we are\r\nusing the grid comp methods:\r\n\r\nESMF\\_GridCompWriteRestart and ESMF\\_GridCompReadRestart\r\n\r\nto invoke them.\r\n\r\nBut we noticed that these do not have Import and Export states in\r\nthe argument list. I think these should look like all\r\nthe other GridComp  registration methods, since import and\r\nexport states may also need to be checkpointed.\r\n\r\nMax\r\n",
  "labels": [
    "Component"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: COMP_MAPL: Need import and export states in ... (3)",
  "discussion_thread": {
    "_id": "cb7ded27",
    "posts": [
      {
        "text": "- **labels**: 588649 --> Component\n- **summary**: Do not have import and export states in GridComp() --> LONG: Do not have import and export states in GridComp()\n- **assigned_to**: nobody --> theurich\n- **milestone**: 356870 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-06-08 20:12:18",
        "slug": "c4b8",
        "subject": "#96 LONG: COMP_MAPL: Need import and export states in ... (3)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-06-08 20:12:49",
        "slug": "5022",
        "subject": "#96 LONG: COMP_MAPL: Need import and export states in ... (3)"
      },
      {
        "text": "- **summary**: LONG: Do not have import and export states in GridComp() --> LONG:COMP_MAPL: Do not have import and export states in...",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-06-12 16:32:01",
        "slug": "4af4",
        "subject": "#96 LONG: COMP_MAPL: Need import and export states in ... (3)"
      },
      {
        "text": "- **summary**: LONG:COMP_MAPL: Do not have import and export states in... --> LONG:COMP_MAPL: Need import and export states in ... (1/1)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-06-12 16:41:30",
        "slug": "42d5",
        "subject": "#96 LONG: COMP_MAPL: Need import and export states in ... (3)"
      },
      {
        "text": "- **summary**: LONG:COMP_MAPL: Need import and export states in ... (1/1) --> LONG: COMP_MAPL: Need import and export states in ... (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:10:52",
        "slug": "bd3e",
        "subject": "#96 LONG: COMP_MAPL: Need import and export states in ... (3)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-11-19 21:45:44",
        "slug": "9235",
        "subject": "#96 LONG: COMP_MAPL: Need import and export states in ... (3)"
      },
      {
        "text": "The CompReadRestart\\(\\) and CompWriteRestart\\(\\) methods are now following the standard calling interface for user-written Component methods. As such they pass importState, exportState, clock through the ESMF interface. This went into ESMF\\_4\\_0\\_0\\_beta\\_snapshot\\_13 and Atanas verified the change:\r\n\r\nAtanas Trayanov wrote:\r\n\r\n&gt;&gt; Gerhard,\r\n&gt;&gt; \r\n&gt;&gt; I have good news - I finished testing Read/WriteRestart\\(\\) with 400bs13 \r\n&gt;&gt; and everything behaves as expected  :-\\) \r\n&gt;&gt; \r\n&gt;&gt; -Atanas\r\n&gt;&gt; \r\n\r\nThe CompReadRestart\\(\\) and CompWriteRestart\\(\\) methods are now documented ESMF-public interfaces.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-04-09 19:28:44",
        "slug": "9b73",
        "subject": "#96 LONG: COMP_MAPL: Need import and export states in ... (3)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-04-09 19:28:44",
        "slug": "fd16",
        "subject": "#96 LONG: COMP_MAPL: Need import and export states in ... (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-04-09 19:28:44",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30c72718463761fbf4e8",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/cb7ded27/",
  "ticket_num": 96,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-05-11 20:52:54"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Who:  Gopala Krishnan Sankaran, model unknown\r\n\r\nHi,\r\n\r\nI am trying to compile esmf on Solaris. I am using the latest version\r\nof Sun Studio compilers \\(Sun Studio 12\\). However, when I do a gmake,\r\nthe compilation hangs after sometime. As in, the console just stands\r\nstill after a f90 command. Is this issue known?\r\n\r\nThanks,\r\nGopal.\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "LONG:PORT2SUN:Problem building on Solaris (Contrib ?)",
  "discussion_thread": {
    "_id": "3dcf5cc1",
    "posts": [
      {
        "text": "- **milestone**: 155253 --> \n- **labels**: 509038 --> Build/Install",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-06-08 20:05:06",
        "slug": "b41c",
        "subject": "#97 LONG:PORT2SUN:Problem building on Solaris (Contrib ?)"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform\n- **summary**: Problem building on Solaris --> LONG:PORT2SUN:Problem building on Solaris",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-06-08 20:09:42",
        "slug": "a259",
        "subject": "#97 LONG:PORT2SUN:Problem building on Solaris (Contrib ?)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-06-08 20:52:56",
        "slug": "7e67",
        "subject": "#97 LONG:PORT2SUN:Problem building on Solaris (Contrib ?)"
      },
      {
        "text": "- **summary**: LONG:PORT2SUN:Problem building on Solaris --> LONG:PORT2SUN:Problem building on Solaris (Contrib ?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:09:52",
        "slug": "2f63",
        "subject": "#97 LONG:PORT2SUN:Problem building on Solaris (Contrib ?)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nThe Solaris port was completed in 3.1.0r.  I wrote Gopal letting him know and saying we would close the ticket if he can now build.\r\n\\- Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-12 19:32:08",
        "slug": "a376",
        "subject": "#97 LONG:PORT2SUN:Problem building on Solaris (Contrib ?)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-12 19:32:08",
        "slug": "65f1",
        "subject": "#97 LONG:PORT2SUN:Problem building on Solaris (Contrib ?)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-12 20:01:33",
        "slug": "e619",
        "subject": "#97 LONG:PORT2SUN:Problem building on Solaris (Contrib ?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-06-12 20:01:33",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30ca2718463761fbf517",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3dcf5cc1/",
  "ticket_num": 97,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2007-06-08 15:05:37"
},{
  "status": "closed",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "Currently the SetServices\\(\\) routine is executed in the parent VM. This is done because it is during the child's SetServices\\(\\) routine that the child can use ESMF calls to specify certain things about it's own VM - which needs to happen \\_before\\_ the child VM can be created.\r\n\r\nHowever, MAPL, works under the assumption that it is o.k. to call grandchildren's SetServices\\(\\) from a child's SetServices\\(\\). This indirectly assumes that the child's SetServices\\(\\) is executing from within it's own VM \\(which currently does not even exist at that time\\). \r\n\r\nIn order to make MAPL work correctly it is necessary to separate the phase during which a user written child method is called to set VM specifics, e.g. CompSetVM\\(\\), and the SetServices\\(\\) routine that can be used just as is done in MAPL.\r\n\r\n\\*gjt\\*",
  "labels": [
    "Component"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:COMP_MAPL: execute SetServices() in child VM (4)",
  "discussion_thread": {
    "_id": "e1a3889e",
    "posts": [
      {
        "text": "- **summary**: LONG:COMP_MAPL: execute SetServices() in child VM (2/2) --> LONG:COMP_MAPL: execute SetServices() in child VM (4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:08:55",
        "slug": "7e18",
        "subject": "#98 LONG:COMP_MAPL: execute SetServices() in child VM (4)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-11-19 21:45:43",
        "slug": "4b78",
        "subject": "#98 LONG:COMP_MAPL: execute SetServices() in child VM (4)"
      },
      {
        "text": "SetServices\\(\\) was split into SetVM\\(\\) and SetServices\\(\\) following the proposal in the original comment of this ticket. Atanas verified the modified Superstructure code in ESMF\\_4\\_0\\_0\\_beta\\_snapshot\\_12 against a small ensemble test code that uses MAPL and against GEOS-5 with a 310rp2 baseline \\(see emails for details\\).\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-04-01 05:57:17",
        "slug": "e730",
        "subject": "#98 LONG:COMP_MAPL: execute SetServices() in child VM (4)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-04-01 05:57:25",
        "slug": "4e3c",
        "subject": "#98 LONG:COMP_MAPL: execute SetServices() in child VM (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-04-01 05:57:25",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30cb2718463761fbf542",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e1a3889e/",
  "ticket_num": 98,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-06-12 16:29:54"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tim Campbell from ADCIRC\r\n\r\nI need a way to get the global distGrid size \\(i.e., minCorner & maxCorner\\) from the distGrid object.  The ESMF\\_DistGridGet API does not seem to provide a direct mechanism for getting this global info.  I'm sure I could reconstruct it from the dimCount & dimExtent variables, but that is a hassle.  Am I missing something?  How about adding to the ESMF\\_DistGridGet function that ability to get minCorner and maxCorner?\r\n\r\n~Tim",
  "labels": [
    "DistGrid - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "need to get min/max corner from distGrid",
  "discussion_thread": {
    "_id": "b666702b",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-06-27 18:54:50",
        "slug": "e15c",
        "subject": "#99 need to get min/max corner from distGrid"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nTim,\r\n\r\nThe F90 interface currently does not provide access to \\(minIndex, maxIndex\\) for patches. \\[ The ESMCI interface does provide access via getMinIndex\\(\\), getMaxIndex\\(\\), but of course these are internal methods and subject to change without warning. \\] I will move your ticket to the feature request queue and see that we add minIndex and maxIndex to the F90 interface in a future release.\r\n\r\nThanks,\r\n-Gerhard\r\n\r\nTim Campbell wrote:\r\n\r\n&gt; Just wondering if you have any feedback on this issue.  Is it  something that is already available and I am just overlooking or is  it something that needs to be implemented?\r\n&gt;\r\n&gt; ~Tim\r\n&gt;\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-09 22:51:12",
        "slug": "369a",
        "subject": "#99 need to get min/max corner from distGrid"
      },
      {
        "text": "- **labels**: 368244 --> DistGrid - New\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-09 22:51:12",
        "slug": "dc62",
        "subject": "#99 need to get min/max corner from distGrid"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-09 22:52:28",
        "slug": "b8ca",
        "subject": "#99 need to get min/max corner from distGrid"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nHi Gerhard,\r\n\r\nI implemented the minIndexPDimPPatch/maxIndexPDimPPatch approach and  it takes care of what I needed.  You may close this ticket.   Congratulations -- you are now 4 for 4\\!\r\n\r\nThanks,\r\n~Tim\r\nOn Aug 7, 2007, at 4:28 PM, ESMF Support wrote:\r\n\r\n&gt; Hi Tim,\r\n&gt;\r\n&gt; The 3.0.3 ESMF\\_DistGridGet\\(\\) API provides access to many more  pieces of DistGrid information. Please check the 3.0.3 DistGrid API  documentation for details. In particular minIndexPDimPPatch/ maxIndexPDimPPatch seems to be what you were looking for. Please  let us know if the new ESMF\\_DistGridGet\\(\\) works for you as  expected. Thanks,\r\n&gt;\r\n&gt; -Gerhard\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-08 19:50:55",
        "slug": "668a",
        "subject": "#99 need to get min/max corner from distGrid"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-08 19:50:55",
        "slug": "844a",
        "subject": "#99 need to get min/max corner from distGrid"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-08-08 19:50:55",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30cc2718463761fbf55d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b666702b/",
  "ticket_num": 99,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-06-27 15:03:44"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tim Campbell from ADCIRC\r\n\r\nGreetings,\r\n\r\nIt looks to me like ESMC\\_ArraySparseMatMul sums directly on the destination vector without first initializing it to zero.  This, I think, is counter to what a user would expect from the y = Ax operation.  Either ESMC\\_ArraySparseMatMul needs initialize the destination vector or a note needs to be added to the documentation specifying that the user must initialize the destination vector prior to calling ESMC\\_ArraySparseMatMul.  I suggest adopting the former option.\r\n\r\n~Tim",
  "labels": [
    "Array - Old"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "zero-out option for ESMC_ArraySparseMatMul",
  "discussion_thread": {
    "_id": "48f91d8a",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nGerhard,\r\n\r\nyou have already been working on this.  just making the assignment reflect that.  We want to give you ALL the credit you deserve :\\)",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-07-19 16:23:21",
        "slug": "e85a",
        "subject": "#100 zero-out option for ESMC_ArraySparseMatMul"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-07-19 16:23:21",
        "slug": "06fd",
        "subject": "#100 zero-out option for ESMC_ArraySparseMatMul"
      },
      {
        "text": "- **labels**: 588641 --> Array - Old\n- **milestone**: 356870 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-26 21:52:25",
        "slug": "16a9",
        "subject": "#100 zero-out option for ESMC_ArraySparseMatMul"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-26 21:54:24",
        "slug": "a2d6",
        "subject": "#100 zero-out option for ESMC_ArraySparseMatMul"
      },
      {
        "text": "- **summary**: ESMC_ArraySparseMatMul --> zero-out option for ESMC_ArraySparseMatMul",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-07 19:09:24",
        "slug": "bda5",
        "subject": "#100 zero-out option for ESMC_ArraySparseMatMul"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nHi Gerhard,\r\n\r\nYes, I was aware of this option in 3.0.3 and I have already begun  testing it.  You may close this ticket.\r\n\r\n~Tim\r\n\r\n\r\nOn Aug 7, 2007, at 4:07 PM, ESMF Support wrote:\r\n\r\n&gt; Hi Tim,\r\n&gt;\r\n&gt; You probably saw the jst traffic on this one, but just to let you  know that the ESMF\\_ArraySparseMatMul\\(\\) now initializes the dstArray  to zero by default before adding in the new terms. There is the  option to turn default initialization off, i.e. revert back to the  previous behavior. The 3.0.3 documentation reflects the current  behavior. Please see the 3.0.3 Array documentation for details.\r\n&gt;\r\n&gt; Do you agree that this ticket can be closed now?\r\n&gt;\r\n&gt; -Gerhard ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-08 19:48:30",
        "slug": "797b",
        "subject": "#100 zero-out option for ESMC_ArraySparseMatMul"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-08 19:48:30",
        "slug": "8b9a",
        "subject": "#100 zero-out option for ESMC_ArraySparseMatMul"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-08-08 19:48:30",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30cd2718463761fbf582",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/48f91d8a/",
  "ticket_num": 100,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-06-29 15:07:11"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tim Campbell from ADCIRC\r\n\r\nAnother ESMF/ESMC\\_ArraySparseMatMul issue.\r\nIn ESMC\\_ArraySparseMatMul the source and destination array data are assumed to be ESMC\\_R8.  However, there is no check for this in ESMF\\_ArraySparseMatMul nor is there any documentation specifying this current restriction.  Given that the ESMF\\_Array create interface supports both ESMF\\_KIND\\_R4 and ESMF\\_KIND\\_R8, a typical user will assume then that ESMF\\_ArraySparseMatMul also supports both ESMF\\_KIND\\_R4 and ESMF\\_KIND\\_R8.\r\n\r\n~Tim",
  "labels": [
    "Array - Old"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "TK overload for ESMF/ESMC_ArraySparseMatMul",
  "discussion_thread": {
    "_id": "079d8e2c",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nGerhard, this has been sitting empty so I am going to assign it to you since you requested all of Tim's support tickets. Should this be a feature request?  Have you discussed this with him off line??\r\n\r\nsylvia",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-07-19 16:19:12",
        "slug": "7b32",
        "subject": "#101 TK overload for ESMF/ESMC_ArraySparseMatMul"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-07-19 16:19:12",
        "slug": "4470",
        "subject": "#101 TK overload for ESMF/ESMC_ArraySparseMatMul"
      },
      {
        "text": "- **labels**: 588641 --> Array - Old\n- **milestone**: 356870 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-26 21:51:30",
        "slug": "9d6a",
        "subject": "#101 TK overload for ESMF/ESMC_ArraySparseMatMul"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-26 21:54:03",
        "slug": "53da",
        "subject": "#101 TK overload for ESMF/ESMC_ArraySparseMatMul"
      },
      {
        "text": "- **summary**: ESMF/ESMC_ArraySparseMatMul --> TK overload for ESMF/ESMC_ArraySparseMatMul",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-07 19:08:05",
        "slug": "6c1f",
        "subject": "#101 TK overload for ESMF/ESMC_ArraySparseMatMul"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nHi Gerhard,\r\n\r\nWe have switched our code over to 3.0.3 and are now using ASSM with  real\\(ESMF\\_KIND\\_R4\\).  The error check did trap my attempt to use R4  arrays with R8 factors.  You may close ticket.\r\n\r\n~Tim\r\n\r\n\r\nOn Aug 7, 2007, at 4:15 PM, ESMF Support wrote:\r\n\r\n&gt; Hi Tim,\r\n&gt;\r\n&gt; The ESMF\\_ArraySparseMatMul in version 3.0.3 works for:\r\n&gt;\r\n&gt; integer\\(ESMF\\_KIND\\_I4\\),\r\n&gt; integer\\(ESMF\\_KIND\\_I8\\),\r\n&gt; real\\(ESMF\\_KIND\\_R4\\), and\r\n&gt; real\\(ESMF\\_KIND\\_R8\\).\r\n&gt;\r\n&gt; There are error checks to catch unsupported and inconsistent type/ kind combinations.\r\n&gt;\r\n&gt; -Gerhard ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-08 19:49:37",
        "slug": "8bc2",
        "subject": "#101 TK overload for ESMF/ESMC_ArraySparseMatMul"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-08 19:49:37",
        "slug": "062d",
        "subject": "#101 TK overload for ESMF/ESMC_ArraySparseMatMul"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-08-08 19:49:37",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30cf2718463761fbf5ac",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/079d8e2c/",
  "ticket_num": 101,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-06-29 16:01:35"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Gary Block from the JPL Test Team\r\n\r\nHi-\r\n\r\nI'm trying to isolate a problem I'm having where the state attributes seem to be discarded in an \"ESMF\\_GridCompFinalize \\(comp, importState, exportState, rc=status\\)\" call.\r\n\r\nI want to call ESMF\\_StatePrint to display the state attribute contents before the call and immediately upon entry to my finalize routine.  Unfortunately, I cannot see my state attributes.\r\n\r\nI am using ESMF\\_StateGetAttribute.  It succeeds before the call but fails with a 501 \\(object bad\\) error upon entry to the finalize.  I think the state object is probably good, but the attributes may be getting discarded/corrupted/or not passed.  My guess it that maybe the pointer to the integer attributes table is not getting copied.\r\n\r\nFor now, I want to open a ticket on the ESMF\\_StatePrint procedure not displaying attributes.\r\n\r\nI'm going to poke around a bit to see if I can better isolate the problem before opening a ticket on the finalize dropping attributes.  \\(It still may be something I'm doing\\).\r\n\r\nGary Block\r\nJPL Section 3873 - HIGH CAPABILITY COMPUTING AND MODELING\r\nDesk Phone: \\(818\\) 353-6701\r\nOffice: 168-415\r\nMail Stop: 169-315",
  "labels": [
    "State"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "Print State Attributes Information in ESMF_StatePrint()",
  "discussion_thread": {
    "_id": "caa753d4",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=934020\nOriginator: NO\n\nGary's initial message is a little misleading.  Apparently, he tried to use\r\nESMF\\_StatePrint to find out the attributes in the State.  Since ESMF\\_StatePrint\r\ndoes not print out attributes, he then used ESMF\\_StateGetAttribute by passing \r\nthe attribute's name.  But, he misspelled the attribute name therefore he got a \r\nbad object error.  So, it has nothing to do whether the function gets called inside\r\nESMF\\_GridCompFinalize or not.\r\n\r\nI changed this ticket into a feature request for adding attribute information in ESMF\\_StatePrint\\(\\).  The message from Gary is included below:\r\n\\---------------------\r\nFrom: Gary Block  \r\nSubject: Re: Fwd: \\[esmf\\_support\\] \\[ esmf-Support Requests-1746673 \\]\r\nState print does \tnot display state attributes\r\n\r\nHi-\r\n\r\n\r\nI think that the state print needs to print out attributes.  Or a least have some way of listing the names of the attributes.\r\nI misspelled an attribute name & had a hard time finding it because the state print didn't give me sufficient information.\r\nThe error response that I got when I tried to get the attribute didn't help.  I finally debugged it when I literally pasted the text from the set into the get.\r\n\r\nThis can be handled as a \"new\" feature if its low priority.  I would certainly like to see the object management problems cleaned up first.\r\n\r\nGary\r\n\r\n",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-07-19 22:40:52",
        "slug": "67f0",
        "subject": "#102 Print State Attributes Information in ESMF_StatePrint()"
      },
      {
        "text": "- **labels**: 588651 --> State\n- **milestone**: 356870 --> ",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-07-19 22:40:52",
        "slug": "b8af",
        "subject": "#102 Print State Attributes Information in ESMF_StatePrint()"
      },
      {
        "text": "- **summary**: State print does not display state attributes --> Print State Attributes Information in ESMF_StatePrint()",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-07-19 22:43:01",
        "slug": "b614",
        "subject": "#102 Print State Attributes Information in ESMF_StatePrint()"
      },
      {
        "text": "Logged In: YES \nuser\\_id=934020\nOriginator: NO\n\nThe attributes for ESMF\\_State, ESMF\\_Bundle and ESMF\\_Field are treated in the same way, i.e., you can retrieve its value by its name or its index.  They are not printed in ESMF\\_\\{XX\\}Print\\(\\) functions.  It would be nice to add it into the Print function but the change should be applied to all other ESMF classes to be consistent.  \r\n\r\npeggy\r\n",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-09-27 23:29:35",
        "slug": "cf3a",
        "subject": "#102 Print State Attributes Information in ESMF_StatePrint()"
      },
      {
        "text": "Logged In: YES \nuser\\_id=934020\nOriginator: NO\n\nAdded attribute information in ESMF\\_StatePrint\\(\\), ESMF\\_BundlePrint\\(\\), and ESMF\\_FieldPrint\\(\\).  Fixed some bugs in ESMC\\_Base.C.  The new code were checked into head on 10/4 and the new code passed all the exhaustive unit tests.\r\n\r\npeggy\r\n",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-10-10 04:19:59",
        "slug": "8008",
        "subject": "#102 Print State Attributes Information in ESMF_StatePrint()"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-10-10 04:19:59",
        "slug": "847e",
        "subject": "#102 Print State Attributes Information in ESMF_StatePrint()"
      },
      {
        "text": "Logged In: YES \nuser\\_id=934020\nOriginator: NO\n\nGary Blocked tested it with ESMF\\_3\\_1\\_0\\_beta\\_snapshot\\_19 and confirmed it is working fine.",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-10-31 16:17:55",
        "slug": "ef39",
        "subject": "#102 Print State Attributes Information in ESMF_StatePrint()"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-10-31 16:17:55",
        "slug": "7580",
        "subject": "#102 Print State Attributes Information in ESMF_StatePrint()"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-10-31 16:17:55",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30d02718463761fbf5d6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/caa753d4/",
  "ticket_num": 102,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2007-07-02 17:03:22"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Gary BLock from the JPL Test Team\r\n\r\nHi-\r\n\r\nI am using the sparse matrix multiply on ESMF 3.0.2 beta snapshot 6.\r\n\r\nThe destination matrix is not being zeroed out before the linear combination of the source matrix is being added to the destination.  This means that when I time step my destination matrix, it uses the destination value at previous time step plus the linear combination of source array as the updated value in the array.  I was expecting that the destination array is generated only from the source array using the supplied weights.\r\n\r\nIs this correct?\r\n\r\nGary\r\n\r\nGary Block\r\nJPL Section 3873 - HIGH CAPABILITY COMPUTING AND MODELING\r\nDesk Phone: \\(818\\) 353-6701\r\nOffice: 168-415\r\nMail Stop: 169-315",
  "labels": [
    "Array - Old"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Sparse matrix multiply question",
  "discussion_thread": {
    "_id": "82a27f7a",
    "posts": [
      {
        "text": "- **assigned_to**: peggyli --> theurich",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-07-19 16:30:39",
        "slug": "d3d0",
        "subject": "#103 Sparse matrix multiply question"
      },
      {
        "text": "- **labels**: 588641 --> Array - Old\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-26 21:50:30",
        "slug": "8b13",
        "subject": "#103 Sparse matrix multiply question"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-26 21:53:31",
        "slug": "f3ad",
        "subject": "#103 Sparse matrix multiply question"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nHi-\r\n\r\nPlease close this ticket.  the matrix is being reinitialized by default.  I will test out the other options & let you know if there any problems.\r\n\r\nGary\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-02 15:42:17",
        "slug": "7683",
        "subject": "#103 Sparse matrix multiply question"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-02 15:42:18",
        "slug": "82ab",
        "subject": "#103 Sparse matrix multiply question"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-08-02 15:42:18",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30d22718463761fbf606",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/82a27f7a/",
  "ticket_num": 103,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-07-16 14:54:10"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Arlindo da Silva from GEOS-5 \r\n\r\nGerhard,\r\n\r\nI need to have the gfortran build backported to tag ESMF\\_2\\_2\\_0rp2 \\(the\r\ncurrent tag used in the production GEOS-5\\). Anticipating the quetion:\r\nno, I cannot upgrade to a later tag. I'm cc'ing Chris as he may have\r\nexperience with gfortran builds. My gfortran version is:\r\n\r\nGNU Fortran 95 \\(GCC\\) 4.1.2 20070302 \\(prerelease\\)\r\n\\(4.1.2-1mdv2007.1\\)\r\n\r\nBefore I waste any time, let me ask a couple of questions:\r\n\r\n1\\) Is there any technical reason why gfortran only appears in v3?\r\n\r\n2\\) Any gotchas I should know adapting the Linux.g95.default file in ESMF\\_2\\_2\\_0rp2 to gfortran?\r\n\r\nThank you,\r\n\r\nArlindo\r\n\r\n\\-- \r\nArlindo da Silva\r\nNASA/GSFC Code 610.1\r\nTel: \\(301\\) 614-6174\r\nFax: \\(301 614-6297\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "LONG:Reconfiguration of \"esmf.mk\" after installation(2)",
  "discussion_thread": {
    "_id": "ec271ef9",
    "posts": [
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **summary**: Gfortran build backport --> Reconfiguration of \"esmf.mk\" after installation\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-25 22:27:59",
        "slug": "4292",
        "subject": "#104 LONG:Reconfiguration of \"esmf.mk\" after installation(2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nThe original issue of this ticket \\(gfortran build backported to tag ESMF\\_2\\_2\\_0rp2\\) has been resolved. During the course of our conversation Arlindo raised the following request:\r\n\r\n&lt;snip&gt;\r\n\r\nAbout 'esmf.mk'. Another issue with esmf.mk is that it is not\r\nrelocatable. I often build the baselibs on one machine and then move\r\nthe binaries around \\(or have them nfsmounted on different directories,\r\non different machines\\), so esmf.mk will not be valid. I'll most likely\r\nbe writing a baselibs-config script \\(in perl\\) which detects its\r\nlocation and dynamics returns the correct paths, even if you move the\r\nlibraries around. You may be able to reuse it to create a esmf-config\r\nscript if you wish.\r\n\r\n&lt;snip&gt;\r\n\r\nArlindo.",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-25 22:31:18",
        "slug": "cb66",
        "subject": "#104 LONG:Reconfiguration of \"esmf.mk\" after installation(2)"
      },
      {
        "text": "- **milestone**:  --> Add Other Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-07-25 22:31:18",
        "slug": "d581",
        "subject": "#104 LONG:Reconfiguration of \"esmf.mk\" after installation(2)"
      },
      {
        "text": "- **summary**: Reconfiguration of \"esmf.mk\" after installation --> LONG:Reconfiguration of \"esmf.mk\" after installation(2)",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-08-13 21:29:39",
        "slug": "dbba",
        "subject": "#104 LONG:Reconfiguration of \"esmf.mk\" after installation(2)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 17:33:22",
        "slug": "0c6c",
        "subject": "#104 LONG:Reconfiguration of \"esmf.mk\" after installation(2)"
      },
      {
        "text": "- **assigned_to**: theurich --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 17:34:24",
        "slug": "96ca",
        "subject": "#104 LONG:Reconfiguration of \"esmf.mk\" after installation(2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:34:24",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30d32718463761fbf627",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/ec271ef9/",
  "ticket_num": 104,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2007-07-23 17:17:03"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tim Campbell from ADCIRC\r\n\r\nI think I have identified a problem with the v3.0.3 SparseMatMul.  Attached is a tar file with a modified version of the ESMF\\_ArraySparseMatMulSTest that demonstrates the problem.\r\n\ufffc\r\nI find that when one executes matrix multiplies with the same route handle on multiple pairs of src/dst arrays, the results are wrong.  In fact, it looks like the subsequent multiplies \\(after the first\\) continue to use the first src/dst arrays even though the call to ESMF\\_ArraySparseMatMul is using different src/dst arrays.\r\n\r\nIn the modified STest you will see that I have added a second pair of src/dst arrays.  You can trigger this \"bug\" by simply commenting/uncommenting the second call to ESMF\\_ArraySparseMatMul in user\\_coupler.F90.\r\n\r\n~Tim\r\n",
  "labels": [
    "Array - Old"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "ASMMStore() routehandle to be used for different Array pairs",
  "discussion_thread": {
    "_id": "74204003",
    "posts": [
      {
        "text": "- **labels**: 588641 --> Array - Old\n- **milestone**: 356870 --> \n- **summary**: v3.0.3 sparsematmul problem --> ASMMStore() routehandle to be used for different Array pairs",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-07 18:34:36",
        "slug": "bfd4",
        "subject": "#105 ASMMStore() routehandle to be used for different Array pairs"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-07 18:35:27",
        "slug": "bb80",
        "subject": "#105 ASMMStore() routehandle to be used for different Array pairs"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nHi Gerhard,\r\n\r\nI tested ESMF\\_3\\_1\\_0\\_beta\\_snapshot\\_08 on AMD64/PGI for using a single  routehandle with ASSM\\(\\) and different source and destination arrays.   The results are correct.\r\n\r\nThanks for keeping me informed on all the updates and how they impact  our project.  We are definitely benefiting from these improvements.\r\n\r\nCheers,\r\n~Tim\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-23 17:18:31",
        "slug": "bcc8",
        "subject": "#105 ASMMStore() routehandle to be used for different Array pairs"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-23 17:18:31",
        "slug": "bc98",
        "subject": "#105 ASMMStore() routehandle to be used for different Array pairs"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2007-08-23 17:18:31",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30d52718463761fbf64c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/74204003/",
  "ticket_num": 105,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-08-06 15:59:12"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tim Capbell from ADCIRC\r\n\r\nHave you had any experience building ESMF with Pathscale on the Cray XT3/4?\r\n\r\nThe Cray XT3 at ERDC has Pathscale compilers in addition to the PGI \\(PGI is still at 6.2-5\\).  I setup a Unicos.pathscale.default build configuration for 3.1.0\\_beta\\_snapshot04.  During the build I get an error during the compile of ESMC\\_DistDir.C about pthread\\_create being undeclared.  I am building without pthreads.  The \\(trimmed\\) log file from the build is attached.\r\n\r\n~Tim\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Pathscale on cray xt3/4 (2)",
  "discussion_thread": {
    "_id": "ed6a1ef5",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nHi Tim,\r\n\r\nThanks for the feedback. Good to know that 310bs07 indeed gets you beyond the ESMC\\_DistDir.C issue you reported earlier. As for the unresolved symbols it does not surprise me that there would be unresolved symbols. We will need to add a Unicos.pathscale.default port to ESMF. For this I will move this ticket into the \"Feature Requests\" queue. How high a priority is the Unicos.pathscale.default port to your work? Thanks,\r\n\r\n-Gerhard\r\n\r\nTim Campbell wrote:\r\n\r\n&gt; Hi Gerhard,\r\n&gt;\r\n&gt; Thanks for pointing me to 3.1.0b7.  I was able to build 3.1.0b7  successfully on the XT3/4 with Pathscale.  Now, when I try to build  the unit tests I get unresolved C++ symbols.  Attached is the log  file.  Any suggestions?\r\n&gt;\r\n&gt; ~Tim ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-21 16:28:05",
        "slug": "969c",
        "subject": "#106 LONG: Pathscale on cray xt3/4 (2)"
      },
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-21 16:28:05",
        "slug": "a3b8",
        "subject": "#106 LONG: Pathscale on cray xt3/4 (2)"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-08-21 16:28:40",
        "slug": "345a",
        "subject": "#106 LONG: Pathscale on cray xt3/4 (2)"
      },
      {
        "text": "- **summary**: pathscale on cray xt3/4 --> Pathscale on cray xt3/4 (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:07:26",
        "slug": "8822",
        "subject": "#106 LONG: Pathscale on cray xt3/4 (2)"
      },
      {
        "text": "- **summary**: Pathscale on cray xt3/4 (?) --> LONG: Pathscale on cray xt3/4 (2)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 20:05:40",
        "slug": "f016",
        "subject": "#106 LONG: Pathscale on cray xt3/4 (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-12-04 20:05:40",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30d62718463761fbf667",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/ed6a1ef5/",
  "ticket_num": 106,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2007-08-20 18:41:13"
},{
  "status": "closed",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Sue Chen from NRLMRY, COAMPS\r\n\r\nFrom an email sent to ticket \\#1755068:\r\n\r\nI am able to get our code running on the FNMOC's new linux cluser using the Scali MPI, with minor modifications to the Linux.pgi.default/build\\_rules.mk file. Thanks for your help.\r\n\r\nSue ",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Port to Linux with PGI and ScaliMPI",
  "discussion_thread": {
    "_id": "46358faa",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: YES\n\nNotified Sue that ESMF\\_3\\_1\\_0\\_beta\\_snapshot\\_28 comes with scalimpi option for intel and pgi.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-01-14 22:54:02",
        "slug": "8801",
        "subject": "#107 Port to Linux with PGI and ScaliMPI"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-01-14 22:54:02",
        "slug": "f18b",
        "subject": "#107 Port to Linux with PGI and ScaliMPI"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: YES\n\nrequested test with 3.1.0r\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 00:40:29",
        "slug": "8eb9",
        "subject": "#107 Port to Linux with PGI and ScaliMPI"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 00:40:29",
        "slug": "3fa8",
        "subject": "#107 Port to Linux with PGI and ScaliMPI"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 00:42:04",
        "slug": "101c",
        "subject": "#107 Port to Linux with PGI and ScaliMPI"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: YES\n\nGerhard,\r\n\r\nI was able to compile ESMF 3.1.0r using the ESMF environments you sent\r\nme. Thanks for the help.\r\n\r\nSue \r\n\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 16:04:14",
        "slug": "5faf",
        "subject": "#107 Port to Linux with PGI and ScaliMPI"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 16:04:14",
        "slug": "7927",
        "subject": "#107 Port to Linux with PGI and ScaliMPI"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-17 16:04:14",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30d82718463761fbf687",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/46358faa/",
  "ticket_num": 107,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2007-08-23 18:13:09"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Who: Jairo Panetta CPTEC\r\n\r\nCPTEC in Brazil is developing their next generation coupled atmosphere-ocean application.\r\n\r\nThey need to port to the NEC and should be included on all discussions related to this effort.\r\n\r\nWe should also identify the NEC contacts who are working with us and forward those on.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "PORT2NEC: (CPTEC-AGCM-MOM4) (Contrib ?)",
  "discussion_thread": {
    "_id": "a7abf802",
    "posts": [
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-09-28 15:37:50",
        "slug": "3327",
        "subject": "#108 PORT2NEC: (CPTEC-AGCM-MOM4) (Contrib ?)"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-09-28 15:38:59",
        "slug": "2bfe",
        "subject": "#108 PORT2NEC: (CPTEC-AGCM-MOM4) (Contrib ?)"
      },
      {
        "text": "- **summary**: NEC: Port to NEC (CPTEC-AGCM-MOM4) --> NEC: Port to NEC (CPTEC-AGCM-MOM4) (Contrib ?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:06:37",
        "slug": "99a3",
        "subject": "#108 PORT2NEC: (CPTEC-AGCM-MOM4) (Contrib ?)"
      },
      {
        "text": "- **summary**: NEC: Port to NEC (CPTEC-AGCM-MOM4) (Contrib ?) --> PORT2NEC: (CPTEC-AGCM-MOM4) (Contrib ?)",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-01-18 18:08:02",
        "slug": "7eb0",
        "subject": "#108 PORT2NEC: (CPTEC-AGCM-MOM4) (Contrib ?)"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-02-17 17:22:12",
        "slug": "b91a",
        "subject": "#108 PORT2NEC: (CPTEC-AGCM-MOM4) (Contrib ?)"
      },
      {
        "text": "Jairo at CPTEC got back to us.  He indicated that they are now using a CRAY for their simulations.  ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-03-14 19:17:54",
        "slug": "1122",
        "subject": "#108 PORT2NEC: (CPTEC-AGCM-MOM4) (Contrib ?)"
      },
      {
        "text": "- **priority**: 7 --> 5\n- **status**: open --> closed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-03-14 19:17:54",
        "slug": "2ff7",
        "subject": "#108 PORT2NEC: (CPTEC-AGCM-MOM4) (Contrib ?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-14 19:17:54",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30da2718463761fbf6b1",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a7abf802/",
  "ticket_num": 108,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2007-09-13 12:47:41"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: George VandenBerghe from ISMG Corp\r\n\r\nI built and used ESMF on the old ORNL Jaguar Unicos system. However when Jaguar changed to CNL \\(Compute Node Linux\\) , I tried rebuilding with Linux.pgi.   THis built but the library was not usable by executables compiled with the jaguar  ftn which is a wrapper around pgi and is mandatory for jaguar applications. When I tried building with ftn but with pgi options and headers, it also built but failed in the test suite.\r\n\r\nHas anyone else yet ported to this platform \\(Cray XT4 running Compute Node Linux or CNL\\)?\r\n\r\n\\-- \r\nGeorge VandenBerghe\r\nIMSG  Corp.\r\n301-763-8115x7119\r\nGeorge.VandenBerghe@noaa.gov\r\nDO NOT RESPOND TO lnx4 address\\!\\!\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "ESMF 2.2.2rp2 on Cray XT4 (jaguar) new Compute Node CNL",
  "discussion_thread": {
    "_id": "5c6cc55d",
    "posts": [
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 155253 --> \n- **assigned_to**: svasquez --> theurich",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-12-04 18:02:16",
        "slug": "0fe1",
        "subject": "#109 ESMF 2.2.2rp2 on Cray XT4 (jaguar) new Compute Node CNL"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nSnapshot ESMF\\_2\\_2\\_2\\_beta\\_snapshot\\_32 on the ESMF\\_2\\_2\\_2branch includes the necessary modifications. George was able to build and run his code with this snapshot, however, his code crashes. It is not yet clear if this crashes are or are not ESMF related. Waiting on more info from George.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-12-04 18:05:48",
        "slug": "4e51",
        "subject": "#109 ESMF 2.2.2rp2 on Cray XT4 (jaguar) new Compute Node CNL"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform\n- **summary**: ESMF on Cray XT4 (jaguar) new Compute Node --> ESMF 2.2.2rp2 on Cray XT4 (jaguar) new Compute Node CNL\n- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2007-12-04 18:05:48",
        "slug": "6876",
        "subject": "#109 ESMF 2.2.2rp2 on Cray XT4 (jaguar) new Compute Node CNL"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nGeorge has lost access to jaguar. We think the remaining issue was an application problem, not ESMF. Neither he nor we can further debug this, so we will close this ticket.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-02-15 23:34:26",
        "slug": "ca7d",
        "subject": "#109 ESMF 2.2.2rp2 on Cray XT4 (jaguar) new Compute Node CNL"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-02-15 23:34:27",
        "slug": "8668",
        "subject": "#109 ESMF 2.2.2rp2 on Cray XT4 (jaguar) new Compute Node CNL"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-02-15 23:34:27",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30db2718463761fbf6db",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/5c6cc55d/",
  "ticket_num": 109,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2007-11-08 21:07:07"
},{
  "status": "closed",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "\r\nIn particular, the Grid get data pointer calls also include\r\nbound information. This would be good to also add to \r\nthe equivalent Field calls. ",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "Standardize Field Get calls with Grid Get calls",
  "discussion_thread": {
    "_id": "32f3a9a0",
    "posts": [
      {
        "text": "",
        "attachments": [
          {
            "url": "http://sourceforge.net/p/esmf/feature-requests/_discuss/thread/32f3a9a0/08f9/attachment/field_get_test.F90",
            "bytes": 6689
          }
        ],
        "author": "feiliu",
        "timestamp": "2008-01-04 19:28:51",
        "slug": "08f9",
        "subject": "#110 Standardize Field Get calls with Grid Get calls"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1901029\nOriginator: NO\n\nFieldGetDataPtr from FieldGetMod now fully supports requested behavior\r\n/cvsroot/esmf/esmf/src/Infrastructure/Field/src/ESMF\\_FieldGet.cppF90,v1.6\r\n/cvsroot/esmf/esmf/src/Infrastructure/Field/src/ESMF\\_FieldGetMacros.h,v1.17\nFile Added: field\\_get\\_test.F90",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2008-01-04 19:28:51",
        "slug": "72f2",
        "subject": "#110 Standardize Field Get calls with Grid Get calls"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2008-01-04 19:28:51",
        "slug": "f896",
        "subject": "#110 Standardize Field Get calls with Grid Get calls"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2008-02-15 16:42:58",
        "slug": "8f73",
        "subject": "#110 Standardize Field Get calls with Grid Get calls"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1901029\nOriginator: NO\n\nESMF\\_FieldGet \\(methods: ESMF\\_FieldGetDataPtr and ESMF\\_FieldGetDataBounds\\) now support retrieval of bounds and counts information of the internal Array and Grid.\r\n\r\nChange status to pending.",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2008-04-14 20:24:50",
        "slug": "5401",
        "subject": "#110 Standardize Field Get calls with Grid Get calls"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2008-04-14 20:24:50",
        "slug": "ca8b",
        "subject": "#110 Standardize Field Get calls with Grid Get calls"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-01-16 18:13:54",
        "slug": "737b",
        "subject": "#110 Standardize Field Get calls with Grid Get calls"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-01-16 18:13:54",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30dd2718463761fbf6fb",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/32f3a9a0/",
  "ticket_num": 110,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-11-20 21:34:04"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "WHO: Rebecca.Matichuk@noaa.gov\r\nMODEL: CAM\r\n\r\nHello-\r\n\r\nI'm trying to build CAM but having problems building the ESMF files properly within CAM. I'm building CAM on a Tiger-64 bit Intel Mac using gcc \\(version 4.0.1\\) and intel fortran \\(version 10.0\\) compilers. I have attached my MAKE.out file generated by CAM to show you the errors that I'm receiving. I have also attached my make file to provide you with more information. The following environment variables have also be set before building CAM:\r\n\r\nENV Variables:\r\nexport CAM\\_RES=10x15\r\nexport CAM\\_C\\_COMPILER=gcc\r\nexport CAM\\_F\\_COMPILER=ifort\r\nexport CAM\\_RUN=test\\_cam\r\nexport CAM\\_MODEL=CPU\r\nexport CAM\\_CONFIGURE\\_OPTS='-pergro'\r\n\r\nI would greatly appreciate your help. Please let me know if you would like more information.\r\n\r\nThank you,\r\nRebecca Matichuk\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)",
  "discussion_thread": {
    "_id": "e49998ec",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\n\r\nWe expect this to work on versions 3.1.1 and later but we haven't had a chance to test it.\r\nThis ticket can be closed when the user is able to run successfully \r\nand we can also say that the current version of the software works on the 64 bit platform.\r\n\r\n\\-- Cecelia\r\n\r\n",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 16:59:31",
        "slug": "40fe",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "- **summary**: Build issue with CAM --> Port to Mac Intel 64 bit\n- **milestone**: 367128 --> \n- **labels**: 509038 --> Build/Install",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 16:59:31",
        "slug": "2095",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 17:00:22",
        "slug": "e9e6",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "- **summary**: Port to Mac Intel 64 bit --> Port to Mac Intel 64 bit (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:04:46",
        "slug": "85bd",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "- **summary**: Port to Mac Intel 64 bit (2) --> LONG: Port to Mac Intel 64 bit (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:08:10",
        "slug": "55b3",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: YES\n\nfyi, \r\n\r\ncomment from rebecca:\r\n\r\nHi Sylvia-\r\n\r\nI just want to let you know that we resolved my issue by re-building the libraries and CAM with the Intel Fortran compiler \\(version 10.0\\) as a 32-bit system instead of 64-bit system. I guess the Intel MAC is not completely a 64-bit system.\r\n\r\nRebecca\r\n",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-01-18 20:32:27",
        "slug": "1c98",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 21:40:37",
        "slug": "51be",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "- **summary**: LONG: Port to Mac Intel 64 bit (2) --> LONG: Port CAM to Intel Mac 64 bit w/ Intel F and gcc (2)",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-08-01 15:26:46",
        "slug": "9731",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "- **assigned_to**: svasquez --> oehmke",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2008-08-01 16:07:32",
        "slug": "bfd2",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "- **summary**: LONG: Port CAM to Intel Mac 64 bit w/ Intel F and gcc (2) --> LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-05 15:47:19",
        "slug": "047c",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "Not being able to run on 64 bit is a system limitation.  The user seems fine, so this ticket is being closed. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:34:59",
        "slug": "1ac9",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "- **assigned_to**: oehmke --> svasquez\n- **status**: open --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:34:59",
        "slug": "bc33",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "Not being able to run on 64 bit is a system limitation.  The user seems fine, so this ticket is being closed. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:35:17",
        "slug": "f4e1",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "Not being able to run on 64 bit is a system limitation.  The user seems fine, so this ticket is being closed. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:36:51",
        "slug": "b55d",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "Not being able to run on 64 bit is a system limitation.  The user seems fine, so this ticket is being closed. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:37:21",
        "slug": "7f78",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      },
      {
        "text": "Not being able to run on 64 bit is a system limitation.  The user seems fine, so this ticket is being closed. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:38:18",
        "slug": "8fd7",
        "subject": "#111 LONG: Port to Intel Mac 64 bit w/ Intel F and gcc (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-03-06 18:34:59",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30de2718463761fbf72a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e49998ec/",
  "ticket_num": 111,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2007-11-21 16:18:28"
},{
  "status": "closed",
  "reported_by_id": "5123f7a234309d566cb6aaf5",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "dneckels",
  "description": "I would like to open a support request so that esmf will have:\r\n\r\n1\\) Parallel build \\(i.e. gmake -j 10 should fire off 10 processes to build ESMF simultaneously\\).\r\n2\\) Full incremental build \\(for both C++ and F90\\).\r\n\r\nIn my opinion \\(which doesn't have to be listened to, of course\\) it is nearly impossible to do meaningful work in ESMF without these things.\r\n\r\n-DN :\\)",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "LONG: Parallel/incremental Build (12)",
  "discussion_thread": {
    "_id": "a8747648",
    "posts": [
      {
        "text": "- **labels**: 509038 --> Build/Install",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-12 19:51:15",
        "slug": "e1d7",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-12 19:51:31",
        "slug": "441f",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      },
      {
        "text": "- **priority**: 6 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-12 19:51:44",
        "slug": "3ff6",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      },
      {
        "text": "- **summary**: Parallel/incremental Build --> LONG: Parallel/incremental Build (12)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:04:14",
        "slug": "cd30",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nTim Campbell contributed modifications to allow this to work.  Need documentation in the Developers Manual.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-05 15:46:25",
        "slug": "7979",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      },
      {
        "text": "- **assigned_to**: nobody --> w6ws",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-05 15:46:25",
        "slug": "1576",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      },
      {
        "text": "Also need documentation of the new ESMF\\_DEFER\\_LIB\\_BUILD environment variable in the User's Guide.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-09-08 19:54:30",
        "slug": "3fd3",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      },
      {
        "text": "Documentation has been added to the Users Guide for Tim Campbells mods.\r\nThese detail both the ESMF\\_DEFER\\_LIB\\_BUILD environment variable, and the\r\nuse of -j when invoking gmake.\r\n\r\nBoth Tim Campbell and Gerhard have reviewed the documentation, and\r\ntheir corrections have been incorporated.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-23 19:36:48",
        "slug": "af83",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-23 19:36:48",
        "slug": "730e",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      },
      {
        "text": "Documentation has been added to the Users Guide for Tim Campbells mods.\r\nThese detail both the ESMF\\_DEFER\\_LIB\\_BUILD environment variable, and the\r\nuse of -j when invoking gmake.\r\n\r\nBoth Tim Campbell and Gerhard have reviewed the documentation, and\r\ntheir corrections have been incorporated.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-23 19:55:54",
        "slug": "fcef",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      },
      {
        "text": "Both Tim Campbell and Gerhard have made final reviews of the documentation and are happy with it.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-25 19:00:07",
        "slug": "29f8",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-25 19:00:07",
        "slug": "bb9a",
        "subject": "#112 LONG: Parallel/incremental Build (12)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-25 19:00:07",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30e12718463761fbf781",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a8747648/",
  "ticket_num": 112,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-12-05 20:46:48"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Hernan Arango/ROMS\r\n\r\nHernan wanted a way to store attribute information with his Arrays.  \r\n\r\n\\- Cecelia\r\n\r\n",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "Add Attribute metadata to Arrays (2)",
  "discussion_thread": {
    "_id": "f9b4b1d8",
    "posts": [
      {
        "text": "- **summary**: Add Attribute metadata to Arrays --> Add Attribute metadata to Arrays (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-12 20:17:54",
        "slug": "9c59",
        "subject": "#113 Add Attribute metadata to Arrays (2)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-07-18 20:21:51",
        "slug": "34b8",
        "subject": "#113 Add Attribute metadata to Arrays (2)"
      },
      {
        "text": "Close on 10/22/08 per Hernan's approval.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-10-22 20:35:03",
        "slug": "f89b",
        "subject": "#113 Add Attribute metadata to Arrays (2)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-10-22 20:35:03",
        "slug": "f14f",
        "subject": "#113 Add Attribute metadata to Arrays (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-10-22 20:35:03",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30e42718463761fbf7c5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f9b4b1d8/",
  "ticket_num": 113,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-12-12 20:17:39"
},{
  "status": "pending",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Hernan Arango/ROMS\r\n\r\nHernan wants a way to call an ASMM from a participating component in a coupling, not from a coupler.\r\n\r\n\\-- Cecelia",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: ASMM across mutually exclusive contexts (3)",
  "discussion_thread": {
    "_id": "b14dfb87",
    "posts": [
      {
        "text": "- **summary**: ASMM across mutually exclusive contexts --> LONG: ASMM across mutually exclusive contexts (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-01-18 18:03:21",
        "slug": "5d5c",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nThis feature has been stable on the trunk with 311bs08 and on the 310branch with ESMF\\_3\\_1\\_0p1. We had a telecon with Hernan and Rich about the feature in Feb. 2008 and a JST call in Apr. 2008. The feature is scheduled to be released with 310r. I am leaving this ticket pending until 310r is out to remind me to send a note about it to Hernan then and see if he has started using this feature.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-04-11 21:29:09",
        "slug": "2845",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-04-11 21:29:09",
        "slug": "c383",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nInformed Hernan that this feature is now part of a public release \\(310r\\).\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-05-23 17:19:01",
        "slug": "20ce",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-05-23 17:19:02",
        "slug": "cab3",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nHernan has not yet tested the direct coupling feature. Keep this ticket pending as a reminder to touch base with him periodically.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-05-23 18:40:57",
        "slug": "9eef",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "- **priority**: 9 --> 3\n- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-05-23 18:40:57",
        "slug": "417b",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 365 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2009-05-24 02:20:13",
        "slug": "fad9",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2009-05-24 02:20:13",
        "slug": "a7b2",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "back to pending - sf-robot has no clue,\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-05-26 17:23:24",
        "slug": "bef7",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-05-26 17:23:24",
        "slug": "7b54",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "- **priority**: 3 --> 7",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-03-17 16:35:30",
        "slug": "d61b",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "Ping to Hernan went out on 03/17/2011.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-05-02 23:01:15",
        "slug": "312a",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-05-02 23:01:15",
        "slug": "22ca",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 730 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2011-05-26 18:20:03",
        "slug": "4fff",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2011-05-26 18:20:03",
        "slug": "6703",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "Changing Status back to pending. Closed by sf-robot.",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2011-05-26 18:32:05",
        "slug": "1199",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2011-05-26 18:32:06",
        "slug": "845d",
        "subject": "#114 LONG: ASMM across mutually exclusive contexts (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-05-26 18:32:06",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30e52718463761fbf7e1",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b14dfb87/",
  "ticket_num": 114,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2007-12-12 20:23:29"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Who:  Jim Colbert \\(PICES NUMERO\\) Jim.Colbert@oregonstate.edu \r\n\r\n\r\nconsider adding options\r\n\"usedAttributes\" and \"countAttributes\" so a user can see or confirm which of the inputs were processed OK.  The \"usedAttributes\" would provide the labels where data were loaded without errors and the \"countAttributes\" would provide the number of records processed without\r\nerrors.\r\n\r\n\r\n\r\nThere is only one option presently in ConfigValidate and that prints out unused attributes.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "labels": [
    "Config"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "Add options to ESMF_ConfigValidate (?)",
  "discussion_thread": {
    "_id": "17800b02",
    "posts": [
      {
        "text": "- **summary**: Add options to ESMF_ConfigValidate  --> Add options to ESMF_ConfigValidate ?",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-01-18 18:02:24",
        "slug": "5dfc",
        "subject": "#115 Add options to ESMF_ConfigValidate (?)"
      },
      {
        "text": "- **summary**: Add options to ESMF_ConfigValidate ? --> Add options to ESMF_ConfigValidate (?)",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-01-18 18:03:58",
        "slug": "6929",
        "subject": "#115 Add options to ESMF_ConfigValidate (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 18:03:58",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30ea2718463761fbf843",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/17800b02/",
  "ticket_num": 115,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-01-17 19:58:00"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Who: Jim Colbert \\(PICES NUMERO\\)\r\nJim.Colbert@oregonstate.edu \r\n\r\n\r\nPresently, when you use ESMF\\_ConfigLoad\\(\\) in a sequential manner, it overwrite the previous Config instead of appending to it. \r\n\r\nTherefore, an append type function is desired.\r\n\r\n",
  "labels": [
    "Config"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "Create a ESMF_ConfigAppendFile method (?)",
  "discussion_thread": {
    "_id": "7a286a01",
    "posts": [
      {
        "text": "- **summary**: Create a ESMF_ConfigAppendFile method --> Create a ESMF_ConfigAppendFile method (?)",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-01-18 18:04:42",
        "slug": "4e6b",
        "subject": "#116 Create a ESMF_ConfigAppendFile method (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-01-18 18:04:42",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30eb2718463761fbf854",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7a286a01/",
  "ticket_num": 116,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-01-17 20:00:42"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Jeff Spaleta from the University of Alaska\r\n\r\n\r\nGood Alaskan Afternoon\\!\r\n\r\nFirst let me introduce myself, I am Dr. Jef Spaleta, a PostDoc in the SuperDARN group here at UAF and elected member of the Fedora Linux Project Board.\r\n\r\nIt's my association with the Fedora Project that I am writing to you about.  According the the sourceforge page, the ESMF codebase is GPL licensed, and as such it could be included in the set of software packages that are built as part of the Fedora project.  Would you be\r\ninterested in seeing ESMF to be distributed as part of linux distributions?  I can't volunteer to maintain this software as part of Fedora, but if you are interested in attempting to do that as part of ESMF development and distribution, I could certainly help someone from the ESMF core development group work directly inside the Fedora project and get these things packaged as part of Fedora releases. Considering the scope of ESMF I'm sure there might be some technical\r\nissues that need to be worked out getting the ESMF codebase to compile cleanly on Fedora without using a proprietary toolchain like intel's compiler.  But the benefits to having it distributed as part of a community built linux distribution might be worth the effort.  Once ESMF is packaged as part of Fedora, we can even look into building a customized Fedora spin for ESMF and associated open tools.   ESMF might also make a good fit in the EPEL subproject, if people are using ESMF on RHEL or Centos.\r\n\r\nIf you are interested in continuing to discuss any of these ideas, feel free to write back to me. Or if I need to present these ideas to a specific ESMF forum for wider discussion, please point me to the correct direction.\r\n\r\n-jef",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "LONG: Fedora core implementation (?)",
  "discussion_thread": {
    "_id": "0c69b810",
    "posts": [
      {
        "text": "- **assigned_to**: murphysj --> cdeluca",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-01-29 16:48:21",
        "slug": "8e89",
        "subject": "#117 LONG: Fedora core implementation (?)"
      },
      {
        "text": "- **labels**: 588640 --> \n- **summary**: ESMF questions --> LONG: Fedora core implementation (?)\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-02-08 18:05:22",
        "slug": "4e01",
        "subject": "#117 LONG: Fedora core implementation (?)"
      },
      {
        "text": "- **labels**:  --> Build/Install\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-02-08 18:05:58",
        "slug": "e8c7",
        "subject": "#117 LONG: Fedora core implementation (?)"
      },
      {
        "text": "- **assigned_to**: cdeluca --> w6ws",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-08-03 17:09:13",
        "slug": "d6eb",
        "subject": "#117 LONG: Fedora core implementation (?)"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 15:10:36",
        "slug": "dc34",
        "subject": "#117 LONG: Fedora core implementation (?)"
      },
      {
        "text": "- **assigned_to**: w6ws --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 17:36:01",
        "slug": "5f49",
        "subject": "#117 LONG: Fedora core implementation (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:36:01",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30ec2718463761fbf860",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0c69b810/",
  "ticket_num": 117,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-01-29 15:48:59"
},{
  "status": "closed",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "I am quoting from a long email I sent on this topic to core below. This ticket may end up as a Vendor Bug, but until we have done some more investigation it is not 100% clear that this isn't an ESMF code issue.\r\n\r\nThere is also a Vendor Bug \\(\\#1882921\\) open that deals with the fact that the latest GCC 4.3-20080125 snapshot results in an ICE when trying to compile ESMF F90 sources. This is a separate issue.\r\n\r\nFinally there is a ticket open with Tom Wainwright \\(\\#1622480\\), who is a potential Linux.gfortran.default user on x86\\_64.\r\n\r\n\\*gjt\\*\r\n\r\nHi All,\r\n\r\nI've put some time into sorting out what is going on with gfortran and ESMF on ia32, ia64 and x86\\_64. This relates to what Tom Wainwright has reported in ticket \\#1622480 and I will send him an update later, but first I wanted to bring this up on core.\r\n\r\nThe gfortran topic also relates to the Fedora ticket \\#1882093 that came in this morning because it will require ESMF to work with the GCC tools, i.e. gfortran.\r\n\r\nFirst off, Linux.gfortran.default is \\_not\\_ one of our currently supported platforms, neither for any of the 2.2.2r releases nor for any of the 3-series releases, including 3.1.0. However, I had added the Linux.gfortran.default configuration a while back and had verified that I could at least compile ESMF with it on my ia32 box.\r\n\r\nAfter Tom's interest in using this configuration on an x86\\_64 system I cleaned up around the MACHINE/ABI settings in Linux.gfortran.default and verified that it will build the ESMF lib in these modes: ia32, ia64, x86\\_64\\_32, x86\\_64\\_small, x86\\_64\\_medium.\r\n\r\nOn x86\\_64 I was able to reproduce the failures Tom reported in all three modes. The ia64 build \\(on columbia\\) also reported exactly the same issues.\r\n\r\nI went ahead and merged the cleaned-up Linux.gfortran.default configuration into the 310branch and tested again, finding that there are less issues because the old Grid code had been removed. However, still some tests and examples are crashing with SEGV in places that seem to use dummy args of type character\\(len=\\*\\), optional.\r\n\r\nFinally I did try out the latest GCC 3.4 snapshot \\(20080125\\), but could not build ESMF at all because gfortran of that snapshot crashes with an internal compiler error on ESMF files.\r\n\r\nRight now it looks to me like a gfortran bug, that seems more sever on 64-bit platforms. Hopefully the new GCC release will give us a gfortran compiler that can handle the stuff we do in ESMF, but the initial snapshot test doesn't look good. :-\\(\r\n\r\nJust wanted to put this out here in case anybody wanted to know and/or had further ideas. I will wrap up the Linux.gfortran.default work for 222rp3 and move on...\r\n\r\n-Gerhard\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "GFORTRAN: Crashes for Linux.gfortran.default",
  "discussion_thread": {
    "_id": "02fb5073",
    "posts": [
      {
        "text": "- **labels**: 473027 --> 904970\n- **milestone**: 166455 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-18 21:22:35",
        "slug": "0f72",
        "subject": "#118 GFORTRAN: Crashes for Linux.gfortran.default"
      },
      {
        "text": "- **summary**: UTest, Ex, STest crashes for Linux.gfortran.default --> GFORTRAN: Crashes for Linux.gfortran.default\n- **milestone**:  --> Port to New Platform\n- **labels**: 904970 --> Build/Install",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-20 19:04:15",
        "slug": "26a6",
        "subject": "#118 GFORTRAN: Crashes for Linux.gfortran.default"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nGfortran is now supported as of 3.1.0r.  There were a couple of issues causing the problems Gerhard is mentioning.  One had to do with a mismatch between pointer size definitions in ESMF.  Others are dependent on gfortran compiler version.  Due to compiler problems, ESMF requires gfortran 4.3 \\(or later\\) in order to work.\r\n\r\nIn particular, with gfortran 4.1.0, the compiler aborts with an internal compiler error \\(ICE\\).  With 4.1.2 and 4.2, the ICE is no longer seen, but several unit and system tests fail.  These tests are legal and correct, but the older gfortrans have problems.  All seems to be fixed with 4.3.\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-01 18:52:32",
        "slug": "652d",
        "subject": "#118 GFORTRAN: Crashes for Linux.gfortran.default"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-01 18:52:32",
        "slug": "1b7f",
        "subject": "#118 GFORTRAN: Crashes for Linux.gfortran.default"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: YES\n\nI am closing this ticket that I opened. I have verified that the HEAD of the 310branch builds and runs 100% clean for Linux.gfortran.default on my system with GCC-4.3.1 \\(compiled from source\\) and OpenMPI 1.5.2 \\(compiled from source\\).\r\n-Gerhard",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-10 22:07:19",
        "slug": "e804",
        "subject": "#118 GFORTRAN: Crashes for Linux.gfortran.default"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-10 22:07:19",
        "slug": "7bbf",
        "subject": "#118 GFORTRAN: Crashes for Linux.gfortran.default"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-10 22:07:19",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30ed2718463761fbf885",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/02fb5073/",
  "ticket_num": 118,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2008-01-30 19:57:24"
},{
  "status": "pending",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Ghee Fry from HAF\r\n\r\n\r\nBob,\r\n\r\nYes Vince and I plan to have HAF and GAIM running under the space weather app SWMS as ESMF components at compliance level 4 by the Alpha1 build. We are using \\(at least calling\\) the ESMF\\_Config, ESMF\\_Log, ESMF\\_Time and ESMF\\_Clock infrastructure but won't know the depth of use until our build at the end of the month.\r\n\r\nI'm attaching the list of time conversion functions used in HAFv2. The Carrington calendars are probably the only uniquely space weather related functions, but they call some of the others. At some point downstream, we plan to use ESMF's julian day instead of ours. We use Modified Julian Date which is defined as MJD = JD - 2400000.5. I didn't dig into the manual deep enough to see if MJD is implemented yet in ESMF but that's no big deal, I guess.\r\n\r\nI hope that helps,\r\n\r\nGhee",
  "labels": [
    "Time Manager"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Implementation of Modified Julian Date Calendar",
  "discussion_thread": {
    "_id": "21d2dbf2",
    "posts": [
      {
        "text": "- **summary**: implementation of Carrington Calendar --> Implementation of Modified Julian Date Calendar",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2008-02-05 18:03:41",
        "slug": "1506",
        "subject": "#119 Implementation of Modified Julian Date Calendar"
      },
      {
        "text": "- **assigned_to**: oehmke --> eschwab",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-07-15 23:06:32",
        "slug": "3577",
        "subject": "#119 Implementation of Modified Julian Date Calendar"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-09-05 16:16:21",
        "slug": "5d05",
        "subject": "#119 Implementation of Modified Julian Date Calendar"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-16 01:59:50",
        "slug": "3f1e",
        "subject": "#119 Implementation of Modified Julian Date Calendar"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-09-22 17:57:12",
        "slug": "55d8",
        "subject": "#119 Implementation of Modified Julian Date Calendar"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 730 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2010-09-23 02:20:05",
        "slug": "145a",
        "subject": "#119 Implementation of Modified Julian Date Calendar"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2010-09-23 02:20:05",
        "slug": "9cfb",
        "subject": "#119 Implementation of Modified Julian Date Calendar"
      },
      {
        "text": "Reset to pending; still needs verification of Ghee Fry, et. al.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-09-23 02:28:59",
        "slug": "77bf",
        "subject": "#119 Implementation of Modified Julian Date Calendar"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-09-23 02:28:59",
        "slug": "e07c",
        "subject": "#119 Implementation of Modified Julian Date Calendar"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-09-23 02:28:59",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30ee2718463761fbf8ab",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/21d2dbf2/",
  "ticket_num": 119,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-02-05 17:25:07"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  Cecelia\r\n\r\nFor consistency and help with Fields created from slices of native arrays.",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Copyflag for Array",
  "discussion_thread": {
    "_id": "03174271",
    "posts": [
      {
        "text": "- **labels**: 643206 --> Array - New\n- **milestone**: 287654 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-02-06 21:26:13",
        "slug": "97f2",
        "subject": "#120 Copyflag for Array"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nImplemented and added appropriate tests to ESMF\\_ArrayDataUTest.F90 and ESMF\\_BundleCreateGetUTest.F90\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-03-25 00:39:35",
        "slug": "b575",
        "subject": "#120 Copyflag for Array"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-03-25 00:39:35",
        "slug": "a735",
        "subject": "#120 Copyflag for Array"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\ndone\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-18 21:02:56",
        "slug": "730f",
        "subject": "#120 Copyflag for Array"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-18 21:02:56",
        "slug": "065a",
        "subject": "#120 Copyflag for Array"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-18 21:02:56",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30f12718463761fbf8e2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/03174271/",
  "ticket_num": 120,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-02-06 21:25:44"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Shujia Zhou from NASA\r\n\r\n\r\nHi,\r\n\r\nLocation stream can be a good way to support subgrid physics such as land. So we would like to request the location stream capability fully integrate into ESMF \\(ESMF State, coupler, regrid, etc\\).\r\n\r\n\r\n\r\nShujia\r\n",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "location stream in ESMF",
  "discussion_thread": {
    "_id": "74ab5841",
    "posts": [
      {
        "text": "- **labels**: 880647 --> Multiple Categories\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-12 17:48:16",
        "slug": "1d84",
        "subject": "#121 location stream in ESMF"
      },
      {
        "text": "- **assigned_to**: cdeluca --> oehmke",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-05 15:43:20",
        "slug": "484f",
        "subject": "#121 location stream in ESMF"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:37:57",
        "slug": "f11a",
        "subject": "#121 location stream in ESMF"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-09-09 17:14:19",
        "slug": "2c35",
        "subject": "#121 location stream in ESMF"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 15:08:06",
        "slug": "fc9f",
        "subject": "#121 location stream in ESMF"
      },
      {
        "text": "Make sure Shujia knows that location streams are where they are. Add note to location stream regrid ticket pointing to this one. Then close this one. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:21:29",
        "slug": "43dd",
        "subject": "#121 location stream in ESMF"
      },
      {
        "text": "- **priority**: 9 --> 7",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:21:29",
        "slug": "e8b3",
        "subject": "#121 location stream in ESMF"
      },
      {
        "text": "Done except for regridding. This is covered in 2919673.",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-15 20:10:09",
        "slug": "c6d0",
        "subject": "#121 location stream in ESMF"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-15 20:10:09",
        "slug": "c303",
        "subject": "#121 location stream in ESMF"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-15 20:10:09",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30f32718463761fbf902",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/74ab5841/",
  "ticket_num": 121,
  "custom_fields": {
    "_priority": "7"
  },
  "created_date": "2008-02-14 16:29:15"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "esmf distro can contain a md5sum file of source files and user can verify if the esmf source has been tempered by validation against the md5sum file.",
  "labels": [
    "General Documentation"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "Checksum for version of esmf library",
  "discussion_thread": {
    "_id": "88ace103",
    "posts": [
      {
        "text": "- **labels**:  --> General Documentation",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-03-20 18:22:46",
        "slug": "eb0c",
        "subject": "#122 Checksum for version of esmf library"
      },
      {
        "text": "- **summary**: Verify version of esmf library --> Checksum for version of esmf library",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-05 15:32:41",
        "slug": "33a3",
        "subject": "#122 Checksum for version of esmf library"
      },
      {
        "text": "From: Silverio Vasquez",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2009-11-30 16:55:39",
        "slug": "89a2",
        "subject": "#122 Checksum for version of esmf library"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-05 15:32:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30f52718463761fbf937",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/88ace103/",
  "ticket_num": 122,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-02-15 17:24:58"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "\r\nIt can be difficult for a user to calculate the size an array\r\nshould be allocated to be used in FieldCreateFromDataPointer, \r\nGridAllocCoordFromDataPointer, etc. We should provide\r\na subroutine that does this calculation for them. ",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Add allocation bounds calculation for Grid",
  "discussion_thread": {
    "_id": "b195f107",
    "posts": [
      {
        "text": "- **labels**: 473027 --> Multiple Categories\n- **milestone**: 287654 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-05 17:41:33",
        "slug": "84ff",
        "subject": "#123 Add allocation bounds calculation for Grid"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-09-09 17:11:53",
        "slug": "1b6d",
        "subject": "#123 Add allocation bounds calculation for Grid"
      },
      {
        "text": "Fields has been done. Grid needs to be done when you can create coordinate or items from a Fortran pointer. \\(Maybe LocStream also...\\)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 17:28:08",
        "slug": "72b7",
        "subject": "#123 Add allocation bounds calculation for Grid"
      },
      {
        "text": "- **summary**: Add allocation bounds calculation for Field and Grid --> Add allocation bounds calculation for Grid",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 17:28:08",
        "slug": "15ad",
        "subject": "#123 Add allocation bounds calculation for Grid"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:28:08",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30f62718463761fbf94e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b195f107/",
  "ticket_num": 123,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-03-06 18:27:24"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Wainwright from NOAA\r\n\r\nHi,\r\n\r\nThis is nothing that needs a response, just a build note for future reference.\r\n\r\nIn order to build the use\\_test\\_cases in 3\\_1\\_0p1 under Linux.g95.default, I had\r\nto add the following line to build\\_config/Linux.g95.default/build\\_rules.mk:\r\n\r\nESMF\\_F90LINKLIBS     += -lnetcdff\r\n\r\nNOTE the second 'f' at the end of the library name.  This may be specific to my\r\nlocal netcdf installation, but the C and Fortran interfaces are in separate\r\nlibrary archives \\(libnetcdf.a and libnecdff.a\\), and both are needed.\r\n\r\n\\(I also tracked down and had to set the following:\r\n\r\nexport ESMF\\_FORTRANSYMBOLS=lowercase\\_singleunderscore\r\n\r\nbut I know that is site-specific.\\)\r\n\r\nThanks for your continued support\\!\r\n\r\n\\-- \r\nTom Wainwright\r\nNOAA Northwest Fisheries Science Center\r\nNewport, Oregon\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "netcdf link options in ESMF 3_1_0p1",
  "discussion_thread": {
    "_id": "baf70f77",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2008-03-20 18:09:24",
        "slug": "9245",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nThe issue is that NETCDF splits the C and Fortran parts of the API into two separate shared objects when compiled in shared object mode, as opposed to a single static archive. In shared mode the Fortran API is in libnetcdff.so\r\n\r\n\\- Pointed out to Tom that for now he can set environment variable ESMF\\_F90LINKLIBS=-lnetcdff\r\n\\- In the long run we may want to add a new ESMF\\_ environment variable like ESMF\\_NETCDF\\_SHARED that can be set to YES/NO. If set to NO we use -lnetcdf, if set to YES we will set \"-lnetcdf -lnetcdff\".\r\n\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-03-24 17:15:16",
        "slug": "4396",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      },
      {
        "text": "- **summary**: netcdf in g95 build of version 3_1_0p1 --> netcdf link options in ESMF 3_1_0p1",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-03-24 17:15:16",
        "slug": "8067",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      },
      {
        "text": "- **milestone**: 495011 --> \n- **labels**: 509038 --> Build/Install",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-04-11 17:24:33",
        "slug": "91ea",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nAdd to the 3rd party library section in the User Guide, noting that some systems have split the Fortran and C bindings into two separate libraries.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-05 15:35:43",
        "slug": "7bbe",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      },
      {
        "text": "- **assigned_to**: theurich --> w6ws",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-05 15:35:43",
        "slug": "0164",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      },
      {
        "text": "An addition to the Users Guide has been committed to document how to use multiple \\(e.g., seperate Fortran and C\\) libraries.  Awaiting a tagged version of the documentation before contacting Tom Wainwright.\r\n\r\nWalter",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-15 23:51:32",
        "slug": "8ed9",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      },
      {
        "text": "An addition to the Users Guide has been committed to document how to use multiple \\(e.g., seperate Fortran and C\\) libraries.  Awaiting a tagged version of the documentation before contacting Tom Wainwright.\r\n\r\nWalter",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-16 00:11:47",
        "slug": "217c",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      },
      {
        "text": "Tom has now reviewed the documentation on 9/19 and was happy with it.\r\n\r\nWalter",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-19 19:58:37",
        "slug": "3249",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-19 19:58:38",
        "slug": "056a",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      },
      {
        "text": "Additional changes of Gerhards and my own were added, including some regularization of font usage.  Everyone is happy with it.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-25 18:58:45",
        "slug": "c192",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-25 18:58:45",
        "slug": "42f7",
        "subject": "#124 netcdf link options in ESMF 3_1_0p1"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-25 18:58:45",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30f72718463761fbf96a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/baf70f77/",
  "ticket_num": 124,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-03-07 15:51:25"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Sujay Kumar from NASA\r\n\r\n\r\nHi Bob, \r\nJust wondering if you have any plans to support variable argument lists for the ESMF\\_LogErr implementation? currently only character strings are supported in the ESMF\\_LogWrite subroutine.. It will be nice to have the ability to mix variables of different datatypes.. \r\n\r\n-Sujay\r\n\r\n\\------------------------------------\r\nSujay Kumar, Ph.D\r\nCode 614.3, NASA GSFC\r\nGreenbelt, MD 20771\r\nEmail: Sujay.V.Kumar@nasa.gov\r\nWeb:http://neptune.gsfc.nasa.gov/hsb/?skumar\r\nPh: 301-286-8663, Fax: 301-286-8624\r\n\\------------------------------------",
  "labels": [
    "LogErr"
  ],
  "assigned_to": "cdeluca",
  "assigned_to_id": "4f568833b9363c6a5a000769",
  "private": false,
  "summary": "variable arguments for Log?",
  "discussion_thread": {
    "_id": "1508d903",
    "posts": [
      {
        "text": "- **labels**: 657426 --> LogErr\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2008-03-07 22:51:03",
        "slug": "6fd2",
        "subject": "#125 variable arguments for Log?"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2008-03-07 22:52:05",
        "slug": "5bdc",
        "subject": "#125 variable arguments for Log?"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-03-20 16:16:21",
        "slug": "d58c",
        "subject": "#125 variable arguments for Log?"
      },
      {
        "text": "- **assigned_to**: oehmke --> cdeluca",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 20:49:26",
        "slug": "8018",
        "subject": "#125 variable arguments for Log?"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-02-18 20:08:54",
        "slug": "9438",
        "subject": "#125 variable arguments for Log?"
      },
      {
        "text": "Decided that we weren't going to implement this in ESMF because there's a simple way to do in in Fortran \\(e.g. use write to build the string pass it to ESMF\\_LogWrite\\(\\). Told Sujay this. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-02-18 20:10:18",
        "slug": "ab2b",
        "subject": "#125 variable arguments for Log?"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-02-18 20:08:54",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30fa2718463761fbf9ae",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/1508d903/",
  "ticket_num": 125,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-03-07 22:44:52"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  Cecelia\r\n\r\nGeneric driver that will minimally call \r\ninit/run/final and perform basic component\r\nvalidity checks.",
  "labels": [
    "AppDriver"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Compliance-checker (8)",
  "discussion_thread": {
    "_id": "7c6d3bfd",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 15:14:35",
        "slug": "87de",
        "subject": "#126 LONG: Compliance-checker (8)"
      },
      {
        "text": "A compliance checker based on InterfaceComponents implemented in 5.1.0 for NUOPC.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 17:27:49",
        "slug": "d4ce",
        "subject": "#126 LONG: Compliance-checker (8)"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich\n- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 17:27:50",
        "slug": "e011",
        "subject": "#126 LONG: Compliance-checker (8)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:27:50",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30fb2718463761fbf9d4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7c6d3bfd/",
  "ticket_num": 126,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-03-10 18:22:38"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "We discussed this during the core meeting on 03/19/08:\r\n\r\nOn the ESMF side we have the initializer macros set up to guard against uninitialized ESMF objects. These macros will catch shallow class objects that are not correctly initialized \\(because of non-F95 conforming compilers\\) and initialize them automagically when first used. Further the macros will catch deep class objects that have never been created or were deleted and will log an error via LogErr and return a runtime error.\r\n\r\nOn the ESMCI side \\(the internal C/C++ implementation of may of our classes\\) there is no such guard in place. Any pointer that is not NULL will be accepted as being valid.\r\n\r\nAs we are starting to formulate and implement the ESMC API and glue code \\(i.e. the public pure C interface\\), the question of initializer macros came up. There are two aspects to this:\r\n\r\n1\\) When passing an ESMC object \\(or a pointer to an ESMCI object\\) to the ESMF side the ESMF guard code will flag that the object has not been initialized/created. This is because the ESMF side interprets the passed in object as the corresponding ESMF derived type that contains not only the pointer to the ESMCI side, but also the memory for the guard variable used by the init macros.\r\n\r\nIt is important to understand that this is actually a misinterpretation of the memory\\! The ESMC object does \\_not\\_ provide memory for the guard variable\\! Since it is not safe to make any assumptions about memory layout between the languages adding memory ad the end of the ESMC structure and using it from both ESMC and/or ESMF is not an option\\!\r\n\r\nThe clean solution to the indicate a valid ESMC object or pointer to ESMCI object when passed to the ESMF side is to add some code to the ESMCI/ESMF glue code. This code will need to make a copy of the brought in ESMC object \\(pointer to ESMCI object\\) into a temporary ESMF variable. The ESMF\\_INIT\\_SET\\_CREATED\\(\\) macro can then be used on the temporary variable before it is passed into the ESMF side.\r\n\r\n2\\) The procedure in \\#1 assumes that guarding against invalide ESMC/ESMCI objects is done in the ESMC/ESMCI layer. A call into the ESMCI/ESMF gluecode will only be issued after such guard code has been successfully passed. \r\n\r\nCurrently we do not have such guard code in the ESMC layer. The problem is actually very similar to the ESMF side, i.e. the members of a variable that is an ESMC structure cannot be initialized automatically at the variable definition. A guard variable and macro code similar to what we are using on the ESMF side will be needed for ESMC.\r\n\r\nWhile the solution of guarding against uninitialized objects on the ESMC and ESMF sides will be almost identical it is not safe to mix access across the language boundary\\! The mechanisms are to be considered ESMC/ESMF specific. The procedure outlined under \\#1 separates the two.\r\n\r\n\\*gjt\\*",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Guard against uninitialized ESMC objects (4)",
  "discussion_thread": {
    "_id": "96cea55f",
    "posts": [
      {
        "text": "- **summary**: Guard against uninitialized ESMC objects --> LONG: Guard against uninitialized ESMC objects (4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-03-20 18:20:26",
        "slug": "1426",
        "subject": "#127 LONG: Guard against uninitialized ESMC objects (4)"
      },
      {
        "text": "- **assigned_to**: nobody --> oehmke",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-03-20 18:20:44",
        "slug": "0fca",
        "subject": "#127 LONG: Guard against uninitialized ESMC objects (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-03-20 18:20:44",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30fc2718463761fbf9ea",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/96cea55f/",
  "ticket_num": 127,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2008-03-19 18:11:37"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Grey Nearing from U. of Arizona\r\n\r\n\r\nHi;\r\n\r\nSorry to bother,\r\nWondering if I could get suggestions; maybe you have seen this before.\r\n\r\nRan tests \\(make test\\) and got:\r\nFound 394 non-exhaustive single processor unit tests, 3 passed and 391 failed.\r\n\\[All seem to have failed reporting segmentation faults according to .stdio\\(s\\)\\]\r\n\r\n...\r\n\r\n0/18 system tests passed\r\n\\[Seg. faults as well\\].\r\n\r\nThen go to:\r\n/working/esmf/examples/examplesO/\\*gfortran.64.mpiuni\\*/make run\\_examples\\_uni\r\n\r\n17/23 examples pass\r\n\\[With those that do not reporting seg. faults.\\]\r\n\r\nAny help would be greatly appreciated.\r\n\r\n\r\nThanks,\r\n\r\n\r\nGrey Nearing\r\nU. of Arizona\r\nUSDA-ARS\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF",
  "discussion_thread": {
    "_id": "2bd785f3",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> theurich",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-04-01 22:20:51",
        "slug": "4a3c",
        "subject": "#128 GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF"
      },
      {
        "text": "- **assigned_to**: theurich --> svasquez",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-04-04 22:35:11",
        "slug": "09a3",
        "subject": "#128 GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF"
      },
      {
        "text": "- **assigned_to**: svasquez --> w6ws",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2008-04-09 23:05:20",
        "slug": "1a15",
        "subject": "#128 GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nPlease also note related support ticket \\#1892038, where Grey was attempting to build ESMF 2.2.2rp3 with gfortran.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-04-10 17:06:40",
        "slug": "0f01",
        "subject": "#128 GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF"
      },
      {
        "text": "- **summary**: Test failures with segmentation faults --> SEGV in tests for ESMF 2.2.2rp3 on Linux x86_64 gfortran",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-04-11 17:08:48",
        "slug": "bf8b",
        "subject": "#128 GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nGrey reported on 4/24 that he was using gfortran 4.1.2.  He is ow successfully using ESMF with the Absoft compiler instead.\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-04-24 19:06:46",
        "slug": "19a2",
        "subject": "#128 GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF"
      },
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 155253 --> \n- **summary**: SEGV in tests for ESMF 2.2.2rp3 on Linux x86_64 gfortran --> GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-20 19:02:33",
        "slug": "3fdb",
        "subject": "#128 GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nGrey was informed on 5/22/2008 that gfortran was now supported in 3.1.0r, and that we had fixed the bug causing x86\\_64 platforms to fail.\r\n\r\nSince nothing has been heard since then, a followup email was sent on 7/1/2008.\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-01 18:22:19",
        "slug": "2d65",
        "subject": "#128 GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nGrey was informed on 5/22/2008 that gfortran was now supported in 3.1.0r, and that we had fixed the bug causing x86\\_64 platforms to fail.\r\n\r\nSince nothing has been heard since then, a followup email was sent on 7/1/2008.\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-01 23:46:59",
        "slug": "5224",
        "subject": "#128 GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nGrey has reported that he has changed projects, so is no longer working on ESMF.  In light of the work we have recently done to bring gfortran into the supported status, we agreed to close this ticket.\r\n\r\nWalter\r\n\r\n\\-----------------\r\n\r\nSure thing, thanks a lot.\r\n\r\nQuoting Walter Spector &lt;wws@sgi.com&gt;:\r\n\r\n&gt; Hi Grey,\r\n&gt;\r\n&gt; Thanks for the update.  I think we should close the ticket, and if you \r\n&gt; have any more problems we can open a new one.  Sound good?\r\n&gt;\r\n&gt; Walter\r\n&gt;\r\n&gt; -----Original Message-----\r\n&gt; From: grey@email.arizona.edu \\[mailto:grey@email.arizona.edu\\]\r\n&gt; Sent: Tuesday, July 01, 2008 12:42 PM\r\n&gt; To: Walter Spector\r\n&gt; Subject: RE: \\[ esmf-Support Requests-1930578 \\] Test \r\n&gt; failureswithsegmentation faults\r\n&gt;\r\n&gt; Walter,\r\n&gt;\r\n&gt; I apologize for not getting back to you sooner.  I recently changed \r\n&gt; projects and everything from my old project kind of got put aside.  I \r\n&gt; have not tested the new ESMF compile with gfortran, although in the \r\n&gt; past I managed to get an absoft compile with minimal problems.  As far \r\n&gt; as I know the Absoft compile works fine to run NASA's Land Information \r\n&gt; System which we also had problems compiling with gfortran.  I do \r\n&gt; apologize for not responding earlier and for not having more input.  \r\n&gt; Thanks for your help.\r\n&gt;\r\n&gt; Grey\r\n&gt;\r\n&gt; Quoting Walter Spector &lt;wws@sgi.com&gt;:\r\n&gt;\r\n&gt;&gt; Hi Grey,\r\n&gt;&gt;\r\n&gt;&gt; We were wondering if you have had a chance to test ESMF with gfortran \r\n&gt;&gt; yet - so we can close this ticket?\r\n&gt;&gt;\r\n&gt;&gt; As of ESMF 3.1.0r, which was released a few weeks ago, gfortran is \r\n&gt;&gt; now\r\n&gt;\r\n&gt;&gt; a supported compiler on Linux platforms.  Please note that gfortran \r\n&gt;&gt; must be at the 4.3 level.  Several of our tests fail with earlier\r\n&gt; versions.\r\n&gt;&gt;\r\n&gt;&gt; Thanks,\r\n&gt;&gt;\r\n&gt;&gt; Walter Spector\r\n&gt;&gt; ESMF core developer\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-04 01:05:21",
        "slug": "c2bd",
        "subject": "#128 GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-04 01:05:21",
        "slug": "7411",
        "subject": "#128 GFORTRAN: ESMF 2.2.2rp3 on Linux x86_64 gfortranGF"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-04 01:05:21",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30fd2718463761fbf9fc",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/2bd785f3/",
  "ticket_num": 128,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-03-31 21:04:13"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Per the conversation on 4/4/08 with Cecelia and Silverio, we would like system test to print out with their results the date at which it was run, and what version of ESMF that was running.\r\n\r\nThis will enable us to eliminate an entire series of pages on the Web site for system test documentation.\r\n\r\n\r\n\r\nNote, there was no category for test in the pull down menu.  we may want to add one.\r\n\r\n\r\n",
  "labels": [
    "AppDriver"
  ],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "Print version from initialize",
  "discussion_thread": {
    "_id": "76414222",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nPrint the version by default in initialize so we have it everywhere.  Probably don't need the date. As per ticket meeting July 08.- Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 20:38:10",
        "slug": "9956",
        "subject": "#129 Print version from initialize"
      },
      {
        "text": "- **labels**:  --> AppDriver\n- **summary**: Enable System Test to Indicate Date and Version  --> Print version from initialize",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 20:38:10",
        "slug": "e85c",
        "subject": "#129 Print version from initialize"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2011-02-17 17:17:59",
        "slug": "d3e7",
        "subject": "#129 Print version from initialize"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:17:59",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d30ff2718463761fbfa3b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/76414222/",
  "ticket_num": 129,
  "custom_fields": {
    "_priority": "7",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-04-04 19:37:02"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  Cecelia\r\n\r\nAs we get more stuff in our contributions repo it would be useful to have a page that highlight contents and includes contacts and websites for the bigger contributions.",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "murphysj",
  "assigned_to_id": "4d794255b9363c57d70002fc",
  "private": false,
  "summary": "Webpage to highlight contributions repo",
  "discussion_thread": {
    "_id": "0716de28",
    "posts": [
      {
        "text": "- **labels**: 473027 --> Multiple Categories\n- **milestone**: 166456 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 18:30:17",
        "slug": "76be",
        "subject": "#130 Webpage to highlight contributions repo"
      },
      {
        "text": "- **milestone**:  --> Add Other Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 18:31:41",
        "slug": "fe28",
        "subject": "#130 Webpage to highlight contributions repo"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: YES\n\nSylvia put it together and I completed it.  Now under the Users tab as Contributed Code on the nav bar. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-08-09 00:10:23",
        "slug": "bcc0",
        "subject": "#130 Webpage to highlight contributions repo"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-08-09 00:10:23",
        "slug": "6417",
        "subject": "#130 Webpage to highlight contributions repo"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-08-09 00:10:23",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31002718463761fbfa51",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0716de28/",
  "ticket_num": 130,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2008-04-06 16:56:24"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Cecelia\r\n\r\nAdd the capability to remove Fields from a FieldBundle,\r\nand to remove Fields, FieldBundles, Arrays, ArrayBundles, States, and RouteHandles from States.",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "Allow for removal of objects from lists of objects",
  "discussion_thread": {
    "_id": "ced8c563",
    "posts": [
      {
        "text": "- **summary**: Allow for removal of objects from lists --> Allow for removal of objects from lists of objects",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 20:26:29",
        "slug": "cea9",
        "subject": "#131 Allow for removal of objects from lists of objects"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2010-11-05 17:25:33",
        "slug": "3fc4",
        "subject": "#131 Allow for removal of objects from lists of objects"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:25:33",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31012718463761fbfa6c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/ced8c563/",
  "ticket_num": 131,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-05-16 19:32:50"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Sujay Kumar from NASA\r\n\r\n\r\nHi \r\nI noticed that the attribute set/get is only supported in ESMF3.1 only for field, fieldbundle, and state. is this going to remain the same? Attaching attributes to arrays is no longer supported? \r\n\r\nThanks, \r\n-Sujay\r\n\r\n\\------------------------------------\r\nSujay Kumar, Ph.D\r\nCode 614.3, NASA GSFC\r\nGreenbelt, MD 20771\r\nEmail: Sujay.V.Kumar@nasa.gov\r\nWeb:http://neptune.gsfc.nasa.gov/hsb/?skumar\r\nPh: 301-286-8663, Fax: 301-286-8624\r\n\\------------------------------------\r\n\r\n",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Attributes in 310r",
  "discussion_thread": {
    "_id": "058716fd",
    "posts": [
      {
        "text": "- **assigned_to**: cdeluca --> theurich\n- **labels**: 881193 --> Attribute\n- **summary**: question on attribute usage --> Attributes in 310r\n- **milestone**: 495011 --> \n- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-06-09 16:33:41",
        "slug": "6d83",
        "subject": "#132 Attributes in 310r"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-06-09 16:35:16",
        "slug": "005e",
        "subject": "#132 Attributes in 310r"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\n310bs62 works for Sujay. Keep pending 'till he has verified with 310rp1.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-06-16 16:37:32",
        "slug": "e543",
        "subject": "#132 Attributes in 310r"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-06-16 16:37:32",
        "slug": "0bf2",
        "subject": "#132 Attributes in 310r"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nSujay has been using Attributes with Arrays and Grids successfully with 310bs62. Sent him follow-up about 310rp1.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-25 22:36:09",
        "slug": "3fbd",
        "subject": "#132 Attributes in 310r"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-25 22:36:09",
        "slug": "61e4",
        "subject": "#132 Attributes in 310r"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-25 22:36:09",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31012718463761fbfa7e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/058716fd/",
  "ticket_num": 132,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-06-02 20:39:00"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  Tom Henderson, also interest from Arlindo\r\n\r\nTom is interested in an interface that leaves off class name entirely.  Some aspects of his concerns were addressed in ticket \\#1928300, when we simplified Attributes.  The conclusion of initial discussions was that a super-simplified interface without even class names \\(e.g. ESMF\\_Get\\(\\)\\) is probably best introduced into the contrib repository.\r\n\\- Cecelia\r\n\r\n",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "Super-simplified interface (e.g. ESMF_Get())",
  "discussion_thread": {
    "_id": "adb16c10",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: YES\n\nTom's original mail:\r\n\r\n\r\nHi all,\r\n\r\nIs there a chance we could move away from method names that include type\r\nnames?\r\n\r\nFor example, the following interfaces all do the same thing but with\r\ndifferent types:\r\n\r\nESMF\\_FieldGetAttribute\\(field, name, value, rc\\)\r\nESMF\\_BundleGetAttribute\\(bundle, name, value, rc\\)\r\nESMF\\_StateGetAttribute\\(state, name, value, rc\\)\r\n\r\nThe type of the object passed as the first argument is already known via\r\nits declaration. Including the type in the routine name is redundant and\r\nmakes code more difficult to change.\r\n\r\nFor example, if I've got a bundle in my code and I want to change it to a\r\nstate, I must find all calls into which the bundle is passed as an argument\r\nand change the name of most of them. I'd much prefer to only have to\r\nchange the names of calls that are not shared between the two types \\(like\r\n\"Create\", etc.\\).\r\nIt would be much better if the interfaces above were instead defined as\r\nfollows:\r\n\r\nESMF\\_GetAttribute\\(field, name, value, rc\\)\r\nESMF\\_GetAttribute\\(bundle, name, value, rc\\)\r\nESMF\\_GetAttribute\\(state, name, value, rc\\)\r\n\r\nI believe it would not be difficult to add support for this by just\r\nwrapping the new generic interfaces in interface blocks that include the\r\nexisting specific interfaces. Something like this:\r\n\r\nINTERFACE ESMF\\_GetAttribute\r\nMODULE PROCEDURE ESMF\\_FieldGetAttribute\r\nMODULE PROCEDURE ESMF\\_BundleGetAttribute\r\nMODULE PROCEDURE ESMF\\_StateGetAttribute\r\nEND INTERFACE\r\n\r\nBackwards compatibility could even be maintained by simply retaining the\r\npublic visibility of the specific interfaces. Although I'd prefer to use a\r\nscript and just change all the calls in my code... ;-\\)\r\n\r\nObviously, this applies to a significant fraction of the ESMF API.\r\n\r\nPresumably there was a rationale for doing things this way in the first\r\nplace. Can anyone refresh my memory?\r\n\r\nThanks,\r\n\r\nTom",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-12 17:27:51",
        "slug": "c376",
        "subject": "#133 Super-simplified interface (e.g. ESMF_Get())"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 20:24:53",
        "slug": "35e6",
        "subject": "#133 Super-simplified interface (e.g. ESMF_Get())"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-18 20:24:53",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31042718463761fbfaa3",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/adb16c10/",
  "ticket_num": 133,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-06-12 17:23:31"
},{
  "status": "closed",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "There are three issues I would like to see addressed in this ticket: \r\n\r\n1\\) make the process of setting specific mpirun scripts less convoluted in the ESMF build system; \r\n2\\) include a section in the User's Guide that explains how to use the ESMF environment variables to specify system dependent, user-written scripts to be used by the ESMF run\\_xxx targets; \r\n3\\) think about where/how to keep a library of system-specific scripts that can be used by Silverio's test scripts on specific systems and also for users to use as templates.\r\n\r\nDetails:\r\n\r\n1\\) Currently we have two sets of ESMF\\_ environment variables that are used to specify how exactly the ESMF run\\_xxx targets attempt to execute test and example applications. \r\n\r\nThese variable sets are:\r\nESMF\\_MPIRUN + ESMF\\_MPIRUNOPTIONS\r\nand:\r\nESMF\\_BATCH + ESMF\\_BATCHOPTIONS\r\n\r\nThe ESMF\\_BATCH variable is used in /some/ of the build\\_rules.mk files under /certain/ conditions to set ESMF\\_MPIRUNDEFAULT which then is used by common.mk to set ESMF\\_MPIRUN unless the user has set this variable. In the end it is always ESMF\\_MPIRUN that is used by the run\\_xxx targets to launch executables.\r\n\r\nThis process is not very clear and hard to descibe in the User's guide. \r\n\r\nMy proposal is to simplify this process by removing the ESMF\\_BATCH + ESMF\\_BATCHOPTIONS variables. Instead the user uses the ESMF\\_MPIRUN + ESMF\\_MPIRUNOPTIONS directly to access specific mpirun scripts.\r\n\r\nBy default the scripts indicated by ESMF\\_MPIRUN are assumed to live in ESMF's ./scripts subdirectory \\(where they are all located right now\\). However, an absolute path can be specified to point to a script in a different location.\r\n\r\n2\\) In the User's Guide we can then remove the incomplete documentation of the BATCH variables. Instead a section dedicated to the problem of system-specific mpirun scripts can be added. \r\n\\* Point out that on many systems the generic ESMF scripts will work, sometimes with the help of ESMF\\_MPIRUNOPTIONS.\r\n\\* Describe conditions where a system-specific script is unavoidable, e.g. specific modules need to be loaded inside a batch script.\r\n\\* List the requirements a script must fulfil to be used as an ESMF mpirun script \\(so it works with the testing scripts\\).\r\n\\* Advice to use existing scripts as templates.\r\n\r\n3\\) We need a place to store and make template scripts accessible. Should any system-specific scripts be kept and distributed in ./scripts? Maybe system specific mpirun scripts should all live somewhere on esmfcontrib and Silverio's test scripts get them via CVS on those systems where we need them? All this must be well documented.\r\n\r\n\\*gjt\\*",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Better defined support for system specific mpirun issues",
  "discussion_thread": {
    "_id": "1b454815",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: YES\n\nCovered all three items in 310bs66 for the upcoming 310rp1 release:\r\n1\\) Modified launch facility to use:\r\nESMF\\_MPIRUN\r\nESMF\\_MPISCRIPTOPTIONS\r\nESMF\\_MPIBATCHOPTIONS\r\nESMF\\_MPILAUNCHOPTIONS\r\n2\\) Added section \"Setting up ESMF to run Test Suite Applications\" to User's Guide and refer to it from README.\r\n3\\) Added scripts module to esmfcontrib.\r\n\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 21:35:47",
        "slug": "882f",
        "subject": "#134 Better defined support for system specific mpirun issues"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 21:35:47",
        "slug": "7a8e",
        "subject": "#134 Better defined support for system specific mpirun issues"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: YES\n\nESMF 3.1.0rp1 has been released with the respective changes in place. All modifications have been merged onto the trunk.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-25 21:16:42",
        "slug": "c8b7",
        "subject": "#134 Better defined support for system specific mpirun issues"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-25 21:16:42",
        "slug": "94f7",
        "subject": "#134 Better defined support for system specific mpirun issues"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-25 21:16:42",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31052718463761fbfab4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/1b454815/",
  "ticket_num": 134,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2008-06-18 22:32:08"
},{
  "status": "closed",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "25.5.7  ESMF\\_DistGridGet - Get DE local information about Dist\u2010\r\nGrid\r\n\r\nINTERFACE:\r\n\\! Private name; call using ESMF\\_DistGridGet\\(\\)\r\nsubroutine ESMF\\_DistGridGetPLocalDe\\(distgrid, localDe,  seqIn\u2010\r\ndexList, rc\\)\r\n\r\n\r\nIt can be very inconvenient to figure out the correct size of seqIndexList. It'd be helpful if this API provides a count argument so that a user can get the list in a 2 step manner.\r\n\r\nFei",
  "labels": [],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "add count argument to DistGridGet API",
  "discussion_thread": {
    "_id": "3d7f5791",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nAdded the \"integer, intent\\(out\\):: elementCount\" argument to the ESMF\\_DistGridGetPLocalDe\\(\\) overload of the ESMF\\_DistGrid\\(\\) interface. Waiting for Fei to verify.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 06:45:51",
        "slug": "2aa5",
        "subject": "#135 add count argument to DistGridGet API"
      },
      {
        "text": "- **assigned_to**: nobody --> theurich\n- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 06:45:51",
        "slug": "6b9a",
        "subject": "#135 add count argument to DistGridGet API"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nGerhard,\r\n\r\nI have modified my esmf2mct conversion utilities to use the new/simpler distgrid API interface and verifeid that I obtained same result. Thanks for the quick change,\r\n\r\nFei ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 17:04:17",
        "slug": "f382",
        "subject": "#135 add count argument to DistGridGet API"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 17:04:17",
        "slug": "a92c",
        "subject": "#135 add count argument to DistGridGet API"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-17 17:04:17",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31062718463761fbfacf",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3d7f5791/",
  "ticket_num": 135,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-07-03 13:58:12"
},{
  "status": "pending",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Henderson from NOAA\r\n\r\n\r\n\r\nHello again Gerhard,\r\n\r\nTom Black tried inserting the indexflag option into the NEMS code and is seeing small differences in the output.  Before he digs in in detail, can you confirm that this feature really works for native Fortran90 arrays?  Although it does appear in the unit tests, there is no test I can find that verifies correctness of the index bounds.\r\n\r\nThanks,\r\n\r\nTom\r\n",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "ESMF Array from Fortran90 array - modified bounds?",
  "discussion_thread": {
    "_id": "faa54570",
    "posts": [
      {
        "text": "- **labels**: 1019235 --> Array - New\n- **summary**: Array from  Fortran90 array  \"indexflag=ESMF_INDEX_GLOBAL\" --> ESMF Array from Fortran90 array - modified bounds?\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-10-23 23:16:26",
        "slug": "596f",
        "subject": "#136 ESMF Array from Fortran90 array - modified bounds?"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-10-23 23:16:55",
        "slug": "b520",
        "subject": "#136 ESMF Array from Fortran90 array - modified bounds?"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-11-19 21:45:43",
        "slug": "b59a",
        "subject": "#136 ESMF Array from Fortran90 array - modified bounds?"
      },
      {
        "text": "The following email exchange from 03/04/09 summarizes where this currently stands. I am marking this pending to indicate that we think we are done with what we needed to do here, but are waiting on TomB:\r\n\\*gjt\\*\r\n\r\nThanks to both of you\\!\r\n\r\nTomH, about the WRF issue, there is a separate ticket open from 2006, \\#1428426, \r\nabout the same \\(or similar\\) issue. Fei will contact you about this in a separate \r\nemail soon.\r\n\r\nTomB, I'll keep this ticket open until we get a green light from you that you \r\nare able to get around the copies using the 310rp2. I know this is probably low \r\npriority on your list of things, so I'll put this ticket a bit further down in \r\nthe stack of my things for now.  :-\\)  Please don't hesitate writing us with any \r\nquestions or odd behavior you find when you get into this. Thanks\\!\r\n\r\n-Gerhard\r\n\r\nTom.Black@noaa.gov wrote:\r\n\r\n&gt;&gt; Gerhard, Tom,\r\n&gt;&gt; \r\n&gt;&gt; Yes, I believe this will avoid he need to do copies after unloading \r\n&gt;&gt; pointers in some locations.  We will be fully updating all of our codes \r\n&gt;&gt; to rp2 soon and then we'll know.\r\n&gt;&gt; \r\n&gt;&gt; Tom\r\n&gt;&gt; \r\n&gt;&gt; ----- Original Message -----\r\n&gt;&gt; From: Tom Henderson &lt;Thomas.B.Henderson@noaa.gov&gt;\r\n&gt;&gt; Date: Wednesday, March 4, 2009 1:33 pm\r\n&gt;&gt; Subject: Re: \\[esmf\\_support\\] \\#2010014: Re: Array from native Fortran90 \r\n&gt;&gt; array with \"indexflag=ESMF\\_INDEX\\_GLOBAL\" ??\r\n&gt;&gt; \r\n&gt;&gt; \r\n&gt;\r\n&gt;&gt;&gt;&gt;Hi Gerhard,\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;FIM doesn't need this, yet.  NIM will.  I don't recall the exact \r\n&gt;&gt;&gt;&gt;NMMB or GFS case that\r\n&gt;&gt;&gt;&gt;prompted this.  Do you Tom \\(B\\)?\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;It is very important for WRF though\\!\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;Thanks,\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;Tom\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-03-05 00:36:16",
        "slug": "1b10",
        "subject": "#136 ESMF Array from Fortran90 array - modified bounds?"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-03-05 00:36:16",
        "slug": "1985",
        "subject": "#136 ESMF Array from Fortran90 array - modified bounds?"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 730 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2011-03-05 01:20:02",
        "slug": "a8cd",
        "subject": "#136 ESMF Array from Fortran90 array - modified bounds?"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2011-03-05 01:20:03",
        "slug": "5c81",
        "subject": "#136 ESMF Array from Fortran90 array - modified bounds?"
      },
      {
        "text": "sf-robot closed this -&gt; back to pending.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-03-07 19:19:28",
        "slug": "11f6",
        "subject": "#136 ESMF Array from Fortran90 array - modified bounds?"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-03-07 19:19:28",
        "slug": "a3b8",
        "subject": "#136 ESMF Array from Fortran90 array - modified bounds?"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-07 19:19:28",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31082718463761fbfaea",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/faa54570/",
  "ticket_num": 136,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-07-03 19:52:13"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Cecelia\r\n\r\nRemove as well as add attributes.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "Add removal of attributes",
  "discussion_thread": {
    "_id": "610b0362",
    "posts": [
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-05 15:29:25",
        "slug": "ac0c",
        "subject": "#137 Add removal of attributes"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-09-15 22:43:19",
        "slug": "a89f",
        "subject": "#137 Add removal of attributes"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-18 13:16:24",
        "slug": "47ee",
        "subject": "#137 Add removal of attributes"
      },
      {
        "text": "closed on 9/18/08 by ryan o'kuinghttons, functionality operational in ESMF\\_3\\_1\\_1.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-18 21:39:31",
        "slug": "7561",
        "subject": "#137 Add removal of attributes"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-18 21:39:31",
        "slug": "0adc",
        "subject": "#137 Add removal of attributes"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-18 21:39:31",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d310b2718463761fbfb1f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/610b0362/",
  "ticket_num": 137,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-07-18 20:27:26"
},{
  "status": "pending",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Atanas Trayanov from NASA\r\n\r\nHere is some of the functionality that Atanas requested be\r\nin 3.1.0rp1 at the May 2008 ESMF community meeting. \r\n\r\n\\+ Grid Attributes\r\n\r\n\\+ Grid Match - a function that returns true if two grid objects \r\nare the same\r\n\r\n\\+ The ability to get the minIndex and maxIndex for the first\r\nGrid tile. \r\n\r\n\r\n\r\n",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Grid func. requested by Atanas at 2008 comm. meeting",
  "discussion_thread": {
    "_id": "2cb90ed3",
    "posts": [
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-09-05 15:37:54",
        "slug": "3cdb",
        "subject": "#138 Grid func. requested by Atanas at 2008 comm. meeting"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 365 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2009-09-06 02:20:46",
        "slug": "21e6",
        "subject": "#138 Grid func. requested by Atanas at 2008 comm. meeting"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2009-09-06 02:20:46",
        "slug": "1e4f",
        "subject": "#138 Grid func. requested by Atanas at 2008 comm. meeting"
      },
      {
        "text": "sf-robot does not know what it's doing -&gt; pending again\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-09-09 19:09:23",
        "slug": "4a1d",
        "subject": "#138 Grid func. requested by Atanas at 2008 comm. meeting"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-09-09 19:09:28",
        "slug": "b268",
        "subject": "#138 Grid func. requested by Atanas at 2008 comm. meeting"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-09-09 19:09:28",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d310d2718463761fbfb40",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/2cb90ed3/",
  "ticket_num": 138,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-07-28 15:55:21"
},{
  "status": "closed",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Atanas Trayanov from NASA\r\n\r\nAtanas requested the ability to create a Field with\r\nreplicated dimensions at the 2008 ESMF community meeting. \r\n\r\nThis functionality would allow the field to be created with\r\nfewer dimensions that the Grid it is build upon. \r\n",
  "labels": [
    "Field"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Fields with replicated dims (from 2008 comm. meeting)",
  "discussion_thread": {
    "_id": "2a40209a",
    "posts": [
      {
        "text": "Replicated dimensions in Fields have been implemented on the 310branch and have been verified by Atanas against GEOS-5/MAPL. This feature is currently scheduled for release with 3.1.0rp2. \r\n\r\nAtanas has had two further feature requests as follow-ons:\r\n\\#2527629: Allow Arrays with total region &lt; exclusive region\r\n\\#2527638: Support Array comms for Arrays w/ replicated dimensions\r\n\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-01-22 03:56:12",
        "slug": "6c3c",
        "subject": "#139 Fields with replicated dims (from 2008 comm. meeting)"
      },
      {
        "text": "- **assigned_to**: feiliu --> theurich\n- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-01-22 03:56:12",
        "slug": "2f3e",
        "subject": "#139 Fields with replicated dims (from 2008 comm. meeting)"
      },
      {
        "text": "Sent email to Max and Atanas about follow on tickets and the plan forward \\(past 310rp2\\).\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-01-26 18:56:50",
        "slug": "448e",
        "subject": "#139 Fields with replicated dims (from 2008 comm. meeting)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-01-26 18:56:50",
        "slug": "2406",
        "subject": "#139 Fields with replicated dims (from 2008 comm. meeting)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-01-26 18:56:50",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31102718463761fbfb62",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/2a40209a/",
  "ticket_num": 139,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-07-28 16:00:26"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Atanas Trayanov from NASA\r\n\r\nThis was a request from Atanas at the 2008 ESMF community meeting.\r\nHe wants a way to tell what DE in a Grid contains a given set of physical \r\ncoordinates. ",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Sub. to find which DE in a Grid contains a  physical coord.",
  "discussion_thread": {
    "_id": "853aace5",
    "posts": [
      {
        "text": "- **summary**: Ability to find which DE in a Grid contains a given physical --> Sub. to find which DE in a Grid contains a  physical coord.",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2008-07-28 17:33:53",
        "slug": "9064",
        "subject": "#140 Sub. to find which DE in a Grid contains a  physical coord."
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-07-28 17:33:53",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31112718463761fbfb7d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/853aace5/",
  "ticket_num": 140,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-07-28 17:20:58"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Dani Bundy from NCAR CGD\r\n\r\n\r\nEarl,\r\n\r\nSorry to bother you directly, please advise if I should just send queries like this to the ESMF\\_Support list.\r\n\r\nI'm just wondering if there is a routine that returns the number of leap  days between two dates in ESMF\\_3\\_0\\_1r.\r\n\r\nI think I can come up with it using a loop over the years in question and  ESMF\\_TimeGet but I don't want to waste my effort if something already \r\nexists.\r\n\r\nThanks,\r\nDani",
  "labels": [
    "Time Manager"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Time Manager method for leap days between two dates",
  "discussion_thread": {
    "_id": "efea4323",
    "posts": [
      {
        "text": "- **labels**: 588652 --> Time Manager\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-08-06 18:53:35",
        "slug": "c52c",
        "subject": "#141 Time Manager method for leap days between two dates"
      },
      {
        "text": "- **summary**: Time Manager question about leap years --> Time Manager method for leap days between two dates",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-08-06 19:18:13",
        "slug": "c2b2",
        "subject": "#141 Time Manager method for leap days between two dates"
      },
      {
        "text": "Logged In: YES \nuser\\_id=539079\nOriginator: NO\n\nDani indicated that she no longer needs this -- see e-mail traffic.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-08-08 16:26:18",
        "slug": "31ce",
        "subject": "#141 Time Manager method for leap days between two dates"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2008-08-08 16:26:18",
        "slug": "056e",
        "subject": "#141 Time Manager method for leap days between two dates"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-08-08 16:26:18",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31122718463761fbfb8a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/efea4323/",
  "ticket_num": 141,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-08-01 22:53:37"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Dani Bundy Coleman from NCAR CGD\r\n\r\n\r\n\r\n\r\nIs there a routine for getting the ESMF version number? Or do I need to grab it out of the ESMF log file?\r\n\r\nThanks,\r\n\r\nDani Bundy Coleman\r\n\r\n......................................................................\r\nNational Center for Atmospheric Research\r\nClimate and Global Dynamics Division    office: ML 320c\r\nClimate Modeling Section                phone: 303 497 1319\r\nemail: bundy@ucar.edu\r\n......................................................................\r\n\r\n",
  "labels": [
    "Util"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "get esmf version number",
  "discussion_thread": {
    "_id": "a943c3eb",
    "posts": [
      {
        "text": "- **milestone**: 495011 --> \n- **assigned_to**: theurich --> w6ws\n- **labels**: 588647 --> 904964",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-08-06 22:49:03",
        "slug": "dadf",
        "subject": "#142 get esmf version number"
      },
      {
        "text": "- **labels**: 904964 --> Util\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-08-06 22:49:30",
        "slug": "a8a2",
        "subject": "#142 get esmf version number"
      },
      {
        "text": "Email was sent to Dani on 8/7/2008, describing the parameters already available in ESMF\\_Mod.  In addition, documentation has been added to the Reference Manual on the trunk, as of 9/12/2008.\r\n\r\nWalter",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-12 23:23:39",
        "slug": "97d6",
        "subject": "#142 get esmf version number"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-12 23:23:39",
        "slug": "febd",
        "subject": "#142 get esmf version number"
      },
      {
        "text": "Dani reviewed the new section of the Reference Manual \\(\u00a79.2.3 of todays HEAD\\) and is happy with it.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-25 21:43:10",
        "slug": "7254",
        "subject": "#142 get esmf version number"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-09-25 21:43:10",
        "slug": "740b",
        "subject": "#142 get esmf version number"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2008-09-25 21:43:10",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31132718463761fbfba6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a943c3eb/",
  "ticket_num": 142,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-08-06 21:59:27"
},{
  "status": "pending",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Mariana Vertenstein\r\n\r\nCCSM needs values of Attributes to be updated during run-time.  This is the use case:  Attributes are being attached to a State and are used to store control parameters.  One component updates its Attributes.  It may need to send the new values to a second component running concurrently.  Although we could send from only one source PET and broadcast it to all the dest PETs, we probably want to be able to send from multiple source PETs in order to avoid contention.\r\n",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "Add AttributeUpdate",
  "discussion_thread": {
    "_id": "6563ef51",
    "posts": [
      {
        "text": "\r\nFrom: Ryan O'Kuinghttons\r\n\r\nThe development of this functionality will involve the issue of garbage collection with respect to \"reconciled\" Attribute hierarchies.  AttributeUpdate will have the job of managing the Attribute hierarchies, and keeping track of their current state, thus it is reasonable to assume that this development will allow for an natural way to clean up the \"proxy\" Attribute hieararchies.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2008-09-18 20:05:34",
        "slug": "dc3c",
        "subject": "#143 Add AttributeUpdate"
      },
      {
        "text": "In a telecon with CCSM we decided to leave this open until CCSM can get Attributes up and running and test AttributeUpdate on their own.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-08-06 17:41:27",
        "slug": "c479",
        "subject": "#143 Add AttributeUpdate"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:30:31",
        "slug": "8da3",
        "subject": "#143 Add AttributeUpdate"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-08-06 18:34:54",
        "slug": "3afc",
        "subject": "#143 Add AttributeUpdate"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-06 18:34:54",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31142718463761fbfbcc",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6563ef51/",
  "ticket_num": 143,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-08-06 23:06:26"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Arlindo da Silva from NASA\r\n\r\n\r\n\r\nAll,\r\n\r\nJust a small suggestion... Do you think that in your next release you could adopt the standard set of text files usually included with open source tarballs, in the very least:\r\n\r\nCOPYING      your copyright notice\r\nNEWS            The release notes: a few paragraphs saying what is new with this release \\(not a detailed ChangeLog\\)\r\nChangeLog    a detailed list of changes; I'm pretty sure you have one I just could not find it\r\nINSTALL        the build instructions proper \\(split from README\\)\r\nREADME       a shortten version of what you have\r\n\r\nThe most important one is the detailed ChangeLog and the release notes \\(NEWS\\). These should be easily found at the top.\r\n\r\nThank you,\r\n\r\nArlindo\r\n",
  "labels": [
    "General Documentation"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "Standard text files for source tarball",
  "discussion_thread": {
    "_id": "cb16ed95",
    "posts": [
      {
        "text": "- **labels**: 588647 --> General Documentation\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-01-15 23:21:54",
        "slug": "d5c0",
        "subject": "#144 Standard text files for source tarball"
      },
      {
        "text": "- **milestone**:  --> Add Other Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-01-15 23:22:55",
        "slug": "d803",
        "subject": "#144 Standard text files for source tarball"
      },
      {
        "text": "- **priority**: 5 --> 1",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 17:24:36",
        "slug": "4d89",
        "subject": "#144 Standard text files for source tarball"
      },
      {
        "text": "- **assigned_to**: cdeluca --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 17:35:34",
        "slug": "0d7e",
        "subject": "#144 Standard text files for source tarball"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:35:34",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31152718463761fbfbe8",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/cb16ed95/",
  "ticket_num": 144,
  "custom_fields": {
    "_priority": "1",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2008-10-22 16:01:12"
},{
  "status": "closed",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: Ryan O'Kuinghttons\r\n\r\nThis capability was requested by Tom Henderson.\r\n\r\nThe ability to \"nest\" Attribute packages inside each other is required to organize Attribute packages by convention and allow for enforcement of metadata compliance. In addition this ability needs to be able to coincide with the ability to have multiple Attribute packages on an object.  There needs to be a flag in the ESMF\\_AttributeAdd\\(\\) call to allow a user to choose whether the Attribute package should be nested or not.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "nesting Attribute packages",
  "discussion_thread": {
    "_id": "6eeadd35",
    "posts": [
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-04-24 13:38:39",
        "slug": "cfe4",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 365 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2010-04-25 02:20:12",
        "slug": "c806",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2010-04-25 02:20:13",
        "slug": "57f0",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "sf-robot has no clue -&gt; re-pend,\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-04-26 16:49:51",
        "slug": "07cd",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-04-26 16:49:52",
        "slug": "7593",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "This ticket is now being finished under FR \\#2990601.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-01-13 17:19:07",
        "slug": "8360",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-01-13 17:19:07",
        "slug": "65f6",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "I put this back to pending b/c the task in this ticket is done.  It is a follow on issue that is being worked on in \\#29990601",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-01-13 17:22:44",
        "slug": "cf90",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-01-13 17:22:44",
        "slug": "ab2c",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "- **labels**: 881193 --> Attribute\n- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-03-03 17:21:57",
        "slug": "e19d",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-03-03 17:23:02",
        "slug": "9765",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "closed per Tom Henderson: work on error proofing AttributeWrite is continued in ticket 3439091",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-11-16 23:59:57",
        "slug": "745d",
        "subject": "#145 nesting Attribute packages"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-11-16 23:59:57",
        "slug": "b954",
        "subject": "#145 nesting Attribute packages"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-11-16 23:59:57",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31162718463761fbfc03",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6eeadd35/",
  "ticket_num": 145,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2008-10-22 17:16:21"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Wes J. Lloyd from the USDA-ARS-Agricultural Systems Research Unit\r\n\r\nDoes there exist examples of an ESMF component implemented in C/C++?\r\nIs there a example model in ESMF implemeneted in C/C++?\r\n\r\nWhere might these items be found?\r\n\r\nIs C/C++ support complete in ESMF?\r\n\r\nWhen reading the ESMC\\_COMP.h file, the comments suggest some things may be incomplete:\r\n\r\n&gt;From ESMC\\_COMP.h:\r\n\\---------------------------------------------------------------------------------\r\nclass ESMC\\_Comp \\{       // a cover class for F90 - does NOT inherit from Base\r\n\r\nprivate:\r\nvoid \\*fortranclass;\r\n\r\n// \\!PUBLIC MEMBER FUNCTIONS:\r\n//\r\npublic:\r\nint ESMC\\_CompRegister\\(void \\*\\);\r\n\r\n// not at all the final interfaces - just something to start\r\n// early testing with the C++ interfaces.\r\nint ESMC\\_CompInit\\(void\\);\r\nint ESMC\\_CompRun\\(int timesteps\\);\r\nint ESMC\\_CompFinal\\(void\\);\r\n//int ESMC\\_CompWriteRestart\\(void\\);\r\n//int ESMC\\_CompReadRestart\\(void\\);\r\n\r\n// accessor methods for class members.  these need more options.\r\nint ESMC\\_CompGet\\(char \\*name\\) const;\r\nint ESMC\\_CompSet\\(const char \\*name\\);\r\n\r\n// standard methods\r\nint ESMC\\_CompValidate\\(const char \\*options\\) const;\r\nint ESMC\\_CompPrint\\(const char \\*options\\) const;\r\n\r\n// native C++ constructors/destructors\r\nESMC\\_Comp\\(void\\);\r\n~ESMC\\_Comp\\(void\\);\r\n\r\n\r\n// \\!PRIVATE MEMBER FUNCTIONS:\r\n//\r\nprivate:\r\n//\r\n//\r\n//EOP\r\n//-----------------------------------------------------------------------------\r\n\r\n\\};   // end class ESMC\\_Comp\r\n\r\n\\---------------------------------------------------------------------------------\r\n\r\n\r\nThanks,\r\n\r\nWes J. Lloyd\r\nResearch Associate\r\nUSDA-ARS-Agricultural Systems Research Unit\r\n2150 Centre Avenue, Building D, Suite 200\r\nFort Collins, CO 80526\r\nWes.Lloyd@ars.usda.gov\r\n\\(970\\) 492-7311\r\n\r\n\r\n\r\n",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: C_INTERF: examples for public C API (6)",
  "discussion_thread": {
    "_id": "1b61a7cf",
    "posts": [
      {
        "text": "pointed Wes to 3.1.1, noting internal release caveats,\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-11-10 19:10:26",
        "slug": "bc18",
        "subject": "#146 LONG: C_INTERF: examples for public C API (6)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-11-10 19:10:26",
        "slug": "15e2",
        "subject": "#146 LONG: C_INTERF: examples for public C API (6)"
      },
      {
        "text": "This will be an open feature request until we have a more complete C API in place. At that point we want to contact Wes.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-07-17 16:59:24",
        "slug": "80f5",
        "subject": "#146 LONG: C_INTERF: examples for public C API (6)"
      },
      {
        "text": "- **milestone**: 495011 --> \n- **labels**: 588645 --> \n- **status**: pending --> open",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-07-17 16:59:24",
        "slug": "65a4",
        "subject": "#146 LONG: C_INTERF: examples for public C API (6)"
      },
      {
        "text": "- **milestone**:  --> Add Other Capability\n- **labels**:  --> Multiple Categories\n- **priority**: 5 --> 1",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-07-17 17:00:22",
        "slug": "bd2b",
        "subject": "#146 LONG: C_INTERF: examples for public C API (6)"
      },
      {
        "text": "- **summary**: C/C++ support and examples --> C_INTERF: C/C++ support and examples",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-07-17 17:02:24",
        "slug": "c35a",
        "subject": "#146 LONG: C_INTERF: examples for public C API (6)"
      },
      {
        "text": "- **priority**: 1 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 18:33:19",
        "slug": "9c96",
        "subject": "#146 LONG: C_INTERF: examples for public C API (6)"
      },
      {
        "text": "- **summary**: C_INTERF: C/C++ support and examples --> LONG: C_INTERF: C/C++ support and examples (6)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 20:04:53",
        "slug": "2865",
        "subject": "#146 LONG: C_INTERF: examples for public C API (6)"
      },
      {
        "text": "We think the user is not really intersted in this anymore, but we keep this ticket open to remind us that we need to add use and example sections to the C ref manual. Not a high priority for anybody right now until users really start using the public C API.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-03-17 16:15:24",
        "slug": "0445",
        "subject": "#146 LONG: C_INTERF: examples for public C API (6)"
      },
      {
        "text": "- **summary**: LONG: C_INTERF: C/C++ support and examples (6) --> LONG: C_INTERF: examples for public C API (6)\n- **priority**: 9 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-03-17 16:15:24",
        "slug": "3a7a",
        "subject": "#146 LONG: C_INTERF: examples for public C API (6)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-17 16:15:24",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31192718463761fbfc4d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/1b61a7cf/",
  "ticket_num": 146,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2008-10-29 23:49:59"
},{
  "status": "closed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "Port ESMF to the Microsoft Windows Compute Cluster Server \\(CCS\\) 2003, and/or the HPC Server 2008.",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Support Windows CCS 2003 and/or HPC 2008 platform",
  "discussion_thread": {
    "_id": "ece24e34",
    "posts": [
      {
        "text": "As a first step, the cygwin version of ESMF has now been verified in mpiuni mode on a CCS 2003 cluster.  This is using gcc 4.3.2 and 32-bit ABI.\r\n\r\nStep 2, using the Microsoft version of MPI, MSMPI with the 32-bit gcc build, is undergoing testing.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-11-04 21:10:57",
        "slug": "3319",
        "subject": "#147 Support Windows CCS 2003 and/or HPC 2008 platform"
      },
      {
        "text": "Here is a copy of my script for setting up the proper environment variables to build ESMF under MinGW.  These define paths to the various compilers, Visual Studio and Visual C directories, .NET framework, and so on.  It is likely that not all of these are needed, but they are what Intel gave me to work with...\r\n\r\n\\#mysetup.sh\r\n\\#\r\n\\# These settings are suited for building an app using the Intel\\(R\\) 64\r\n\\# 11.0.066 compilers and Visual Studio 2008 only\r\n\\#\r\n\\# Include/lib vars need drive letters separated by ;\r\n\\# Path vars can/should use : and no drive letters\r\n\\#\r\n\r\n\\# Base settings MinGW settings\r\n\r\nPATH=\"/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin\"\r\nLIB=\"\"\r\nINCLUDE=\"\"\r\n\r\n\\# Intel C++ and Fortran Compilers and IDB debugger\r\n\r\nWINTELDIR=\"C:\\Program Files \\(x86\\)\\Intel\"\r\nINTELDIR=\"/c/Program Files \\(x86\\)/Intel\"\r\n\r\nWIFORT\\_COMPILER11=$\\{WINTELDIR\\}\"\\compiler\\11.0\\061\\fortran\"\r\nIFORT\\_COMPILER11=$\\{INTELDIR\\}\"/compiler/11.0/061/fortran\"\r\n\r\nWICPP\\_COMPILER11=$\\{WINTELDIR\\}\"\\Compiler\\11.0\\061\\cpp\"\r\nICPP\\_COMPILER11=$\\{INTELDIR\\}\"/Compiler/11.0/061/cpp\"\r\n\r\nWIIDB=$\\{WINTELDIR\\}\"\\IDB\\10.1\\EM64T\\bin\"\r\nIIDB=$\\{INTELDIR\\}\"/IDB/10.1/EM64T/bin\"\r\n\r\n\\# .NET framework\r\n\r\nFramework35Version=v3.5\r\nFrameworkDir=\"/c/Windows/Microsoft.NET/Framework64\"\r\nFrameworkVersion=v2.0.50727\r\n\r\n\\# Visual Studio 2005 specific vars\r\n\r\nWVSINSTALLDIR=\"C:\\Program Files \\(x86\\)\\Microsoft Visual Studio 8\"\r\nVSINSTALLDIR=\"/c/Program Files \\(x86\\)/Microsoft Visual Studio 8\"\r\n\r\nWVCINSTALLDIR=$\\{WVSINSTALLDIR\\}\"\\VC\"\r\nVCINSTALLDIR=$\\{VSINSTALDIR\\}\"/VC\"\r\n\r\n\\# Windows SDK specific vars\r\n\r\nWWindowsSdkDir=\"C:\\Program Files\\Microsoft SDKs\\Windows\\v6.1\"\r\nWindowsSdkDir=\"/c/Program Files/Microsoft SDKs/Windows/v6.1\"\r\n\r\n\\# Add MSVS 2008 and MS SDK to PATH/INCLUDE/LIB\r\n\r\nPATH=\"$WindowsSdkDir/bin/x64:$WindowsSdkDir/bin/win64/x64:$WindowsSdkDir/bin:$PATH\"\r\nINCLUDE=\"$WWindowsSdkDir/include;$INCLUDE\"\r\nLIB=\"$WWindowsSdkDir/lib/x64;$LIB\"\r\n\r\nPATH=\"$VCINSTALLDIR/BIN/amd64:$FrameworkDir/$Framework35Version:$FrameworkDir/$Framework35Version/Microsoft .NET Framework 3.5 \\\\\\(Pre-Release Version\\\\\\):$FrameworkDir/$FrameworkVersion:$VCINSTALLDIR/VCPackages:$VSINSTALLDIR\\Common7\\IDE:$VSINSTALLDIR/Common7/Tools:$VSINSTALLDIR/Common7/Tools/bin:$PATH\"\r\n\r\nINCLUDE=\"$WVCINSTALLDIR/ATLMFC/INCLUDE;$WVCINSTALLDIR/INCLUDE;$INCLUDE\"\r\n\r\nLIB=\"$WVCINSTALLDIR/ATLMFC/LIB/amd64;$WVCINSTALLDIR/LIB\\amd64;$LIB\"\r\n\r\nLIBPATH=\"$FrameworkDir/$Framework35Version;$FrameworkDir/$FrameworkVersion;$FrameworkDir/$Framework35Version;$FrameworkDir/$FrameworkVersion;$WVCINSTALLDIR/ATLMFCLIB/amd64;$WVCINSTALLDIR/LIB/amd64;$LIBPATH\"\r\n\r\n\r\n\\# Add Intel Compilers to PATH/INCLUDE/LIB and set License path\r\n\r\nPATH=\"$IFORT\\_COMPILER11/Bin/intel64:$ICPP\\_COMPILER11/Bin/intel64:$IIDB:$PATH\"\r\n\r\nLIB=\"$WIFORT\\_COMPILER11/lib/intel64;$WICPP\\_COMPILER11/lib/intel64;$LIB\"\r\n\r\nINCLUDE=\"$WIFORT\\_COMPILER11/include;$WIFORT\\_COMPILER11/include/intel64;$WICPP\\_COMPILER11/inclu\r\nde/intel64;$INCLUDE\"\r\n\r\n\\# Intel license path\r\n\r\nINTEL\\_LICENSE\\_FILE=\"C:\\Program Files \\(x86\\)\\Common Files\\Intel\\Licenses\"\r\n\r\n\\# Just in case....\r\nexport PATH=$PATH:.\r\nexport LIB INCLUDE",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-03-18 18:32:21",
        "slug": "bf2e",
        "subject": "#147 Support Windows CCS 2003 and/or HPC 2008 platform"
      },
      {
        "text": "Closing, since this is a duplicate of the NASA request in ticket 2230624.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-08-06 17:34:57",
        "slug": "349d",
        "subject": "#147 Support Windows CCS 2003 and/or HPC 2008 platform"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-08-06 17:34:57",
        "slug": "cb25",
        "subject": "#147 Support Windows CCS 2003 and/or HPC 2008 platform"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-06 17:34:57",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d311b2718463761fbfc86",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/ece24e34/",
  "ticket_num": 147,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2008-11-04 21:06:59"
},{
  "status": "pending",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  POC Tom Clune\r\n\r\nESMF NASA sponsors would like to have a Windows port.\r\nThis will be initiated on a CCS cluster and is expected to move over to a HPC 2008 cluster.\r\n\r\n",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "WINDOWS: Port to Windows",
  "discussion_thread": {
    "_id": "be44f139",
    "posts": [
      {
        "text": "- **summary**: Port to Windows --> WINDOWS: Port to Windows",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:21:02",
        "slug": "2d08",
        "subject": "#148 WINDOWS: Port to Windows"
      },
      {
        "text": "This is a duplicate of ticket \\#2222380.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-03-18 18:33:13",
        "slug": "fb44",
        "subject": "#148 WINDOWS: Port to Windows"
      },
      {
        "text": "Windows support for the Intel compiler, and using the Microsoft MPI \\(MSMPI\\)\r\nand the MinGW toolchain is being supported as of 4.0.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-08-06 18:41:42",
        "slug": "a41e",
        "subject": "#148 WINDOWS: Port to Windows"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-08-06 18:41:42",
        "slug": "8fd3",
        "subject": "#148 WINDOWS: Port to Windows"
      },
      {
        "text": "- **summary**: WINDOWS: Port to Windows --> PREPEND: WINDOWS: Port to Windows\n- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 14:45:02",
        "slug": "c652",
        "subject": "#148 WINDOWS: Port to Windows"
      },
      {
        "text": "- **summary**: PREPEND: WINDOWS: Port to Windows --> WINDOWS: Port to Windows\n- **status**: pending --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-12-29 04:00:07",
        "slug": "fd94",
        "subject": "#148 WINDOWS: Port to Windows"
      },
      {
        "text": "Since the Windows port is complete, but testing on Toms machine has been postponed, a message has been sent to Tom to request closing this ticket.  We can open new tickets when they find problems with the port.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-03-19 19:24:09",
        "slug": "c87d",
        "subject": "#148 WINDOWS: Port to Windows"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-03-19 19:24:09",
        "slug": "f7fe",
        "subject": "#148 WINDOWS: Port to Windows"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-03-19 19:24:09",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d311c2718463761fbfca2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/be44f139/",
  "ticket_num": 148,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2008-11-06 18:40:56"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Dan Kokron from the Global Modeling and Assimilation Office NASA Goddard Space Flight Center\r\n\r\n\r\nHello all,\r\n\r\nI have been playing with MvaPICH on the 'discover' platform here at\r\nGoddard.  The source for MvaPICH is available here\r\nhttp://mvapich.cse.ohio-state.edu/download/mvapich/download.shtml\r\n\r\nESMF-2.2.2rp3 builds under this MPI implementation.  All the unit and\r\nsystem tests run fine.  The trouble I'm having is that our primary ESMF\r\napplication \\(GEOSgcm\\) hangs at the very end.  A little snooping revealed\r\nthat most of the PET's didn't 'listen' to ESMF\\_Finalize.\r\n\r\nE.g.\r\n.\r\n.\r\n.\r\n.\r\nprint\\*,'MAPL\\_Cap: Before ESMF\\_Finalize'\r\ncall ESMF\\_Finalize \\(RC=status\\)\r\nVERIFY\\_\\(STATUS\\)\r\nprint\\*,'MAPL\\_Cap: After ESMF\\_Finalize'\r\n.\r\n.\r\n.\r\n.\r\n\r\n\r\nWhen running this on 240 PETs, I see 240 'Before' and ~236 'After'.  Is\r\nMvaPICH a supported MPI implementation?\r\n\r\nOne thing I see is that our code calls ESMF\\_Finalize in a subroutine of\r\nmain, not in main itself.  Is this a problem?\r\n\r\n\\-- \r\nDan Kokron\r\nGlobal Modeling and Assimilation Office\r\nNASA Goddard Space Flight Center\r\nGreenbelt, MD 20771\r\nDaniel.S.Kokron@nasa.gov\r\nPhone: \\(301\\) 614-5192\r\nFax:   \\(301\\) 614-5304\r\n\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "MvaPICH port for 3.1.0rp2 and beyond",
  "discussion_thread": {
    "_id": "9ed06ad9",
    "posts": [
      {
        "text": "Dan and I believe the core or the problem Dan reported is with the interaction of GEOSgcm and MvaPICH. Dan reports that all of the ESMF 2.2.2rp3 system/unit tests and demo run clean on his MvaPICH installations \\(using his ESMF MvaPICH port for ESMF\\_COMPILER=intelgcc\\). He is planning on picking up this work once GEOSgcm has migrated to ESMF 3.1.x. I think it will be nice to provide MvaPICH support that comes with the official ESMF distribution. It makes most sense to bring this out with ESMF 3.1.0rp2, since that is the most likely candidate for GEOSgcm at this moment. \r\n\r\nThe port should include all of the combos that support MvaPICH.\r\n\r\nAt this point I am changing this support request to a feature request, to deal with the porting issue, but eventually this will likely become an application issue ticket to deal with the GEOSgcm issue.\r\n\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-11-19 21:40:52",
        "slug": "81df",
        "subject": "#149 MvaPICH port for 3.1.0rp2 and beyond"
      },
      {
        "text": "- **labels**: 648884 --> Build/Install\n- **summary**: MvaPICH --> MvaPICH port for 3.1.0rp2 and beyond\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-11-19 21:40:52",
        "slug": "1c03",
        "subject": "#149 MvaPICH port for 3.1.0rp2 and beyond"
      },
      {
        "text": "- **priority**: 5 --> 9\n- **milestone**:  --> Port to New Platform",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-11-19 21:41:20",
        "slug": "cbb6",
        "subject": "#149 MvaPICH port for 3.1.0rp2 and beyond"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-08-06 17:29:05",
        "slug": "f550",
        "subject": "#149 MvaPICH port for 3.1.0rp2 and beyond"
      },
      {
        "text": "Silverio to check if this can be closed now. Check with Dan if he is good with the ESMF version is using.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 17:18:19",
        "slug": "bd27",
        "subject": "#149 MvaPICH port for 3.1.0rp2 and beyond"
      },
      {
        "text": "- **assigned_to**: theurich --> svasquez\n- **priority**: 5 --> 7",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 17:18:19",
        "slug": "88e8",
        "subject": "#149 MvaPICH port for 3.1.0rp2 and beyond"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:18:19",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d311e2718463761fbfcd2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/9ed06ad9/",
  "ticket_num": 149,
  "custom_fields": {
    "_priority": "7",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2008-11-11 22:03:06"
},{
  "status": "closed",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Atanas Trayanov from NASA\r\n\r\nGerhard,\r\n&lt;skip&gt;\r\n\r\nOn a totally unrelated topic, I am trying to run concurrent ensembles of GEOS-5 from the top-level component and I am having issues with ESMF\\_StateReconcile. At this point I am not sure if this is my fault or not. I have 2 questions about reconcile:\r\n\r\nCan I do a reconcile of a export state that contains nested export states \\(everybody is on the same VM\\). Also my export state often has fields with null datapointer. Is this an issue for reconcile?\r\n\r\nThanks,\r\n\r\n-Atanas\r\n",
  "labels": [
    "State"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "STATE: StateReconcile() for nested States",
  "discussion_thread": {
    "_id": "3b41b793",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-04-20 20:22:41",
        "slug": "6368",
        "subject": "#150 STATE: StateReconcile() for nested States"
      },
      {
        "text": "- **summary**: StateReconcile() questions --> STATE: StateReconcile() questions\n- **labels**: 588651 --> State\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2009-05-22 17:01:38",
        "slug": "b748",
        "subject": "#150 STATE: StateReconcile() for nested States"
      },
      {
        "text": "We made quite a bit of modifiations to State for 4.0.0r. Atanas is testing with GEOS-5 now.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-30 04:16:51",
        "slug": "0e0f",
        "subject": "#150 STATE: StateReconcile() for nested States"
      },
      {
        "text": "- **summary**: STATE: StateReconcile() questions --> STATE: StateReconcile() for nested States",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-30 04:16:51",
        "slug": "7da3",
        "subject": "#150 STATE: StateReconcile() for nested States"
      },
      {
        "text": "Atanas' prelimnary tests with a modified GEOS-5 \\(running ensembles\\) look good. Mark pending for now and ask him again in a few weeks, when he has done more exensive testing.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-30 06:45:59",
        "slug": "7857",
        "subject": "#150 STATE: StateReconcile() for nested States"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-30 06:45:59",
        "slug": "71dd",
        "subject": "#150 STATE: StateReconcile() for nested States"
      },
      {
        "text": "Atanas confirms proper behavior with ESMF 4.0.0rp1 and his latest version of MAPL/GEOS5.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-04-09 19:21:39",
        "slug": "8912",
        "subject": "#150 STATE: StateReconcile() for nested States"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-04-09 19:21:39",
        "slug": "c651",
        "subject": "#150 STATE: StateReconcile() for nested States"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-04-09 19:21:39",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d311f2718463761fbfcf7",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3b41b793/",
  "ticket_num": 150,
  "custom_fields": {
    "_priority": "9"
  },
  "created_date": "2008-12-04 17:26:10"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "\r\nFrom a conversation with Stan Solomon of HAO\r\n\r\nAdd magnetic coordinates to Grid. I believe this implies\r\nthe capability to do regridding between magnetic\r\nand non-magnetic coordinates. The ability to go from\r\nmag. coordinates to latxlon would be necessary and\r\nI believe they \\(HAO\\) has the equations to do this. ",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Add Magnetic coordinates (?)",
  "discussion_thread": {
    "_id": "aecf31f6",
    "posts": [
      {
        "text": "- **summary**: Add Magnetic coordinates --> LONG: Add Magnetic coordinates (?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:29:17",
        "slug": "be0c",
        "subject": "#151 LONG: Add Magnetic coordinates (?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-03-06 18:29:17",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31222718463761fbfd26",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/aecf31f6/",
  "ticket_num": 151,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-01-14 20:55:13"
},{
  "status": "closed",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Atanas Trayanov from NASA\r\n\r\nAtanas sent this in on 01/13/09 as part of the work for \\#2030447. It's basically a request to relax the Array restriction that currently requires that the Array total region must contain the Array exclusive region. This will require a careful check on where this assumption is made in the Array code, specifically the Array communication code\\!\r\n\\*gjt\\*\r\n\r\nGerhard,\r\n\r\nThis is the reproducer for the stagger location we talked about this morning\r\n\r\nAgain, the idea is to be able to create a single model grid \\(3 dimensional\\), and then to create 3d fields from fortran pointer vars that could have either center or face staggering. When the var is with ESMF\\_STAGGERLOC\\_CENTER\\_VFACE the pointer bounds are 0:LM, otherwise there are 1:LM. In GEOS-5 the vertical dimension is never decomposed. Ultimately all I need is to have the ability to create a field based on computational domain.\r\n\r\nPlease let me know if this would be possible.\r\n\r\n-Atanas ",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Allow Arrays with total region < exclusive region",
  "discussion_thread": {
    "_id": "6394dcc0",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-02-14 00:29:27",
        "slug": "b692",
        "subject": "#152 LONG: Allow Arrays with total region < exclusive region"
      },
      {
        "text": "- **summary**: Allow Arrays with total region < exclusive region --> LONG: Allow Arrays with total region < exclusive region",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-08-06 17:29:31",
        "slug": "2e6e",
        "subject": "#152 LONG: Allow Arrays with total region < exclusive region"
      },
      {
        "text": "We addressed this issue from the other direction, i.e. from Grid. Now Grids have DistGrids per stagger and the exclusive region of each DistGrid is sized according to the stagger. Atanas tested with 400rbs37, and is satisfied\\!\r\n\r\nAtanas Trayanov wrote:\r\n&gt; Gerhard,\r\n&gt;\r\n&gt; What I ran last night was an offline test I wrote to test ticket\r\n&gt; \\#2527629. I am going to use the logic from this test to simplify MAPL.\r\n&gt; This test ran with 400rbs37, and the bug fix in 400rbs38 was not\r\n&gt; relevant  for it \\(I was not using FieldBundles in my test\\)\r\n\r\nand\r\n\r\n&gt;&gt;&gt;Thank you so much for you e-mail\\! I tested \"\\#2527629: Allow Arrays\r\n&gt;&gt;&gt;with total region &lt; exclusive region\"  to my satisfaction  :\\) . You can\r\n&gt;&gt;&gt;close this ticket.\r\n&gt;&gt;&gt;-Atanas\r\n\r\n\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-30 06:41:40",
        "slug": "9e8e",
        "subject": "#152 LONG: Allow Arrays with total region < exclusive region"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-30 06:41:42",
        "slug": "6d3e",
        "subject": "#152 LONG: Allow Arrays with total region < exclusive region"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-10-30 06:41:42",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31232718463761fbfd33",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6394dcc0/",
  "ticket_num": 152,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-01-22 03:27:34"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Atanas Trayanov from NASA\r\n\r\nAtanas sent this in on 01/19/09 under \\#2030447. Currently Array communication calls are not supported for Arrays with replicated dimensions. That is because Array comms generally become ill-defined when replicated dimensions are present. However, Atanas' special case remains well defined because the replicated dimension was not distributed and also it was the last dimension in the DistGrid. We may want to consider allowing comms for Arrays with replicated dims on a one for one basis, much like tensor dims are treated by default. Still the issue of replicated dims that are not the last dimension needs to be solved.\r\n\\*gjt\\*\r\n\r\nGerhard,\r\n\r\nOver the weekend I came across a bug in ESMF\\_ArrayRedistStore when the array came from a field with replicated dims.\r\n\r\nThe relevant part from the ErrorLog file is:\r\n20090119 121114.725738 ERROR    PET0 ESMCI\\_Array.C 6128 ESMCI::Array::sparseMatMulStore\\( Invalid argument - factorIndexList contains srcSeqIndex outside srcArray bounds\r\n\r\nAs usual I am attaching a reproducer code - currently it is setup to fail. If you change \\#define DATA2D, the code creates 3d fields and completes successfully.\r\n\r\nI am hoping fixing the bug would be somewhat trivial and it will not affect the release schedule. If the fix does not make it in the 310rp2, this would acceptable to us, since normally we do not use any redist and for the concurrent case I have a version with no replicated dims that works.\r\n\r\nOn the bright side, last week I was able to complete successfully an assimilation run with concurrent ensembles of GEOS-5. :\\)\r\n\r\nThen over the weekend I tried to put the replicated dims in that code and this is when the code failed.\r\n\r\n-Atanas ",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG:Support Array comms for Arrays w/ replicated dims (3)",
  "discussion_thread": {
    "_id": "f0ebe218",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-02-14 00:28:46",
        "slug": "db6c",
        "subject": "#153 LONG:Support Array comms for Arrays w/ replicated dims (3)"
      },
      {
        "text": "- **summary**: Support Array comms for Arrays w/ replicated dimensions --> LONG:Support Array comms for Arrays w/ replicated dimensions",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-08-06 17:28:08",
        "slug": "04f5",
        "subject": "#153 LONG:Support Array comms for Arrays w/ replicated dims (3)"
      },
      {
        "text": "- **summary**: LONG:Support Array comms for Arrays w/ replicated dimensions --> LONG:Support Array comms for Arrays w/ replicated dims (3)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 21:25:33",
        "slug": "bbee",
        "subject": "#153 LONG:Support Array comms for Arrays w/ replicated dims (3)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 17:16:35",
        "slug": "eeae",
        "subject": "#153 LONG:Support Array comms for Arrays w/ replicated dims (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:16:35",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31242718463761fbfd4e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f0ebe218/",
  "ticket_num": 153,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-01-22 03:32:24"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "We had a discussion about what attributes can be set for the user based upon what grid knows about itself. During that discussion it was determined that the grid geometry \\(grid\\_geometry\\) was one of these.\r\n\r\na\\) Add to the code to set this automatically and make it part of the grid object\r\n\r\nb\\) Consider again what the grid knows to verify this is the only attribute that can be known in all circumstances. If not, add the new attributes.\r\n\r\n\r\nThese are some of the attributes we are currently interested in having the user either specify or the grid specify:\r\n\r\ngrid\\_type\r\ngeometry\\_type\r\ndiscretization\\_type\r\nIsConformal \\(Boolean\\)\r\nnorth\\_pole\\_location\r\npole\\_covered \\(Boolean\\)\r\narea\r\nhorizontal\\_dimension\\_value\r\nIsUniform \\(Boolean\\)\r\nvertical\\_dimension\\_value\r\nnumber\\_of\\_dimensions\r\ndimension\\_order\r\nnumber\\_of\\_cells\r\nIsRegular \\(Boolean\\)\r\n",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Add code to set attributes that grid knows intrinsically",
  "discussion_thread": {
    "_id": "af5bf95c",
    "posts": [
      {
        "text": "Also consider higher level ticket 3107571 - Connect class information with Attributes.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-10-06 14:33:58",
        "slug": "33e3",
        "subject": "#154 Add code to set attributes that grid knows intrinsically"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-01-22 18:27:21",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31252718463761fbfd69",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/af5bf95c/",
  "ticket_num": 154,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-01-22 18:27:21"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Bert Jagers\r\n\r\nThis is a reminder to send Bert a snapshot once the windows version is ready to test.",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "PREPEND: WINDOWS: send Delft Windows version",
  "discussion_thread": {
    "_id": "4c9c65a2",
    "posts": [
      {
        "text": "- **summary**: send Delft Windows version --> WINDOWS: send Delft Windows version",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 17:10:08",
        "slug": "7896",
        "subject": "#155 PREPEND: WINDOWS: send Delft Windows version"
      },
      {
        "text": "- **milestone**: 495011 --> \n- **labels**: 509038 --> Build/Install",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 17:11:31",
        "slug": "4be7",
        "subject": "#155 PREPEND: WINDOWS: send Delft Windows version"
      },
      {
        "text": "- **milestone**:  --> Port to New Platform",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 17:12:03",
        "slug": "5119",
        "subject": "#155 PREPEND: WINDOWS: send Delft Windows version"
      },
      {
        "text": "Work for the Windows port is being performed under ticket \\#2222380.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-03-18 18:34:24",
        "slug": "277c",
        "subject": "#155 PREPEND: WINDOWS: send Delft Windows version"
      },
      {
        "text": "Windows support for the Intel compiler, and using the Microsoft MPI \\(MSMPI\\) and the MinGW toolchain is being supported as of 4.0.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-08-06 18:39:22",
        "slug": "d434",
        "subject": "#155 PREPEND: WINDOWS: send Delft Windows version"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-08-06 18:39:22",
        "slug": "d091",
        "subject": "#155 PREPEND: WINDOWS: send Delft Windows version"
      },
      {
        "text": "- **summary**: WINDOWS: send Delft Windows version --> PREPEND: WINDOWS: send Delft Windows version\n- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 14:43:56",
        "slug": "0a3e",
        "subject": "#155 PREPEND: WINDOWS: send Delft Windows version"
      },
      {
        "text": "Notified Bert that Windows support has been released in 4.0.0r.  Closed per Cecelia.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-12-18 06:01:00",
        "slug": "4119",
        "subject": "#155 PREPEND: WINDOWS: send Delft Windows version"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-12-18 06:01:00",
        "slug": "1f07",
        "subject": "#155 PREPEND: WINDOWS: send Delft Windows version"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-12-18 06:01:00",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31262718463761fbfd77",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4c9c65a2/",
  "ticket_num": 155,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2009-01-27 21:05:51"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Vince Eccles\r\n\r\nInterested in a public interface for a random number generator for SWMS and eSWMS.\r\n\r\nCecelia,\r\n\r\neSWMS is an extension of the SWMS that will generate an ensemble of runs with a range of inputs and internal variability designed to provide a probability-based weather forecast of the solar wind/ionosphere environment in response to space weather events.   The eSWMS work was carefully defined with AFWA's help based on their experience with ensemble tropospheric weather forecasts.\r\n\r\nWill ESMF have random number generators and distribution generators?  I was assuming that I would be using several of my own routines for the Monte Carlo portion of eSWMS.\r\n\r\nFor the eSWMS work we will have to pay particular attention to input data and associated errors.  These error fields will be part of the new eSWMS input-export definitions within ESMF.\r\n\r\nVince\r\n\r\n",
  "labels": [
    "Util"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "Add random number generator",
  "discussion_thread": {
    "_id": "a8c50821",
    "posts": [
      {
        "text": "- **summary**: random number generator --> Add random number generator",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:25:33",
        "slug": "2809",
        "subject": "#156 Add random number generator"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-03-06 18:25:33",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31282718463761fbfdac",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a8c50821/",
  "ticket_num": 156,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-01-29 02:39:58"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Vince Eccles\r\n\r\nCecelia,\r\n\r\neSWMS is an extension of the SWMS that will generate an ensemble of runs with a range of inputs and internal variability designed to provide a probability-based weather forecast of the solar wind/ionosphere environment in response to space weather events.   The eSWMS work was carefully defined with AFWA's help based on their experience with ensemble tropospheric weather forecasts.\r\n\r\nWill ESMF have random number generators and distribution generators?  I was assuming that I would be using several of my own routines for the Monte Carlo portion of eSWMS.\r\n\r\nFor the eSWMS work we will have to pay particular attention to input data and associated errors.  These error fields will be part of the new eSWMS input-export definitions within ESMF.\r\n\r\nVince",
  "labels": [
    "Util"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "LONG: Add probability distribution generator (3)",
  "discussion_thread": {
    "_id": "d0ecb2f0",
    "posts": [
      {
        "text": "- **summary**: probability distribution generator --> LONG: Add probability distribution generator (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:25:16",
        "slug": "095b",
        "subject": "#157 LONG: Add probability distribution generator (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-03-06 18:25:16",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31282718463761fbfdb8",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d0ecb2f0/",
  "ticket_num": 157,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-01-29 02:41:17"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "\r\nMerge the new functionality that has been added to \r\nthe MESH\\_BRANCH back into the trunk.",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "MESH: Add MESH_BRANCH functionality to TRUNK",
  "discussion_thread": {
    "_id": "f42dd3bc",
    "posts": [
      {
        "text": "- **summary**: Add MESH_BRANCH functionality to TRUNK --> MESH: Add MESH_BRANCH functionality to TRUNK",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 18:20:37",
        "slug": "4724",
        "subject": "#158 MESH: Add MESH_BRANCH functionality to TRUNK"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-03-06 18:20:37",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31292718463761fbfdc4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f42dd3bc/",
  "ticket_num": 158,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-03-06 16:57:32"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tim Campbell from the Naval Research Lab.\r\n\r\nHello Gerhard,\r\n\r\nI'm curious to know the expected time-line for implementing non- \r\nblocking routeHandle communication.  That is, functionality like  \r\nESMF\\_FieldIRedist, ESMF\\_RHWait and ESMF\\_RHTest \\(for example\\).  The  \r\nkind of functionality one could use, together with passing  \r\nrouteHandles in states, to build an asynchronous I/O component for a  \r\ncoupled system.\r\n\r\nIs this functionality anywhere on the release schedule?\r\n\r\nThanks,\r\nTim\r\n",
  "labels": [
    "Field"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: non-blocking routeHandle communication (4)",
  "discussion_thread": {
    "_id": "839855e6",
    "posts": [
      {
        "text": "Currently this is scheduled as part of task \\#150753 for 4.0.1 -&gt; let Tim know.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-03-17 18:39:55",
        "slug": "7e76",
        "subject": "#159 LONG: non-blocking routeHandle communication (4)"
      },
      {
        "text": "- **milestone**: 495011 --> \n- **labels**: 881192 --> 904967",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-03-17 18:39:55",
        "slug": "b967",
        "subject": "#159 LONG: non-blocking routeHandle communication (4)"
      },
      {
        "text": "- **labels**: 904967 --> Field\n- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-03-17 18:41:01",
        "slug": "f1d0",
        "subject": "#159 LONG: non-blocking routeHandle communication (4)"
      },
      {
        "text": "- **summary**: non-blocking routeHandle communication --> LONG: non-blocking routeHandle communication",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-08-06 17:24:46",
        "slug": "4f99",
        "subject": "#159 LONG: non-blocking routeHandle communication (4)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 14:53:56",
        "slug": "5276",
        "subject": "#159 LONG: non-blocking routeHandle communication (4)"
      },
      {
        "text": "still need CANCEL option, see email traffic\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 17:09:53",
        "slug": "b86f",
        "subject": "#159 LONG: non-blocking routeHandle communication (4)"
      },
      {
        "text": "cancel turned out to be more difficult. added 4week time estimate\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 17:13:29",
        "slug": "5ce9",
        "subject": "#159 LONG: non-blocking routeHandle communication (4)"
      },
      {
        "text": "- **summary**: LONG: non-blocking routeHandle communication --> LONG: non-blocking routeHandle communication (4)\n- **priority**: 9 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 17:13:30",
        "slug": "2bf0",
        "subject": "#159 LONG: non-blocking routeHandle communication (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:13:30",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d312a2718463761fbfdd0",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/839855e6/",
  "ticket_num": 159,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-03-16 19:51:06"
},{
  "status": "closed",
  "reported_by_id": "5048c2deb9363c1e4f0e247b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "peggyli",
  "description": "The current regrid function doesn't know how to handle cases when the destination grid points fall outside the source grid domain.  I tried to regrid a curvilinear grid to a regular grid with some of the grid points outside the source grid domain.  The code bailed out after generating a bunch of error message.\r\n\r\nBob is going to add a flag in ESMF\\_FieldRegridStore\\(\\) to instruct ESMF to ignore the destination grid points outside the source grid domain thus user doesn't need to provide a mask to mask out those points.",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "flag out the points outside the src grid in regrid",
  "discussion_thread": {
    "_id": "e94d0dc2",
    "posts": [
      {
        "text": "- **labels**: 1019239 --> Regrid",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2009-03-18 18:14:39",
        "slug": "a8df",
        "subject": "#160 flag out the points outside the src grid in regrid"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-05-21 21:10:30",
        "slug": "11d3",
        "subject": "#160 flag out the points outside the src grid in regrid"
      },
      {
        "text": "Peggy says the below, there are also the tests  tst\\_regridSrcMask\\(\\) and tst\\_regridSphSrc\\(\\)  in ESMF\\_FieldCreateGetUTest.F90\r\n\r\nBob, yes, I added the flag and ran my 3D regrid test program \\(corrected, so that the longitude dimension does overlap\\) and it ran through completion.  I haven\u2019t looked at the result yet, but it did not complain.\r\n\r\nPlease close the ticket.\r\n\r\nPeggy\r\n\\--------\r\n\r\n\r\nOn 5/21/09 2:10 PM, \"Robert Oehmke\" &lt;esmf\\_support@mail.ucar.edu&gt; wrote:\r\n\r\nHi Peggy,\r\n\r\nAs you know I've added a flag to the FieldRegrid call \r\n\\(unmappedDstAction=ESMF\\_UNMAPPEDACTION\\_IGNORE\\) to tell the regrid to \r\nignore unmapped points. When you get a chance could you verify that \r\nthis works and let me know if this is sufficient for me to close this \r\nticket?\r\n\r\nThanks,\r\n\r\n\\- Bob\r\n\r\n\r\n\r\n\r\n",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-05-21 21:38:14",
        "slug": "3ba1",
        "subject": "#160 flag out the points outside the src grid in regrid"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-05-21 21:38:15",
        "slug": "114f",
        "subject": "#160 flag out the points outside the src grid in regrid"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-05-21 21:38:15",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d312c2718463761fbfdff",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e94d0dc2/",
  "ticket_num": 160,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-03-18 05:06:19"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Amik\r\n\r\nCould use an interface to a geometry object that can express data that is higher resolution than the grid, so that when refining the grid new points can be projected onto the data.  This is from a concall that we had on 4/14/09.  An interface that has some predefined shapes, such as a sphere, would be useful, along with a means for customizing it.  This would probably go first into the Mesh code in hadapt.",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Geometry object to express surfaces for refinement (6)",
  "discussion_thread": {
    "_id": "c15dd3f3",
    "posts": [
      {
        "text": "- **summary**: Geometry object to express surfaces for refinement --> LONG: Geometry object to express surfaces for refinement",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2009-05-22 17:38:08",
        "slug": "f716",
        "subject": "#161 LONG: Geometry object to express surfaces for refinement (6)"
      },
      {
        "text": "- **summary**: LONG: Geometry object to express surfaces for refinement --> LONG: Geometry object to express surfaces for refinement (6)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:13:09",
        "slug": "e45c",
        "subject": "#161 LONG: Geometry object to express surfaces for refinement (6)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:13:09",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d312d2718463761fbfe1c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c15dd3f3/",
  "ticket_num": 161,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-04-14 22:41:14"
},{
  "status": "open",
  "reported_by_id": "5048c2deb9363c1e4f0e247b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "peggyli",
  "description": "In the current implementation, we can only create FieldBundles based on a ESMF\\_Grid.  However, ESMF\\_Field can be built on top of a Grid, a Mesh, or a LocationStream.  The ESMF\\_FieldBundleCreate\\(\\) API should be expanded to allow a Mesh grid or a LocationStream in order to be consistent with the FieldCreate\\(\\).",
  "labels": [
    "FieldBundle"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "LONG: FieldBundle should support more grid types",
  "discussion_thread": {
    "_id": "d74634d1",
    "posts": [
      {
        "text": "- **labels**: 588643 --> FieldBundle\n- **assigned_to**: nobody --> feiliu\n- **summary**: FieldBundle should support more grid types --> LONG: FieldBundle should support more grid types",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2009-05-22 16:29:04",
        "slug": "983d",
        "subject": "#162 LONG: FieldBundle should support more grid types"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 17:07:24",
        "slug": "3b2b",
        "subject": "#162 LONG: FieldBundle should support more grid types"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:07:24",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d312e2718463761fbfe2e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d74634d1/",
  "ticket_num": 162,
  "custom_fields": {
    "_priority": "9"
  },
  "created_date": "2009-04-15 17:09:20"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Shujia Zhou\r\n\r\nThank you for the update. Please let me know when the regridding  capability will be formally released. In addition, I think it would be great to have a  demo code to show how to set up a gaussian grid so that a user can easily use  esmf regridding between gaussian and others.\r\n\r\n\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "RGRD: Gaussian grid example",
  "discussion_thread": {
    "_id": "115fe2d6",
    "posts": [
      {
        "text": "This results from support request \\#2786633",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-05-13 21:33:17",
        "slug": "ba32",
        "subject": "#163 RGRD: Gaussian grid example"
      },
      {
        "text": "- **summary**: Gaussian regridding demo --> RGRD: Gaussian regridding demo",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 22:04:05",
        "slug": "ee2e",
        "subject": "#163 RGRD: Gaussian grid example"
      },
      {
        "text": "- **summary**: RGRD: Gaussian regridding demo --> RGRD: Gaussian grid example",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 12:06:19",
        "slug": "6522",
        "subject": "#163 RGRD: Gaussian grid example"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 12:06:19",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d312e2718463761fbfe40",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/115fe2d6/",
  "ticket_num": 163,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2009-05-13 21:32:03"
},{
  "status": "pending",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Tom Henderson, NOAA\r\n\r\nThis was a request from April of 2008 from Tom Henderson. He had emailed me directly, and I had written back to him directly on the same day. Since it seemed just like a person-to-person exchange, about a functionality that had already been implemented I did not open a ticket at that time. However, Tom just sent me an update on the issue, over a year after our last exchange on this. It may actually contain information we want to keep track of. Thus, for the record, I am opening a feature request now, forward the emails with the respective ticket number, and mark it pending.\r\n\r\nFrom TomH:\r\n\r\nGerhard,\r\n\r\nThe model I'm currently porting to ESMF has the capability to split off\r\nseparate MPI tasks as \"output servers\" to overlap output with\r\ncommunication \\(etc.\\).  This works in the traditional manner by splitting\r\nMPI\\_COMM\\_WORLD and running user-code tasks on a subset communicator\r\nit creates.  It would be convenient to be able to pass the subset\r\ncommunicator into ESMF during ESMF\\_Initialize\\(\\).\r\n\r\nIs this possible now?  \\(I don't see mention of it in the docs.\\)\r\n\r\nIf not would it be easy to do?\r\n\r\nThis is not a long-term solution for us - we'll eventually re-implement or\r\nre-use the same functionality in an ESMF way.  However, it would be very\r\nconvenient during development.  We can run without the separate \"output\r\nservers\", however in some configurations we see a large performance hit\r\n\\(&gt; 50%\\).\r\n\r\nIf this seems reasonable I'll propose it to the jst list.\r\n\r\nThanks,\r\n\r\nTom\r\n",
  "labels": [
    "AppDriver"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "add an mpi communicator argument to ESMF_Initialize()",
  "discussion_thread": {
    "_id": "1d5fa888",
    "posts": [
      {
        "text": "This feature has been available since 3.0.1. TomH to try it out and let us know.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-05-22 15:07:57",
        "slug": "0594",
        "subject": "#164 add an mpi communicator argument to ESMF_Initialize()"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-05-22 15:07:57",
        "slug": "4205",
        "subject": "#164 add an mpi communicator argument to ESMF_Initialize()"
      },
      {
        "text": "- **priority**: 5 --> 7\n- **status**: pending --> open",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-03-17 16:27:02",
        "slug": "2e29",
        "subject": "#164 add an mpi communicator argument to ESMF_Initialize()"
      },
      {
        "text": "sent email requesting update on FIM/NEMS integration work\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-03-17 17:06:07",
        "slug": "a938",
        "subject": "#164 add an mpi communicator argument to ESMF_Initialize()"
      },
      {
        "text": "- **priority**: 7 --> 5\n- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-03-17 17:06:07",
        "slug": "54eb",
        "subject": "#164 add an mpi communicator argument to ESMF_Initialize()"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-17 17:06:07",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d312f2718463761fbfe57",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/1d5fa888/",
  "ticket_num": 164,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-05-22 03:51:15"
},{
  "status": "pending",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  Arlindo\r\n\r\nBackground grid for location streams.",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "cdeluca",
  "assigned_to_id": "4f568833b9363c6a5a000769",
  "private": false,
  "summary": "Background grid for loc streams",
  "discussion_thread": {
    "_id": "a8274517",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-06 17:22:53",
        "slug": "0f3e",
        "subject": "#165 Background grid for loc streams"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 17:03:57",
        "slug": "4e40",
        "subject": "#165 Background grid for loc streams"
      },
      {
        "text": "- **priority**: 9 --> 8\n- **assigned_to**: oehmke --> cdeluca",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-17 16:26:33",
        "slug": "1480",
        "subject": "#165 Background grid for loc streams"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-17 16:26:33",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31312718463761fbfe77",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a8274517/",
  "ticket_num": 165,
  "custom_fields": {
    "_priority": "8",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-05-22 17:40:56"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "From Ryan: Suggestion to enhance ESMF\\_StatePrint to allow the printing of the contents of a state object.  A list of all objects within the state could be printed out, and any/all objects contents could also be printed.",
  "labels": [
    "State"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Enhance print method to show contents of state objects",
  "discussion_thread": {
    "_id": "8ddd58ac",
    "posts": [
      {
        "text": "It would be nice if the Print routine would show not only what objects are in each State, but also the connectivity of the objects themselves.  For example, if there are 5 Fields in a FieldBundle in a State, as well as 5 other Fields directly attached to the State, as well as a nested State inside the parent State - it would be nice to be able to see that the first five Fields have a different relationship to the State than the second five Fields.  This will be handy from the development perspective, as it will facilitate the validation of the Print routine run on States with complex object hierarchies.  Another nice feature would be the ability to visualize these relationships between objects in a State, this would be especially useful from the users perspective.  \n\nIt would be especially handy if this functionality was implemented in the Print routine of the Base class.  This would allow for this routine to be called recursively, in which case the connectivity would be easily tracked through the recursion itself \\(as all ESMF objects have a Base\\). ",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-06-10 16:32:18",
        "slug": "bdc6",
        "subject": "#166 Enhance print method to show contents of state objects"
      },
      {
        "text": "The ESMF\\_StatePrint method has been enhanced for 5.0 to optionally show nested State objects.  However it does not currently print the contents of non-State containers \\(e.g., individual Fields within a FieldBundle.\\)",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-06-02 17:32:42",
        "slug": "69db",
        "subject": "#166 Enhance print method to show contents of state objects"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-06-08 21:58:00",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31322718463761fbfe8e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/8ddd58ac/",
  "ticket_num": 166,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-06-08 21:58:00"
},{
  "status": "closed",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "It would be good to have a version of the Array communication methods \\(e.g. Scatter\\) that work just within the computational region. This would be useful for operating on Field and Grid coordinate Arrays which don't fill the entire exclusive region.",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Array Comm.  within just  computational region",
  "discussion_thread": {
    "_id": "e125c373",
    "posts": [
      {
        "text": "- **priority**: 7 --> 5\n- **summary**: Array Comm.  within just  computational region --> LONG: Array Comm.  within just  computational region",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-08-06 17:22:18",
        "slug": "8b5a",
        "subject": "#167 LONG: Array Comm.  within just  computational region"
      },
      {
        "text": "WHO: Bob Oehmke \\(core team member\\). \r\n\r\nThis is no longer necessary with the distgrid per stagger change. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 18:18:21",
        "slug": "5a3e",
        "subject": "#167 LONG: Array Comm.  within just  computational region"
      },
      {
        "text": "I agree with Bob that this has become obsolete.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 23:12:04",
        "slug": "7ab4",
        "subject": "#167 LONG: Array Comm.  within just  computational region"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 23:12:04",
        "slug": "f770",
        "subject": "#167 LONG: Array Comm.  within just  computational region"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-12-04 23:12:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31322718463761fbfea1",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e125c373/",
  "ticket_num": 167,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-06-22 21:50:18"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "\r\nHook up  Totalwidths to AddCoord \\(and probably AddItem\\). ",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Finish implementing Grid Coord TotalWidths",
  "discussion_thread": {
    "_id": "145582c3",
    "posts": [
      {
        "text": "Requested by Tim Campbell of NRL",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-06-23 17:18:17",
        "slug": "80ab",
        "subject": "#168 Finish implementing Grid Coord TotalWidths"
      },
      {
        "text": "WHO: Tim Campbell From NRL, but is useful for anyone who would want to pad or halo coordinates. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 18:24:57",
        "slug": "d902",
        "subject": "#168 Finish implementing Grid Coord TotalWidths"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 17:02:12",
        "slug": "58b3",
        "subject": "#168 Finish implementing Grid Coord TotalWidths"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:02:12",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31332718463761fbfebd",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/145582c3/",
  "ticket_num": 168,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-06-23 17:17:26"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "\r\nWho: Tim Campbell from NRL\r\n\r\nAdd the ability to add a coordinate from a native fortran array.",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Add ability to AddCoord from native array.",
  "discussion_thread": {
    "_id": "6516e33d",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-06-23 17:24:31",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31342718463761fbfed4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6516e33d/",
  "ticket_num": 169,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-06-23 17:24:31"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Since SCRIP weights are used by lots of components, it would be useful to have functionality to read in SCRIP weights from a file and create a sparse matrix in ESMF format. It might also be a good idea to have this combined with ArraySMM to have a subroutine to read in SCRIP weights from a file and output a routehandle to do the SMM. This functionality can either be part of ESMF or \"contributed\" code..",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "RGRD: Read SCRIP wghts, output matrix, or create RouteHandle",
  "discussion_thread": {
    "_id": "114f9648",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> feiliu\n- **summary**: Read in SCRIP weights and create RouteHandle --> RGRD: Read in SCRIP weights and create RouteHandle",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 22:03:26",
        "slug": "d16d",
        "subject": "#170 RGRD: Read SCRIP wghts, output matrix, or create RouteHandle"
      },
      {
        "text": "WHO: CCSM which may want to use weights from the SCRIP package. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 18:01:05",
        "slug": "baee",
        "subject": "#170 RGRD: Read SCRIP wghts, output matrix, or create RouteHandle"
      },
      {
        "text": "- **summary**: RGRD: Read in SCRIP weights and create RouteHandle --> RGRD: Read SCRIP wghts, output matrix, or create RouteHandle",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-04-22 22:30:14",
        "slug": "6d13",
        "subject": "#170 RGRD: Read SCRIP wghts, output matrix, or create RouteHandle"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-04-22 22:30:14",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31352718463761fbfedc",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/114f9648/",
  "ticket_num": 170,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-07-01 18:58:25"
},{
  "status": "closed",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Jim Edwards mentioned this at the CCSM community meeting. It would be good to have the option to use PIO underneath ESMF I/O to take advantage of PIO's parallel I/O optimizations. ",
  "labels": [
    "I/O"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "LONG: PIO or other high performance IO",
  "discussion_thread": {
    "_id": "6e5c3fcd",
    "posts": [
      {
        "text": "- **summary**: Ability to use PIO underneath ESMF I/O --> LONG: Ability to use PIO underneath ESMF I/O",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-08-11 23:58:50",
        "slug": "53e3",
        "subject": "#171 LONG: PIO or other high performance IO"
      },
      {
        "text": "- **priority**: 5 --> 9\n- **summary**: LONG: Ability to use PIO underneath ESMF I/O --> LONG: High performance IO",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 14:51:35",
        "slug": "4874",
        "subject": "#171 LONG: PIO or other high performance IO"
      },
      {
        "text": "- **summary**: LONG: High performance IO --> LONG: PIO or other high performance IO",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 14:57:32",
        "slug": "f93a",
        "subject": "#171 LONG: PIO or other high performance IO"
      },
      {
        "text": "- **assigned_to**: oehmke --> samsoncheung",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 16:56:14",
        "slug": "3fb2",
        "subject": "#171 LONG: PIO or other high performance IO"
      },
      {
        "text": "We have implemented ESMF\\_ArrayRead/Write using PIO \\(binary and NetCDF/PNetCDF\\) capability. Further, we extend this IO capability to Filed, ArrayBundle, and FieldBundle.  The above PIO implementation is released under ESMF\\_5\\_1\\_0. We are closing this ticket.",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2010-11-05 17:02:10",
        "slug": "c01e",
        "subject": "#171 LONG: PIO or other high performance IO"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2010-11-05 17:02:10",
        "slug": "6c97",
        "subject": "#171 LONG: PIO or other high performance IO"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:02:10",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31362718463761fbfef4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6e5c3fcd/",
  "ticket_num": 171,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-07-01 19:07:49"
},{
  "status": "closed",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Add the ability to calculate regrid weights for unstructured grids to the off-line regridding. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": " RGRD: Unstructured grids in off-line regridding ",
  "discussion_thread": {
    "_id": "1f6515d2",
    "posts": [
      {
        "text": "- **summary**: Support for unstructured grids in off-line regridding --> LONG: RGRD: Unstructured grids in off-line regridding (4)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 21:55:19",
        "slug": "611a",
        "subject": "#172  RGRD: Unstructured grids in off-line regridding "
      },
      {
        "text": "Now that peggy has added most of this most of what is still needed is just finalizing the format. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-06-14 04:55:50",
        "slug": "bf66",
        "subject": "#172  RGRD: Unstructured grids in off-line regridding "
      },
      {
        "text": "- **summary**: LONG: RGRD: Unstructured grids in off-line regridding (4) -->  RGRD: Unstructured grids in off-line regridding ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-06-14 04:55:51",
        "slug": "c043",
        "subject": "#172  RGRD: Unstructured grids in off-line regridding "
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:54:37",
        "slug": "9dee",
        "subject": "#172  RGRD: Unstructured grids in off-line regridding "
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:54:37",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31372718463761fbff1a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/1f6515d2/",
  "ticket_num": 172,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-07-01 19:10:34"
},{
  "status": "open",
  "reported_by_id": "5048c2deb9363c1e4f0e247b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "peggyli",
  "description": "Currently, the ESMF\\_MeshCreate\\(\\) only supports mesh creation locally by decomposing elements.  However, each PET has to call ESMF\\_MeshCreate\\(\\) with its local set of nodes and elements and each PET has to know whether a node is shared by multiple PETs and determine which PET is the owner of the shared node.   It will be nice if ESMF can figure out how the nodes be distributed based on the element distribution.  In order to do that, it may be necessary to provide a global ESMF\\_MeshCreate\\(\\) API to allow user to create a parallel mesh by providing a decomposition metho from one single node.  The detail need to be worked out.\r\n\r\nSecondly, in ESMF\\_MeshAddElement\\(\\), you provide a elemConn array and elemType array corresponding to each element.  The elemConn table contains the node indexes used by the element and the elemType defines the type of the element \\(e.g., Quad, Tetra,..\\).  the node indexes are local node indexes to its local node array \\(vs. the global node ID defined in the mesh\\).   A mesh usually contains elements with the same type of topology, thus, it is a waste of memory to define the type for each element.  The elemType can be provided to ESMF\\_MeshCreate\\(\\) to define the type for all the elements in the mesh.  The local node ID for elemConn array is also confusing and is not properly documented.  ",
  "labels": [],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "improve ESMF_MeshCreate() API  ",
  "discussion_thread": {
    "_id": "eb8e6454",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9\n- **summary**: improve ESMF_MeshCreate() API  --> improve ESMF_MeshCreate() API  ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:53:08",
        "slug": "6701",
        "subject": "#173 improve ESMF_MeshCreate() API  "
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:53:36",
        "slug": "b479",
        "subject": "#173 improve ESMF_MeshCreate() API  "
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:53:36",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31382718463761fbff36",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/eb8e6454/",
  "ticket_num": 173,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-07-15 17:21:09"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Add the ability to have attributes on LocStreams",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG: Add Attributes to LocStreams (3)",
  "discussion_thread": {
    "_id": "01172bb7",
    "posts": [
      {
        "text": "- **labels**: 643201 --> Attribute\n- **milestone**: 287654 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-07-15 20:46:30",
        "slug": "0766",
        "subject": "#174 LONG: Add Attributes to LocStreams (3)"
      },
      {
        "text": "WHO:  Robert Oehmke",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-11-30 14:36:10",
        "slug": "8ccd",
        "subject": "#174 LONG: Add Attributes to LocStreams (3)"
      },
      {
        "text": "- **summary**: Add Attributes to LocStreams --> LONG: Add Attributes to LocStreams",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-11-30 14:36:10",
        "slug": "f5fd",
        "subject": "#174 LONG: Add Attributes to LocStreams (3)"
      },
      {
        "text": "- **summary**: LONG: Add Attributes to LocStreams --> LONG: Add Attributes to LocStreams (3)",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-15 13:50:40",
        "slug": "aab2",
        "subject": "#174 LONG: Add Attributes to LocStreams (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-15 13:50:40",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31392718463761fbff48",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/01172bb7/",
  "ticket_num": 174,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-07-15 20:37:30"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "\r\nConsider the implications of an arbitrary grid with less than the full number of points and make sure we want to support it as an official option. This would let users save memory by removing masked pieces from a grid, however, it will also make regridding an arb grid more difficult. If supported then the documentation should be changed to reflect this decision. ",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Arb Grid with less than full number of points (8)",
  "discussion_thread": {
    "_id": "b93e8731",
    "posts": [
      {
        "text": "WHO: Bob Oehmke \\(core team member\\) after discussions with Peggy Li, Gerhard T. and rest of core team.",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 18:16:25",
        "slug": "d857",
        "subject": "#175 LONG: Arb Grid with less than full number of points (8)"
      },
      {
        "text": "- **summary**: Arb Grid with less than full number of points --> LONG: Arb Grid with less than full number of points (8)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 18:16:26",
        "slug": "f759",
        "subject": "#175 LONG: Arb Grid with less than full number of points (8)"
      },
      {
        "text": "Added as a consequence of ticket 2822635. Tim didn't ask for a feature request, but it seemed good to keep track of the need. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-10 18:56:31",
        "slug": "7453",
        "subject": "#175 LONG: Arb Grid with less than full number of points (8)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-11-30 18:16:26",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d313a2718463761fbff65",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b93e8731/",
  "ticket_num": 175,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-07-17 17:39:13"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "This is from an email from Gerhard on July 28, 2009:\r\n\r\nThere are several things that need to happen before we could support full user code reaction to rc/=ESMF\\_SUCCESS:\r\n\r\n1\\) The error codes are currently not available through ESMFMod\\! This needs to be fixed if we want user code to actively test against any of the predefined ESMF\\_ RC. Note that ESMF\\_SUCCESS does come through ESMFMod, so testing against rc/=ESMF\\_SUCCESS \\_is\\_ currently supported.\r\n\r\n2\\) As you point out, we would need a conversion from ESMC\\_ -&gt; ESMF\\_ error codes. Practically this is as simple as subtracting 500 from the RC code, so it is trivial in principle, but it would need to be added to all of the glue code routines.\r\n\r\n3\\) Finally, if we really want user code to keep running after rc/=ESMF\\_SUCCESS has been received from an ESMF call, we need to change our 'abort on error' policy. This requires that we do thorough garbage collection even in case of error. I would really like to see this happen, but w/o a solid garbage collection scheme in place it will be a mess on the Fortran side, so it has to wait until we have time for that. ",
  "labels": [
    "LogErr"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "LONG:support full user code reaction to rc /= ESMF_SUCCESS",
  "discussion_thread": {
    "_id": "94e3818e",
    "posts": [
      {
        "text": "- **summary**: support full user code reaction to rc /= ESMF_SUCCESS --> LONG:support full user code reaction to rc /= ESMF_SUCCESS",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-08-06 17:20:00",
        "slug": "fb5a",
        "subject": "#176 LONG:support full user code reaction to rc /= ESMF_SUCCESS"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-06 17:20:00",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d313a2718463761fbff7c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/94e3818e/",
  "ticket_num": 176,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-07-28 23:41:50"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "This feature request stems from the work done by Xinchi Wang on the WaterML use test case in his 2009 summer internship.  In order to allow a time series of real data at a fixed location to be represented in ESMF it is necessary to build a Field on top of a LocStream, which utilizes Arrays to hold the time series data.  We decided that if Arrays could hold Attributes and Attribute packages on each element of each Array inside the LocStream then we could represent the time series metadata in a consistent fashion.  This will require a list of Attribute pointers in the Array, which has a one-to-one correspondence to the number of elements in the Array.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG: Add Attributes to individual Array elements (4)",
  "discussion_thread": {
    "_id": "7095fdf1",
    "posts": [
      {
        "text": "- **summary**: Add Attributes to individual Array elements --> LONG:Add Attributes to individual Array elements",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-08-06 17:19:32",
        "slug": "eba1",
        "subject": "#177 LONG: Add Attributes to individual Array elements (4)"
      },
      {
        "text": "WHO: Ryan O'Kuinghttons",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-11-30 14:37:25",
        "slug": "ec8d",
        "subject": "#177 LONG: Add Attributes to individual Array elements (4)"
      },
      {
        "text": "- **summary**: LONG:Add Attributes to individual Array elements --> LONG: Add Attributes to individual Array elements",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-11-30 14:37:25",
        "slug": "04e2",
        "subject": "#177 LONG: Add Attributes to individual Array elements (4)"
      },
      {
        "text": "- **summary**: LONG: Add Attributes to individual Array elements --> LONG: Add Attributes to individual Array elements (4)",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-15 13:50:14",
        "slug": "017e",
        "subject": "#177 LONG: Add Attributes to individual Array elements (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-15 13:50:14",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d313b2718463761fbff89",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7095fdf1/",
  "ticket_num": 177,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-07-28 23:50:58"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Will Sawyer from  the Swiss Center for Scientific Computing\r\n\r\nHi ESMFers,\r\n\r\nJobs change, but not the work...\r\n\r\nTwo questions:  I'm trying to compile esmf\\_3\\_1\\_0rp2 on an XT5 with gfortran\r\n\\(after compiling with PGI which seems to have gone OK\\).  Has anyone else\r\ntried to do this on Jaguar? It seems the nightly tests on Jaguar are with PGI.\r\nWith gnu during 'make check' several tests fail:\r\n\r\nESMF\\_ComponentUTest.stdout:  FAIL  Creating a Gridded Component, ESMF\\_ComponentUTest.F90, line          54  Did not return ESMF\\_SUCCESS\r\nESMF\\_ComponentUTest.stdout:  FAIL  Printing a Gridded Component, ESMF\\_ComponentUTest.F90, line          62  Did not return ESMF\\_SUCCESS\r\nESMF\\_ComponentUTest.stdout:  FAIL  Destroying a Gridded Component, ESMF\\_ComponentUTest.F90, line          70  Did not return ESMF\\_SUCCESS\r\nESMF\\_CompSetServUTest.stdout:  FAIL  Creating a Component Test, ESMF\\_CompSetServUTest.F90, line          81  Did not return ESMF\\_SUCCESS\r\nESMF\\_CompSetServUTest.stdout:  FAIL  Setting Component Services, ESMF\\_CompSetServUTest.F90, line          93  Did not return ESMF\\_SUCCESS\r\nESMF\\_CompSetServUTest.stdout:  FAIL  Calling Component Init, ESMF\\_CompSetServUTest.F90, line         105  Did not return ESMF\\_SUCCESS\r\nESMF\\_CompSetServUTest.stdout:  FAIL  Destroying a Component Test, ESMF\\_CompSetServUTest.F90, line         224  Did not return ESMF\\_SUCCESS\r\nESMF\\_GridCompCreateUTest.stdout:  FAIL  Creating a Component Test, ESMF\\_GridCompCreateUTest.F90, line          80  Did not return ESMF\\_SUCCESS\r\n\r\nIn order to get it to the tests to run with the XT environment, some modification\r\nto build\\_rules.mk and to the run procedure were needed.  Possibly these explain\r\nthe above problem, but the PGI-compiled version passed all the checks.\r\n\r\nSecondly, has anyone tried to instrument ESMF with TAU \\(2.18.1p1\\)? Tau runs\r\ninto problems when subroutines contain macros such as ESMF\\_INIT\\_CHECK\\_DEEP.\r\nA log is attached below.  Probably I'm not the first to encounter this problem.\r\n\r\n/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/craycnl/bin/tau\\_compiler.sh -optPdtDir=\"/apps/tau/2.18.2p2/pgi\\_805/pdtoolkit-3.14.1/craycnl\" -optPdtCOpts=\"-I/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/include -DPROFILING\\_ON            -DTAU\\_PAPI -I/opt/xt-tools/papi/3.6.2/v23/linux/src -I/opt/xt-tools/papi/3.6.2/v23/linux/include             -DTAU\\_DOT\\_H\\_LESS\\_HEADERS                 -DTAU\\_MPI -DTAU\\_MPI\\_THREADED      -DTAU\\_LINUX\\_TIMERS                   -DTAU\\_MPIGREQUEST     -DTAU\\_MPIDATAREP    -DTAU\\_MPIERRHANDLER     -DTAU\\_MPIATTRFUNCTION    -DTAU\\_MPITYPEEX    -DTAU\\_MPIADDERROR         -DTAU\\_LARGEFILE -D\\_LARGEFILE64\\_SOURCE                    -DTAU\\_BFD  -DTAU\\_MPIFILE    -DHAVE\\_GNU\\_DEMANGLE    -I/opt/mpt/default/xt/mpich2-pgi/include\" -optPdtCxxOpts=\"-I/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/include -DPROFILING\\_ON            -DTAU\\_PAPI -I/opt/xt-tools/papi/3.6.2/v23/linux/src -I/opt/xt-tools/papi/3.6.2/v23/linux/include             -DTAU\\_DOT\\_H\\_LESS\\_HEADERS                 -DTAU\\_MPI -DTAU\\_MPI\\_THREADED      -DTAU\\_LINUX\\_TIMERS                   -DTAU\\_MPIGREQUEST     -DTAU\\_MPIDATAREP    -DTAU\\_MPIERRHANDLER     -DTAU\\_MPIATTRFUNCTION    -DTAU\\_MPITYPEEX    -DTAU\\_MPIADDERROR         -DTAU\\_LARGEFILE -D\\_LARGEFILE64\\_SOURCE                    -DTAU\\_BFD  -DTAU\\_MPIFILE    -DHAVE\\_GNU\\_DEMANGLE    -I/opt/mpt/default/xt/mpich2-pgi/include\" -optTauInstr=\"/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/craycnl/bin/tau\\_instrumentor\" -optNoMpi -optOpariDir=\"\" -optOpariTool=\"\" -optTauCC=\"cc  \" -optTauIncludes=\"-I/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/include -I/opt/mpt/default/xt/mpich2-pgi/include\" -optTauDefs=\"-DPROFILING\\_ON            -DTAU\\_PAPI -I/opt/xt-tools/papi/3.6.2/v23/linux/src -I/opt/xt-tools/papi/3.6.2/v23/linux/include             -DTAU\\_DOT\\_H\\_LESS\\_HEADERS                 -DTAU\\_MPI -DTAU\\_MPI\\_THREADED      -DTAU\\_LINUX\\_TIMERS                   -DTAU\\_MPIGREQUEST     -DTAU\\_MPIDATAREP    -DTAU\\_MPIERRHANDLER     -DTAU\\_MPIATTRFUNCTION    -DTAU\\_MPITYPEEX    -DTAU\\_MPIADDERROR         -DTAU\\_LARGEFILE -D\\_LARGEFILE64\\_SOURCE                    -DTAU\\_BFD  -DTAU\\_MPIFILE    -DHAVE\\_GNU\\_DEMANGLE   \" -optTauCompile=\"-I/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/include -I/opt/mpt/default/xt/mpich2-pgi/include -DPROFILING\\_ON            -DTAU\\_PAPI -I/opt/xt-tools/papi/3.6.2/v23/linux/src -I/opt/xt-tools/papi/3.6.2/v23/linux/include             -DTAU\\_DOT\\_H\\_LESS\\_HEADERS                 -DTAU\\_MPI -DTAU\\_MPI\\_THREADED      -DTAU\\_LINUX\\_TIMERS                   -DTAU\\_MPIGREQUEST     -DTAU\\_MPIDATAREP    -DTAU\\_MPIERRHANDLER     -DTAU\\_MPIATTRFUNCTION    -DTAU\\_MPITYPEEX    -DTAU\\_MPIADDERROR         -DTAU\\_LARGEFILE -D\\_LARGEFILE64\\_SOURCE                    -DTAU\\_BFD  -DTAU\\_MPIFILE    -DHAVE\\_GNU\\_DEMANGLE    \" -optLinking=\"-L/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/craycnl/lib -lTauMpi-papi-mpi-pdt-pgi    -L/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/craycnl/lib -ltau-papi-mpi-pdt-pgi     /opt/xt-tools/papi/3.6.2/v23/linux/lib/libpapi.a                  -L/opt/pgi/8.0.5/linux86-64/8.0/bin/../lib -lstd -lC          \" -optSharedLinking=\"-L/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/craycnl/lib/shared-papi-mpi-pdt-pgi -L/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/craycnl/lib -lTauMpi-papi-mpi-pdt-pgi    -L/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/craycnl/lib -lTAU   /opt/xt-tools/papi/3.6.2/v23/linux/lib/libpapi.a                -L/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/craycnl/lib -lTauMpi-papi-mpi-pdt-pgi   -L/opt/pgi/8.0.5/linux86-64/8.0/bin/../lib -lstd -lC          \"  -optIncludeMemory=\"-I/apps/tau/2.18.2p2/pgi\\_805/tau-2.18.2p2/include/Memory\" -optCompInstOption=\"-Mprof=func \" -optCompInstLinking=\"-Mprof=func /opt/pgi/8.0.5/linux86-64/8.0/bin/../lib/libpgnod\\_prof.a \"  ftn -c -O -mcmodel=small  -I/users/wsawyer/Software/esmf\\_3\\_1\\_0rp2/build\\_config/Linux.ftn\\_pgi.default -I/users/wsawyer/Software/esmf\\_3\\_1\\_0rp2/src/Infrastructure -I/users/wsawyer/Software/esmf\\_3\\_1\\_0rp2/src/Superstructure -I/users/wsawyer/Software/esmf\\_3\\_1\\_0rp2/mod/modO/Linux.ftn\\_pgi.64.mpich2.default -I/users/wsawyer/Software/esmf\\_3\\_1\\_0rp2/src/include   -DSx86\\_64\\_small=1 -DESMF\\_OS\\_Linux=1 /users/wsawyer/Software/esmf\\_3\\_1\\_0rp2/src/Infrastructure/LocalArray/interface/ESMF\\_LocalArrayCreate.F90\r\nERROR: specified column number \\(124\\) is beyond the end of the line \\(62 in length\\)\r\nline =     ESMF\\_INIT\\_CHECK\\_DEEP\\(ESMF\\_LocalArrayGetInit, larrayIn, rc\\) \\(894\\)\r\n\r\n\r\nThanks for your thoughts.\r\n\r\n\\--Will\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: ESMF on XT / gfortran - and- TAU instrumentation (2)",
  "discussion_thread": {
    "_id": "883d9703",
    "posts": [
      {
        "text": "1\\) We need to ensure that ESMF can be compiled with TAU instrumentation.\r\n2\\) Add gfortran option to our CrayXT support.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-08-31 17:19:54",
        "slug": "e5b1",
        "subject": "#178 LONG: ESMF on XT / gfortran - and- TAU instrumentation (2)"
      },
      {
        "text": "- **labels**: 509038 --> Build/Install\n- **milestone**: 155253 --> \n- **summary**: ESMF on XT / gfortran; with TAU instrumentation --> ESMF on XT / gfortran - and- TAU instrumentation",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-08-31 17:19:55",
        "slug": "889f",
        "subject": "#178 LONG: ESMF on XT / gfortran - and- TAU instrumentation (2)"
      },
      {
        "text": "- **summary**: ESMF on XT / gfortran - and- TAU instrumentation --> LONG: ESMF on XT / gfortran - and- TAU instrumentation (2)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 20:03:39",
        "slug": "70e4",
        "subject": "#178 LONG: ESMF on XT / gfortran - and- TAU instrumentation (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-12-04 20:03:39",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d313b2718463761fbffa5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/883d9703/",
  "ticket_num": 178,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-08-07 17:07:45"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Peggy Li from JPL\r\n\r\nThe existing ESMF\\_MeshGet\\(\\) gets the DistGrid for the Nodes and the Elements of the mesh and the total number of local nodes and local elements in a local PET.  There is no way to find out \r\n\r\n1\\.  The total number of nodes or elements in the global mesh\r\n2\\.  The node coordinates\r\n3\\.  The element connection arrays\r\n\r\nI think ESMF\\_MeshGet\\(\\) should be expanded to return the above information, other information that may be useful includes the topology of the mesh and the dimension of the coordinates.\r\n\r\npeggy\r\n\r\n",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "ESMF_MeshGet() interface",
  "discussion_thread": {
    "_id": "f276bacb",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-08-25 16:53:17",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d313d2718463761fbffbb",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f276bacb/",
  "ticket_num": 179,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-08-25 16:53:17"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "\r\nIt would be good to add to ESMF the ability to break a regrid operation between two Grids into a set of regrid operations on a subset of the Grid dimensions\r\n\\(e.g breaking a regrid between two 3D grids into a regrid between the 2D parts of the Grids and a regrid between the 1D parts\\). This capability has the potential to significantly reduce the resources taken by the operation. The decision to break up the regrid can either be user driven or automatic based on the factorization of the Grid coordinate arrays. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: RGRD: Factorize regrid for performance (6) ",
  "discussion_thread": {
    "_id": "7a775875",
    "posts": [
      {
        "text": "\r\nMain roadblocks are getting 1D Meshes to work, getting these through GridToMesh and changing Array SSM Store and Run to work with factorized sparse mat mul representation. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 21:52:42",
        "slug": "2886",
        "subject": "#180 LONG: RGRD: Factorize regrid for performance (6) "
      },
      {
        "text": "- **summary**: Factorized regrid --> LONG: RGRD: Factorized regrid (5) ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 21:52:43",
        "slug": "bb3a",
        "subject": "#180 LONG: RGRD: Factorize regrid for performance (6) "
      },
      {
        "text": "WHO; Peggy Li from JPl. However, any user who is doing a regridding where neither of the grids is curvilinear in all dimensions will be helped by this.  ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 17:59:27",
        "slug": "a353",
        "subject": "#180 LONG: RGRD: Factorize regrid for performance (6) "
      },
      {
        "text": "- **summary**: LONG: RGRD: Factorized regrid (5)  --> LONG: RGRD: Factorized regrid (6) ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-01-12 21:37:11",
        "slug": "dfd3",
        "subject": "#180 LONG: RGRD: Factorize regrid for performance (6) "
      },
      {
        "text": "- **priority**: 5 --> 7\n- **summary**: LONG: RGRD: Factorized regrid (6)  --> LONG: RGRD: Factorize regrid for performance (6) ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 12:48:14",
        "slug": "e8d0",
        "subject": "#180 LONG: RGRD: Factorize regrid for performance (6) "
      },
      {
        "text": "- **labels**: 904972 --> 643199\n- **milestone**: 155255 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 12:49:02",
        "slug": "64dd",
        "subject": "#180 LONG: RGRD: Factorize regrid for performance (6) "
      },
      {
        "text": "- **milestone**:  --> 166458",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 12:49:30",
        "slug": "13f2",
        "subject": "#180 LONG: RGRD: Factorize regrid for performance (6) "
      },
      {
        "text": "- **milestone**: 166458 --> \n- **labels**: 643199 --> Regrid",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-06-02 16:01:39",
        "slug": "f623",
        "subject": "#180 LONG: RGRD: Factorize regrid for performance (6) "
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-06-02 16:01:39",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d313d2718463761fbffc3",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7a775875/",
  "ticket_num": 180,
  "custom_fields": {
    "_priority": "7"
  },
  "created_date": "2009-08-28 19:42:44"
},{
  "status": "closed",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Add the ability to regrid to interpolate between two grids such that the integral of the quantity in the field is preserved between the source and destination grids. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG:  RGRD: Add conservative interpolation to Regrid (8)",
  "discussion_thread": {
    "_id": "d512f65b",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-09-18 21:51:04",
        "slug": "ee08",
        "subject": "#181 LONG:  RGRD: Add conservative interpolation to Regrid (8)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-09-18 21:54:17",
        "slug": "4abe",
        "subject": "#181 LONG:  RGRD: Add conservative interpolation to Regrid (8)"
      },
      {
        "text": "- **summary**: Add conservative interpolation to regrid --> LONG: Add conservative interpolation to regrid",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-09-21 18:45:05",
        "slug": "af43",
        "subject": "#181 LONG:  RGRD: Add conservative interpolation to Regrid (8)"
      },
      {
        "text": "- **summary**: LONG: Add conservative interpolation to regrid --> LONG:  RGRD: Add conservative interpolation to regrid (?)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 21:48:46",
        "slug": "6f6a",
        "subject": "#181 LONG:  RGRD: Add conservative interpolation to Regrid (8)"
      },
      {
        "text": "FROM: CCSM",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-11-30 14:49:00",
        "slug": "7ddf",
        "subject": "#181 LONG:  RGRD: Add conservative interpolation to Regrid (8)"
      },
      {
        "text": "- **summary**: LONG:  RGRD: Add conservative interpolation to regrid (?) --> LONG:  RGRD: Add conservative interpolation to Regrid",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-11-30 14:49:01",
        "slug": "9f38",
        "subject": "#181 LONG:  RGRD: Add conservative interpolation to Regrid (8)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 14:50:32",
        "slug": "57e3",
        "subject": "#181 LONG:  RGRD: Add conservative interpolation to Regrid (8)"
      },
      {
        "text": "- **summary**: LONG:  RGRD: Add conservative interpolation to Regrid --> LONG:  RGRD: Add conservative interpolation to Regrid (8)",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-15 13:49:38",
        "slug": "a9c0",
        "subject": "#181 LONG:  RGRD: Add conservative interpolation to Regrid (8)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:48:50",
        "slug": "f788",
        "subject": "#181 LONG:  RGRD: Add conservative interpolation to Regrid (8)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:48:50",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d313f2718463761fbfff3",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d512f65b/",
  "ticket_num": 181,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-09-01 19:05:25"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Riccardo Rigon from the Universita\\` di Trento, Italy\r\nmethod implemented ?\r\n\r\nThank you in advance for any help,\r\n\r\nriccardo rigon\r\n\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_        \r\nUniversita\\` di Trento         Dipartimento di Ingegneria Civile  e  Ambientale/CUDAM\r\nVia Mesiano, 77, 38050  Trento      \\(ITALIA\\)                        \r\nE-mail:  riccardo.rigon@ing.unitn.it  \r\nPh: +390461882614-10    Fax:+390461882672\r\nWeb page: http://www.ing.unitn.it/dica/hp/?user=rigon\r\nPublications according to ISI: http://www.researcherid.com/rid/B-5395-2008\r\nJGrass \\(Open Source GIS\\): http://www.jgrass.org/\r\nGEOtop \\(Open Source distributed hydrological model\\):  http://www.geotop.org/\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_                                                      \r\n",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": " Add to ESMF a method for calculating conjugate gradient",
  "discussion_thread": {
    "_id": "c4d56e05",
    "posts": [
      {
        "text": "Moved to feature request to add this capability",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-09-11 16:21:13",
        "slug": "8d87",
        "subject": "#182  Add to ESMF a method for calculating conjugate gradient"
      },
      {
        "text": "- **labels**: 1019236 --> Grid - New\n- **milestone**: 495011 --> \n- **summary**:  Is there in ESMF a standard conjugate gradient -->  Add to ESMF a method for calculating conjugate gradient",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-09-11 16:21:17",
        "slug": "3399",
        "subject": "#182  Add to ESMF a method for calculating conjugate gradient"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-09-11 16:21:17",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31402718463761fc0029",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c4d56e05/",
  "ticket_num": 182,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-09-10 15:20:22"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Ensure that regrid works at the pole for CCSM. This means testing the existing options for handling the pole and adding new options if necessary. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "RGRD: Ensure regrid works at pole for CCSM",
  "discussion_thread": {
    "_id": "b956a3bf",
    "posts": [
      {
        "text": "- **labels**:  --> 667262\n- **assigned_to**: nobody --> oehmke\n- **milestone**:  --> 356870",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-09-10 16:07:51",
        "slug": "ac9b",
        "subject": "#183 RGRD: Ensure regrid works at pole for CCSM"
      },
      {
        "text": "- **summary**: Ensure regrid works at pole for CCSM --> RGRD: Ensure regrid works at pole for CCSM",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 21:27:07",
        "slug": "6c39",
        "subject": "#183 RGRD: Ensure regrid works at pole for CCSM"
      },
      {
        "text": "- **milestone**: 356870 --> \n- **labels**: 667262 --> Regrid",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-12-18 18:16:28",
        "slug": "5552",
        "subject": "#183 RGRD: Ensure regrid works at pole for CCSM"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-12-18 18:16:36",
        "slug": "faa4",
        "subject": "#183 RGRD: Ensure regrid works at pole for CCSM"
      },
      {
        "text": "- **priority**: 5 --> 8\n- **status**: pending --> open",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-17 16:27:06",
        "slug": "243a",
        "subject": "#183 RGRD: Ensure regrid works at pole for CCSM"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-17 17:19:20",
        "slug": "f1c6",
        "subject": "#183 RGRD: Ensure regrid works at pole for CCSM"
      },
      {
        "text": "- **priority**: 8 --> 5\n- **status**: pending --> open",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-17 18:39:52",
        "slug": "c63e",
        "subject": "#183 RGRD: Ensure regrid works at pole for CCSM"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-17 18:39:52",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31412718463761fc003b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b956a3bf/",
  "ticket_num": 183,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-09-10 16:06:59"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Currently when a field is created on a Mesh, the field is only created on the local nodes. This can cause a mismatch between the indexing in the Field and the user data. An option should be added to the Field create on Mesh to have the field also include the ghostnodes on the current PET \\(e.g. all the nodes passed into the MeshCreate \\(or MeshAddNodes\\) call\\), to allow the array in the Field to perfectly match the user data. An idea is to make the extra ghost nodes have a sequence index equal to -1, but having them have a value bigger than the biggest sequence index makes sense also. \r\n\r\nNote that this feature should be optional because users may also want to have the field just include local nodes. ",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Include non-local nodes in Field create on Mesh (3)",
  "discussion_thread": {
    "_id": "55a8ee3b",
    "posts": [
      {
        "text": "- **summary**: Ability to include non-local nodes in Field create on Mesh --> LONG: Include non-local nodes in Field create on Mesh",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-09-21 18:46:03",
        "slug": "b688",
        "subject": "#184 LONG: Include non-local nodes in Field create on Mesh (3)"
      },
      {
        "text": "WHO: Tim Campbell from NRL. This will also help to make the interface easier to use for everyone",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 17:52:10",
        "slug": "f17b",
        "subject": "#184 LONG: Include non-local nodes in Field create on Mesh (3)"
      },
      {
        "text": "Thoughts from a Mesh example review:\r\n\r\nAdd a flag to FieldCreateFromMesh to add additional total region to hold the non-local elements. These can then be subsequently haloed with a FieldHalo call.\r\n",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-04-16 16:30:45",
        "slug": "b8e5",
        "subject": "#184 LONG: Include non-local nodes in Field create on Mesh (3)"
      },
      {
        "text": "- **summary**: LONG: Include non-local nodes in Field create on Mesh --> LONG: Include non-local nodes in Field create on Mesh (3)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:09:55",
        "slug": "d158",
        "subject": "#184 LONG: Include non-local nodes in Field create on Mesh (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:09:55",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31432718463761fc0066",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/55a8ee3b/",
  "ticket_num": 184,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-09-15 21:23:55"
},{
  "status": "pending",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "An example and explanation should be added to the Field documentation to show how to move data from a fortran array to a Field created on a Mesh. ",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "doc example for redist from F90 array to Field on Mesh",
  "discussion_thread": {
    "_id": "3651abd7",
    "posts": [
      {
        "text": "- **milestone**: 155255 --> Add Other Capability\n- **assigned_to**: theurich --> feiliu\n- **summary**: Ex.redist from F90 array to Field on Mesh --> doc example for redist from F90 array to Field on Mesh",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 23:07:34",
        "slug": "374d",
        "subject": "#185 doc example for redist from F90 array to Field on Mesh"
      },
      {
        "text": "pend after notify user",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2010-11-05 16:34:45",
        "slug": "0c37",
        "subject": "#185 doc example for redist from F90 array to Field on Mesh"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2010-11-05 16:34:45",
        "slug": "62c1",
        "subject": "#185 doc example for redist from F90 array to Field on Mesh"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:34:45",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31442718463761fc0082",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3651abd7/",
  "ticket_num": 185,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2009-09-15 21:27:14"
},{
  "status": "pending",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": ". C FieldCreate from Mesh and Arrayspec\r\n. C FieldGet to get pointers to C Mesh ",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "C interface for FieldCreate from Mesh",
  "discussion_thread": {
    "_id": "e3a22642",
    "posts": [
      {
        "text": "Need to provide data access method.",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 13:43:08",
        "slug": "1980",
        "subject": "#186 C interface for FieldCreate from Mesh"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 13:43:08",
        "slug": "76a3",
        "subject": "#186 C interface for FieldCreate from Mesh"
      },
      {
        "text": "From: Tim Campbell and others",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2009-11-30 16:54:18",
        "slug": "3a4e",
        "subject": "#186 C interface for FieldCreate from Mesh"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2009-11-30 16:54:18",
        "slug": "1e0c",
        "subject": "#186 C interface for FieldCreate from Mesh"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2009-11-30 16:54:45",
        "slug": "be10",
        "subject": "#186 C interface for FieldCreate from Mesh"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-11-30 16:54:45",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31452718463761fc0099",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e3a22642/",
  "ticket_num": 186,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-09-16 12:58:39"
},{
  "status": "closed",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "As we are starting to have a small, but usable  C API, it will be important to start putting together the beginning of an ESMF C Reference Manual. The target audience for this first version of the document will be Tim Campbell, Ruth Cheng and Bobby Hunter. They are working on ADCIRC\\(Fortran\\) and WASH123D\\(C\\) coupling and will be using the available ESMF C API on the WASH123D side. At this point we are targeting the 4.0.0rp1 timeframe for having all the necessary C interfaces, and for providing a starter ESMF C Reference Manual.\r\n\\*gjt\\*",
  "labels": [
    "General Documentation"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "LONG: C_INTERF: Need C Reference Manual",
  "discussion_thread": {
    "_id": "b9353d76",
    "posts": [
      {
        "text": "- **summary**: C_INTERF: Need C Reference Manual --> LONG: C_INTERF: Need C Reference Manual",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-09-21 18:44:02",
        "slug": "daff",
        "subject": "#187 LONG: C_INTERF: Need C Reference Manual"
      },
      {
        "text": "This was done for release 5.1.0 - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 16:32:02",
        "slug": "8586",
        "subject": "#187 LONG: C_INTERF: Need C Reference Manual"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 16:32:02",
        "slug": "e5e7",
        "subject": "#187 LONG: C_INTERF: Need C Reference Manual"
      },
      {
        "text": "- **milestone**:  --> Add Other Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2010-11-05 16:32:12",
        "slug": "afaf",
        "subject": "#187 LONG: C_INTERF: Need C Reference Manual"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:32:12",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31452718463761fc00ba",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b9353d76/",
  "ticket_num": 187,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2009-09-17 17:40:39"
},{
  "status": "closed",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Tony Craig from CCSM/NCAR\r\n\r\nThis comes from a discussion with Tony on a telecon. He thought it would be useful for the offline regridding application to be able to operate using standard netCDF instead of pnetCDF. NetCDF is more widely available on systems than pnetCDF.",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "RGRD: Add netcdf option to off-line regridding",
  "discussion_thread": {
    "_id": "90d767ee",
    "posts": [
      {
        "text": "- **summary**: Add netcdf option to off-line regridding --> RGRD: Add netcdf option to off-line regridding",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 21:25:15",
        "slug": "60ef",
        "subject": "#188 RGRD: Add netcdf option to off-line regridding"
      },
      {
        "text": "- **milestone**: 495011 --> \n- **labels**: 667262 --> Regrid",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-18 18:10:30",
        "slug": "3a80",
        "subject": "#188 RGRD: Add netcdf option to off-line regridding"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:07:18",
        "slug": "3a58",
        "subject": "#188 RGRD: Add netcdf option to off-line regridding"
      },
      {
        "text": "- **priority**: 7 --> 5\n- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-15 19:47:18",
        "slug": "1211",
        "subject": "#188 RGRD: Add netcdf option to off-line regridding"
      },
      {
        "text": "\r\nsounds good.  thanks bob,\r\n\r\ntony.....\r\n",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-15 20:13:47",
        "slug": "1b33",
        "subject": "#188 RGRD: Add netcdf option to off-line regridding"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-15 20:13:47",
        "slug": "f9ab",
        "subject": "#188 RGRD: Add netcdf option to off-line regridding"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-15 20:13:47",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31462718463761fc00d5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/90d767ee/",
  "ticket_num": 188,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-09-22 16:52:58"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Natalie Perlin from the  College of Oceanic and Atmospheric Sciences at Oregon State University.\r\n\r\nHi,\r\nI'm still having troubles figuring out how to obtain data \\(after \r\ntransfer from another component\\) for a full computational domain at a \r\nsingle PET/DE element/tile, if it is greater that exclusive domain on \r\nthe same tile.\r\n\r\nFor example, one of my GridComp uses two tiles \\(0, 1\\), and the DistGrid \r\nhas the following decomposition:\r\ntile 0: 1-39, tile 1: 40-77 . This, as I understand, will determine the \r\nexclusive region. Second dimension is not distributed \\(1-72 for both \r\ntiles\\). Computational region needs to be set differently to enable \r\nintegration into the CompGrid original code. Computational regions of \r\nthe first dimension are set to:\r\ntile 0: 1-42, tile1: 37-77; which include three overlapping data points.\r\n\r\nWhen I transfer data from another model using ArrayRedist in the \r\ncoupler, and then retrieve the data at each PET/tile, only exclusive \r\nregions appear to have valid data. Region beyond that, i.e. three \r\noverlapping points have still the initial values \\(zeros\\).\r\n\r\nAfter that failure with Arrays, I attempted to re-write the code and use \r\nFields structure for Export/Import states. Then I have troubles \r\nunderstanding where to provide the sizes of the computational domain/ \r\ncomp. domain bounds.\r\n\r\nIs there any better way to solve this \\(visibly simple\\) problem?.\r\n\r\nThanks,\r\nNatalie Perlin.\r\n",
  "labels": [
    "Component"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: ARY_HAL computational domain vs exclusive domain? (6)",
  "discussion_thread": {
    "_id": "3de73a18",
    "posts": [
      {
        "text": "- **labels**: 588645 --> Component\n- **milestone**: 495011 --> \n- **summary**: computational domain vs exclusive domain? --> LONG: HALO computational domain vs exclusive domain? (6)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 19:26:46",
        "slug": "21c8",
        "subject": "#189 LONG: ARY_HAL computational domain vs exclusive domain? (6)"
      },
      {
        "text": "- **priority**: 5 --> 9\n- **summary**: LONG: HALO computational domain vs exclusive domain? (6) --> LONG: ARY_HAL computational domain vs exclusive domain? (6)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 19:28:23",
        "slug": "2d39",
        "subject": "#189 LONG: ARY_HAL computational domain vs exclusive domain? (6)"
      },
      {
        "text": "Initial questions were anwered and Natalie was fine. Then we offered her to be early HALO tested which she accepted. At that point this ticket was superseded by \\#2906008.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-24 21:52:58",
        "slug": "8103",
        "subject": "#189 LONG: ARY_HAL computational domain vs exclusive domain? (6)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-24 21:52:58",
        "slug": "46bc",
        "subject": "#189 LONG: ARY_HAL computational domain vs exclusive domain? (6)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-24 21:52:58",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31482718463761fc00fb",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3de73a18/",
  "ticket_num": 189,
  "custom_fields": {
    "_priority": "9"
  },
  "created_date": "2009-09-22 19:45:00"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Tony Craig from CCSM\r\n\r\nDuring the CCSM/ESMF call on 09/22/09 Tony mentioned the idea of flushing the LogErr buffer every time anything is written through LogErr. Doing this could help ensure that errors and backtrace information written through LogErr make it onto the file system even without calling ESMF\\_Finalize\\(\\). Currently we recommend testing the RC of every ESMF call, and to conditionally call ESMF\\_Finalize\\(terminationflag=ESMF\\_ABORT\\), to ensure the LogErr buffer gets flushed properly if an error is detected.\r\n\r\nWe will need to see 1\\) whether flushing along, w/o MPI\\_Abort\\(\\) will portably ensure that the IO buffer of the various PETs make it onto the filesystem. 2\\) We need to look at any potential performance implications flushing on every LogErr write may have. We expect it to be small because LogErr writes are mostly done on the upward path \\_after\\_ an error has been detected. Still we may want to make flusing on every LogErr write an optional setting.\r\n\r\n\\*gjt\\*",
  "labels": [
    "LogErr"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Provide option to flush LogErr files on every write",
  "discussion_thread": {
    "_id": "4fb9a3a2",
    "posts": [
      {
        "text": "I am re-assigning this one to Walter because he has had some exposure to LogErr in the recent past. He also has a more recent LogErr feature request \\(\\#2941263\\) assigned to him, and it seems to make sense to deal with both of them at the same time. Neither are very critical at this point, but we should keep them in mind.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-01-27 21:54:44",
        "slug": "4321",
        "subject": "#190 Provide option to flush LogErr files on every write"
      },
      {
        "text": "- **assigned_to**: nobody --> w6ws",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-01-27 21:54:44",
        "slug": "b454",
        "subject": "#190 Provide option to flush LogErr files on every write"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-01-27 21:54:44",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31492718463761fc0116",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4fb9a3a2/",
  "ticket_num": 190,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-09-24 18:46:43"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: Tim Campbell, Gerhard Theurich  \r\n\r\nThe Attribute class should have the functionality to query for the existence of an Attribute by name.  This could be overloaded with AttributeGet\\(\\) as in the State class with StateGetInfo.  It would be good to have an object that carried Attribute info, one of these pieces of info could be a flag to tell if an Attribute is present or not.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG: Query for presence of Attributes (3)",
  "discussion_thread": {
    "_id": "6e4013ca",
    "posts": [
      {
        "text": "- **summary**: Query for presence of Attributes --> LONG: Query for presence of Attributes",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-11-30 14:38:11",
        "slug": "3f5e",
        "subject": "#191 LONG: Query for presence of Attributes (3)"
      },
      {
        "text": "- **summary**: LONG: Query for presence of Attributes --> LONG: Query for presence of Attributes (3)",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-15 13:48:52",
        "slug": "f4b8",
        "subject": "#191 LONG: Query for presence of Attributes (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-15 13:48:52",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d314a2718463761fc0128",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6e4013ca/",
  "ticket_num": 191,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2009-10-06 22:30:23"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: Tim Campbell\r\n\r\nThe interface to create a custom Attribute package should have the ability to create the ESMF standard Attribute package automatically as a nested child package.  This allows the user to make one call to ESMF\\_AttributeAdd\\(\\) instead of two when creating an customized Attribute package on top of an ESMF standard Attribute package.  This would be a special case where the convention and purpose were specified to the customized package and the nestConvention and nestPurpose were set to the ESMF package.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "Custom Attribute package to set up standard Attpack",
  "discussion_thread": {
    "_id": "ccd57278",
    "posts": [
      {
        "text": "- **summary**: Custom Attribute package to set up standard Attribute packag --> LONG: Custom Attribute package to set up standard Attpack",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-11-30 14:38:49",
        "slug": "68c5",
        "subject": "#192 Custom Attribute package to set up standard Attpack"
      },
      {
        "text": "- **summary**: LONG: Custom Attribute package to set up standard Attpack --> Custom Attribute package to set up standard Attpack",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-15 13:48:16",
        "slug": "b028",
        "subject": "#192 Custom Attribute package to set up standard Attpack"
      },
      {
        "text": "Related to 3076837 \"LONG: CIM: Enable multiple att packages per component \\(3\\)\", since it will be creating a standard package with standard nested packages.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-01-13 18:35:54",
        "slug": "6c1d",
        "subject": "#192 Custom Attribute package to set up standard Attpack"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-15 13:48:16",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d314b2718463761fc013a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/ccd57278/",
  "ticket_num": 192,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-10-06 22:34:00"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: Tim Campbell\r\n\r\nThe ESMF\\_AttributeRemove\\(\\) interface for Attribute packages should have an option to allow the user to not remove the nested packages.  This would allow a user to remove one customized Attribute package from on top of another, and replace it.  ",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "AttributeRemove option to NOT remove nested packages",
  "discussion_thread": {
    "_id": "54307f11",
    "posts": [
      {
        "text": "- **summary**: AttributeRemove option to NOT remove nested packages --> LONG: AttributeRemove option to NOT remove nested packages",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2009-11-30 14:39:11",
        "slug": "24ab",
        "subject": "#193 AttributeRemove option to NOT remove nested packages"
      },
      {
        "text": "- **summary**: LONG: AttributeRemove option to NOT remove nested packages --> AttributeRemove option to NOT remove nested packages",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-15 13:47:47",
        "slug": "933b",
        "subject": "#193 AttributeRemove option to NOT remove nested packages"
      },
      {
        "text": "- **assigned_to**: rokuingh --> eschwab",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-02-17 17:07:30",
        "slug": "0f63",
        "subject": "#193 AttributeRemove option to NOT remove nested packages"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:07:30",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d314b2718463761fc0152",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/54307f11/",
  "ticket_num": 193,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-10-06 22:36:22"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Make the use of the offline regridding application closer to that of SCRIP. For example, have parameters passed in via a file. \\(or optionally via a file ?\\)",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "RGRD: Make offline regridding interface closer to SCRIP",
  "discussion_thread": {
    "_id": "40d4a8f8",
    "posts": [
      {
        "text": "- **labels**:  --> Regrid\n- **milestone**:  --> Add Code Capability\n- **assigned_to**: nobody --> oehmke",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-10-30 20:46:36",
        "slug": "4786",
        "subject": "#194 RGRD: Make offline regridding interface closer to SCRIP"
      },
      {
        "text": "- **summary**: Make offline regridding interface closer to SCRIP --> RGRD: Make offline regridding interface closer to SCRIP",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-24 21:47:24",
        "slug": "757d",
        "subject": "#194 RGRD: Make offline regridding interface closer to SCRIP"
      },
      {
        "text": "WHO: Bob Oehmke \\(core team member\\). This would help users such as CCSM who are used to the interface provided by SCRIP",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 17:47:07",
        "slug": "4331",
        "subject": "#194 RGRD: Make offline regridding interface closer to SCRIP"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-11-24 21:47:24",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d314c2718463761fc016a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/40d4a8f8/",
  "ticket_num": 194,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-10-30 20:45:52"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Henderson from NOAA\r\n\r\n\r\nHi all,\r\n\r\nI broached our need for fault-tolerant MPMD inter-component comms at the GIP\r\nmeeting.  Would there be a good time for Leslie and I to drop by and discuss\r\ndetails?\r\n\r\nTom\r\n",
  "labels": [
    "Component"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Requirement for fault-tolerant MPMD comms (8)",
  "discussion_thread": {
    "_id": "8ac4e3ae",
    "posts": [
      {
        "text": "We had a telecon on this and established some work that needed to be done - hence moved to feature requests. - Cecelia\r\n\r\nExtended mail from Gerhard below.\r\n\r\n\r\n\r\n\\-------- Original Message --------\r\nSubject: \t\\[Esmf\\_core\\] fundamental ESMF concepts revisited in light of new requirements\r\nDate: \tThu, 03 Dec 2009 21:57:27 -0800\r\nFrom: \tGerhard Theurich &lt;theurich@sourcespring.net&gt;\r\nTo: \tesmf\\_core &lt;esmf\\_core@list.woc.noaa.gov&gt;\r\n\r\n\r\nAll,\r\n\r\nThere exist several fundamental concepts within ESMF. Many of these concepts \r\nhave been carefully chosen in the early days of ESMF by those responsible for \r\nthe original requirements document. Over the years some aspects have been \r\nmodified or refined to fit new or changed requirements. However, for the most \r\npart, the key concepts of the Superstructure, i.e. Components and States, and \r\nthe user interaction with these objects, has proven stable.\r\n\r\nRecently new requirements have been brought to our attention. I feel that these \r\nrequirements require that we revisit some fundamental ESMF Superstructure \r\nconcepts. I hope we can use the following paragraphs as a reference point in \r\nfurther discussions.\r\n\r\nTwo recent requirements I am referring to are 1\\) \"interaction with web services\" \r\nand 2\\) \"fault tolerant ensemble applications\". Both seem to point to a slightly \r\nmore general ESMF Component concept and more flexible data flow concepts. As for \r\nthe Component part, I proposed web-services specific modifications to the \r\nComponent concept in a core email on 01/08/09, and I think Kathy has implemented \r\nthem following that discussion. \\(Sorry I did not keep up with all the details, \r\nin particular I am not sure if any of the parallel aspects have been worked on\\). \r\nAnyway, I think that the proposed generalization of the Component concept is \r\npretty much straight forward, and it seems perfectly applicable to also cover \r\ninteraction with dynamically spawned or otherwise separately executing ESMF \r\nComponents. It appears that many of the differences could be hidden behind the \r\nComponent API, with only some small differences in the argument lists of \r\nCompCreate\\(\\) and CompSetServices\\(\\). It is clear from the telecon discussion \r\nearlier today that there are technical aspects, such as the support provided by \r\nvarious MPI implementations, or possible use of PVM or sockets, that will need \r\nto be investigated to be sure that the generalized Component concept actually \r\nfulfills the users' requirements. However, I am pretty certain that what ever we \r\ncome up with will fit a similar form of the generalized Component concept on the \r\nuser level. Consequently it is not the Component aspect \\(i.e. control flow\\) that \r\nI am most concerned with, but it is the State concept \\(i.e. data flow\\)\\!\\!\r\n\r\nESMF defines a very fundamental concept wrt data flow in an ESMF application. \r\nSection 11.4 of the Ref.Manual refers to this as \"Intra-Component \r\nCommunication\", pointing out that \"\\[a\\]ll data transfers within an ESMF \r\napplication occur within a component\". It is this concept that ultimately leads \r\nto the requirement mentioned in that same section, that \"a Coupler Component \r\nmust be created on the union of the PETs of all the Gridded Components that it \r\ncouples\".\r\n\\(http://www.earthsystemmodeling.org/esmf\\_releases/last\\_built/ESMF\\_refdoc/node3.html\\#SECTION03014000000000000000\\).\r\n\r\nThe issue I want to focus on is that I think the data flow requirements for the \r\ngeneralized Component concept is in conflict with a strict interpretation of the \r\n\"Intra-Component Communication\" concept. \\(The \"direct coupling\" scheme, that has \r\nbeen part of ESMF for a while now, breaks away from the strict intra-component \r\ncommunication paradigm already in some aspects.\\) The coupling between Components \r\nthat are running as independent executables, will have to go even further\\!\r\n\r\nAt this point I think it is good to turn attention to the interaction the user \r\nhas with the ESMF Superstructure. Let's assume we are past the Component \r\nCreate\\(\\) and SetServices\\(\\) phase. At this point the driver typically creates \r\nState objects it passes into CompInitialize\\(\\)/Run\\(\\)/Finalize\\(\\) as arguments. The \r\nComponents add distributed ESMF objects to the States and query for them. An \r\nESMF Coupler Component typically will call StateReconcile\\(\\) on the incoming \r\nStates during its Initialize\\(\\) routine, and then use the contained distributed \r\nESMF objects in the appropriate communication Store\\(\\) calls to set up the \r\ncoupling interactions. Later, during the actual coupling, i.e. during the \r\nCoupler's Run\\(\\) method, the precomputed routehandles are used to carry out the \r\nactual data transfers.\r\n\r\nIn the above coupling scenario there is actually no explicit use of the \\_strict\\_ \r\n\"intra-component communication\" concept. I.e. there is no assumption made that \r\nthe actual data is ever directly, locally accessible on the PETs of the Coupler \r\nComponent\\! \\(At least it is not made in the way that the user code interacts with \r\nthe ESMF API. It is however made in the way we've implemented the \r\nStateReconcile\\(\\) and the communication and Store\\(\\) methods - but that is our \r\nproblem to solve, not the user's problem.\\)\r\n\r\nSo in a looser sense one can argue that the \"intra-component communication\" \r\nconcept is preserved in the above scenario, because the coupling between two \r\nComponents A and B is defined via a Coupler Component that interacts with A and \r\nB via States. The coupling is ultimately defined in what \\_looks\\_ like \r\nintra-component communication, inside of the Coupler Component user code.\r\n\r\nBob and I went down this path in the follow-on discussion we had today, and \r\nidentified two different approaches:\r\n\r\n1\\) Implement remote execution of ESMF communication calls \\(and their associated \r\nStore\\(\\) calls\\) that becomes active when proxy objects are encountered in the \r\nCoupler that point to remote actual objects. The ESMF cap on remote Components \r\nwill have to support this remote comm access in their service loop. \r\nCommunication calls and Store\\(\\) calls will need to be able to deal with \r\ndifferent parallel environments at runtime \\(union of PETs vs. separate src/dst \r\nPET groups connected via a different communication path\\).\r\n\r\n2\\) Only support remote Redist\\(\\) so that the Coupler can get\\(\\) and set\\(\\) remote \r\ndata objects it couples between. In the end the Coupler would be very similar to \r\nthe traditional case, even allowing what looks like local memory accesses, \r\nexcept that there need to be get\\(\\) and set\\(\\) calls at the beginning and the end, \r\nrespectively.\r\n\r\nBoth approaches have there pros and cons, both in usability and \r\nperformance/memory scalability.\r\n\r\nAnyway, I just wanted to put this out on the core list for further discussion. I \r\nthink it is very important that we come up with a clear solution of the data \r\nflow concept that can support non-traditional ESMF applications with remote \r\nComponents\\! If we don't have it, the ESMF Component concept will become almost \r\nuseless in these cases. Sending data between Components through some kind of a \r\nback door may save us in the short term \\(if we have to\\), but a consistent \r\nconcept would definitely carry us much further. The worst thing would be to \r\nloose ESMF users over this issue.\r\n\r\nI did not elaborate much on this, but I think that ultimately the ESMF State \r\nclass is at the heart of solving the data flow issue. Kathy also had some ideas \r\nabout this during the call, and maybe that should be the next focus of this \r\ndiscussion.\r\n\r\nHope I didn't lull anybody to sleep with this email. I know it turned into a \r\npretty long winded one again. \\(It has been a while since I wrote one like this \r\n;-\\) \\).\r\n\r\n-Gerhard\r\n\r\n",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-12-18 18:08:09",
        "slug": "8214",
        "subject": "#195 LONG: Requirement for fault-tolerant MPMD comms (8)"
      },
      {
        "text": "- **milestone**: 495011 --> \n- **assigned_to**: cdeluca --> theurich\n- **labels**: 588640 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-12-18 18:08:09",
        "slug": "2147",
        "subject": "#195 LONG: Requirement for fault-tolerant MPMD comms (8)"
      },
      {
        "text": "- **labels**:  --> Component\n- **summary**: Requirement for fault-tolerant MPMD comms --> LONG: Requirement for fault-tolerant MPMD comms (8)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-12-18 18:10:17",
        "slug": "362a",
        "subject": "#195 LONG: Requirement for fault-tolerant MPMD comms (8)"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 12:03:29",
        "slug": "6aa8",
        "subject": "#195 LONG: Requirement for fault-tolerant MPMD comms (8)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 17:06:22",
        "slug": "abd0",
        "subject": "#195 LONG: Requirement for fault-tolerant MPMD comms (8)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:06:22",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d314d2718463761fc0181",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/8ac4e3ae/",
  "ticket_num": 195,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-11-09 16:29:04"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Atanas Trayanov from NASA/GMAO\r\n\r\nIn an original email that came in under \\#2889244, which then resulted in \\#2896076, Atanas made this comment at the bottom:\r\n\r\n&gt;I am still having issues with reconcile/redist but I'll send another \r\n&gt;&gt; e-mail about them\r\n&gt;&gt; \r\n&gt;&gt; -Atanas\r\n\r\nThis ticket is in place to track the reconcile/redist issue, or to ensure that it turned out to be nothing.\r\n\\*gjt\\*",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: MAPL connecting Fields - empty Fields with Grids? (2)",
  "discussion_thread": {
    "_id": "4891c331",
    "posts": [
      {
        "text": "- **summary**: reconcile/redist issues --> LONG: reconcile/redist issues, i.e. MAPL connecting Fields",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-21 17:27:33",
        "slug": "b405",
        "subject": "#196 LONG: MAPL connecting Fields - empty Fields with Grids? (2)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-21 17:48:45",
        "slug": "1933",
        "subject": "#196 LONG: MAPL connecting Fields - empty Fields with Grids? (2)"
      },
      {
        "text": "- **summary**: LONG: reconcile/redist issues, i.e. MAPL connecting Fields --> LONG: reconcile/redist iss., i.e. MAPL connecting Fields (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-12-21 18:05:03",
        "slug": "132d",
        "subject": "#196 LONG: MAPL connecting Fields - empty Fields with Grids? (2)"
      },
      {
        "text": "The issues Atanas saw here with reconcile/redist turned out to be completely unrelated to reconcile/redist\\! Instead the problem is rooted in a very fundamental assumption MAPL was making about how it could modify ESMF Array/Field objects internally. See the email thread of this ticket for details. At this point we ended up with me having suggested a \\(what I think clean\\) work-around on the user/MAPL side. At the same time Atanas has requested empty Field holding Grids to be considered as a feature request. We'll need to talk this over further as a group soon and make a decission which way we want to go on this.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-01-14 18:49:41",
        "slug": "79b5",
        "subject": "#196 LONG: MAPL connecting Fields - empty Fields with Grids? (2)"
      },
      {
        "text": "- **labels**: 473027 --> Multiple Categories\n- **summary**: LONG: reconcile/redist iss., i.e. MAPL connecting Fields (2) --> LONG: MAPL connecting Fields - empty Fields with Grids? (2)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-01-14 18:49:41",
        "slug": "608e",
        "subject": "#196 LONG: MAPL connecting Fields - empty Fields with Grids? (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-01-14 18:49:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d314e2718463761fc01a1",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4891c331/",
  "ticket_num": 196,
  "custom_fields": {
    "_priority": "9"
  },
  "created_date": "2009-11-11 18:22:32"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Peter Lauritzen from CCSM \\(Dave Randall from CSU would also be interested\\)\r\n\r\nAdd the capability to Mesh to have hexagon and pentagon elements to enable it to support isocahedral grids. This would also include adding the capability to regrid meshes composed of these as well as creating fields on top of them. \r\n\r\n\r\n",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: RGRD: add master hexagon and pentagon elem (5?)",
  "discussion_thread": {
    "_id": "6ba7a9c7",
    "posts": [
      {
        "text": "- **summary**: LONG: REGRID:  support for hexagon and pentagon elem (5?) --> LONG: RGRD:  support for hexagon and pentagon elem (5?)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-23 18:37:35",
        "slug": "ace3",
        "subject": "#197 LONG: RGRD: add master hexagon and pentagon elem (5?)"
      },
      {
        "text": "- **priority**: 5 --> 7\n- **summary**: LONG: RGRD:  support for hexagon and pentagon elem (5?) --> LONG: RGRD: add master hexagon and pentagon elem (5?)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 12:02:16",
        "slug": "537f",
        "subject": "#197 LONG: RGRD: add master hexagon and pentagon elem (5?)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:05:44",
        "slug": "0b20",
        "subject": "#197 LONG: RGRD: add master hexagon and pentagon elem (5?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:05:44",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31502718463761fc01c1",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6ba7a9c7/",
  "ticket_num": 197,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-23 18:36:05"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Ben Foster from HAO\r\n\r\nAdd the capability to turn off the artificial pole point a source spherical Grid when regridding.  ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "RGRD:  Regrid with source Grid a sphere without a pole",
  "discussion_thread": {
    "_id": "c9100f89",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-11-23 19:47:43",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31512718463761fc01d8",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c9100f89/",
  "ticket_num": 198,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-23 19:47:43"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: ESMF internal\r\n\r\nAdd a field regrid store interface which takes a factor list and factor index list like Array Sparse Mat Mult.. This would more tranparently allow the user to use FieldRegrid with there own weights. They can do so now by using ArraySMMStore\\(\\), but it won't be as obvious what's going on. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "RGRD: Add FieldRegridStore interface which takes factor info",
  "discussion_thread": {
    "_id": "17ca4dac",
    "posts": [
      {
        "text": "WHO: Bob Oehmke \\(core team member\\), This will help projects such as CCSM who are reading weights in from files to more cleanly use the FieldRegrid interface. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 17:44:34",
        "slug": "0416",
        "subject": "#199 RGRD: Add FieldRegridStore interface which takes factor info"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-11-23 20:28:51",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31512718463761fc01e0",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/17ca4dac/",
  "ticket_num": 199,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-23 20:28:51"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Ben Foster of HAO\r\n\r\nCurrently ESMF doesn't support the regridding of a spherical shell with vertical thickness. Add support for this.\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "RGRD: regridding of 3D 'thick' sphere",
  "discussion_thread": {
    "_id": "2013180f",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-11-23 20:57:43",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31522718463761fc01ed",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/2013180f/",
  "ticket_num": 200,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-23 20:57:43"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Add the capability to regrid a sphere with a vertical dimension with an artifiically created pole point like is used for a 2D spherical source grid. This requires support for triangular prisms in mesh for the region around the pole.  ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: RGRD: regridding of 3D 'thick' sphere with pole (4)",
  "discussion_thread": {
    "_id": "26868f83",
    "posts": [
      {
        "text": "WHO: Bob Oehmke \\(core team member\\). This will help users such as Ben Foster of HAO who need to regrid to a 3D version of the atmosphere, I seem to remember other space weather users such as Ghee Fry and Vince Eccles talking to David N about maybe needing it in the future also. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 17:42:17",
        "slug": "181d",
        "subject": "#201 LONG: RGRD: regridding of 3D 'thick' sphere with pole (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-11-23 21:16:00",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31522718463761fc01f5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/26868f83/",
  "ticket_num": 201,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-23 21:16:00"
},{
  "status": "closed",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "\r\nWHO: Mariana Vertenstein of CCSM\r\n\r\nAdd the ability to regrid a cube-sphere using the offline regridding application. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "RGRD: offline regridding of cubed sphere",
  "discussion_thread": {
    "_id": "00e9e526",
    "posts": [
      {
        "text": "- **summary**: LONG: RGRD: offline regridding of cube-sphere (?) --> LONG: RGRD: offline regridding of cubed sphere (?)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-23 23:05:21",
        "slug": "7525",
        "subject": "#202 RGRD: offline regridding of cubed sphere"
      },
      {
        "text": "- **summary**: LONG: RGRD: offline regridding of cubed sphere (?) --> RGRD: offline regridding of cubed sphere",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-11 15:06:46",
        "slug": "32b7",
        "subject": "#202 RGRD: offline regridding of cubed sphere"
      },
      {
        "text": "The offline regrid application ESMF\\_RegridWeightGen.F90 in src/apps/ESMF\\_RegridWeightGen/ provides the requested functionality.",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2010-11-05 03:53:03",
        "slug": "1717",
        "subject": "#202 RGRD: offline regridding of cubed sphere"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2010-11-05 03:53:04",
        "slug": "70b1",
        "subject": "#202 RGRD: offline regridding of cubed sphere"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 03:53:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31532718463761fc0202",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/00e9e526/",
  "ticket_num": 202,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-23 22:18:59"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Mariana Vertenstein of CCSM\r\n\r\nAdd the ability to regrid a tripole sphere to the offline regridding application. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: RGRD: offline regridding of tripole sphere (3)",
  "discussion_thread": {
    "_id": "0f7d4669",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-11-23 22:22:08",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31542718463761fc0220",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0f7d4669/",
  "ticket_num": 203,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-23 22:22:08"
},{
  "status": "closed",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: CCSM, GFDL, NASA\r\n\r\nAllow cube-sphere to regridded via online regridding interface. Note that this would mean adding the multitile capability to Grid and connecting this to regrid. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "RGRD: online regridding of cubed sphere",
  "discussion_thread": {
    "_id": "6579c9e9",
    "posts": [
      {
        "text": "- **assigned_to**: oehmke --> peggyli",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-11 15:19:42",
        "slug": "1103",
        "subject": "#204 RGRD: online regridding of cubed sphere"
      },
      {
        "text": "I moved this to Peggy and changed the time estimate from 5 weeks because Peggy estimates it will take 1-2 weeks.  This is because Peggy has implemented a cubed sphere grid as an ESMF Mesh, so the requirement for the multi-tile Grid is no longer necessary.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-11 15:22:35",
        "slug": "d084",
        "subject": "#204 RGRD: online regridding of cubed sphere"
      },
      {
        "text": "- **summary**: LONG: RGRD: online regridding of cubed sphere (6) --> RGRD: online regridding of cubed sphere",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-11 15:22:35",
        "slug": "66e5",
        "subject": "#204 RGRD: online regridding of cubed sphere"
      },
      {
        "text": "Cubed-sphere grid is stored as an unstructured grid in the SCRIP format.  An API is developed to read in the cubed sphere grid and create a Mesh object, thus allowing it to be regridded.  Therefore, this ticket should be closed.  However, multitile interface is not used for the cubed sphere grid, and is not currently supported in ESMF 5.0.0.  \r\nSuggestion:  close this ticket and open a new ticket to address multitile grid capability.",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2010-11-05 04:01:28",
        "slug": "74cb",
        "subject": "#204 RGRD: online regridding of cubed sphere"
      },
      {
        "text": "Multitile feature is addressed in ticket 2906013 already.",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2010-11-05 16:24:40",
        "slug": "2f6a",
        "subject": "#204 RGRD: online regridding of cubed sphere"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2010-11-05 16:24:40",
        "slug": "35ba",
        "subject": "#204 RGRD: online regridding of cubed sphere"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:24:40",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31542718463761fc0228",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6579c9e9/",
  "ticket_num": 204,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-23 23:47:02"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Alan Wallcraft and GFLD\r\n\r\nAdd the capability to regrid a tripole Grid to the online regridding.",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": " RGRD: online regridding of tripole sphere ",
  "discussion_thread": {
    "_id": "26cd9a3d",
    "posts": [
      {
        "text": "This includes adding Tripole to grid create. Also see the user feature request 1433013, which talks about supporting tripole grids, but it isn't clear if it covers regrid. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-06-14 05:26:21",
        "slug": "e79a",
        "subject": "#205  RGRD: online regridding of tripole sphere "
      },
      {
        "text": "- **summary**: LONG: RGRD: online regridding of tripole sphere (3) --> LONG: RGRD: online regridding of tripole sphere (4)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-06-14 05:26:21",
        "slug": "0d3e",
        "subject": "#205  RGRD: online regridding of tripole sphere "
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 13:03:05",
        "slug": "dec2",
        "subject": "#205  RGRD: online regridding of tripole sphere "
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-02-17 17:05:09",
        "slug": "fff4",
        "subject": "#205  RGRD: online regridding of tripole sphere "
      },
      {
        "text": "Still need to add test to ESMF\\_FieldRegridUTest \\(but otherwise basically done",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-09-22 17:19:13",
        "slug": "c364",
        "subject": "#205  RGRD: online regridding of tripole sphere "
      },
      {
        "text": "- **summary**: LONG: RGRD: online regridding of tripole sphere (4) -->  RGRD: online regridding of tripole sphere ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-09-22 17:19:13",
        "slug": "208a",
        "subject": "#205  RGRD: online regridding of tripole sphere "
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-09-22 17:19:13",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31552718463761fc024f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/26cd9a3d/",
  "ticket_num": 205,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-23 23:51:22"
},{
  "status": "closed",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "Tony explained that for testing purpose, CCSM redist weights from src to dst grid for bfb. We may need to set up a special mode of ArraySMM for this testing purpose as well.",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: bfb mode in SMM (2)",
  "discussion_thread": {
    "_id": "ebed9a6a",
    "posts": [
      {
        "text": "move to feature request",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2009-11-25 18:29:02",
        "slug": "4eb0",
        "subject": "#206 LONG: bfb mode in SMM (2)"
      },
      {
        "text": "- **milestone**: 155253 --> \n- **labels**: 1019235 --> Array - New",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2009-11-25 18:29:02",
        "slug": "470d",
        "subject": "#206 LONG: bfb mode in SMM (2)"
      },
      {
        "text": "From: Tony Craig",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2009-11-30 16:49:26",
        "slug": "9745",
        "subject": "#206 LONG: bfb mode in SMM (2)"
      },
      {
        "text": "- **summary**: allow specific ways of redist weights in SMM --> LONG: bfb mode in SMM (2)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-02 21:52:29",
        "slug": "70ce",
        "subject": "#206 LONG: bfb mode in SMM (2)"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 17:03:49",
        "slug": "2c43",
        "subject": "#206 LONG: bfb mode in SMM (2)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 17:05:13",
        "slug": "15c0",
        "subject": "#206 LONG: bfb mode in SMM (2)"
      },
      {
        "text": "BFB support in comms was added to ESMF in 6.1.0. It hinges on one SMM Store\\(\\) time, and one execution time option. Documentation was added to the refman that discusses these options at various levels. We discussed details with Tony and Mariana during our weekly CESM telcos, and Tony has reviewed the documentation, and we iterated on it.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2013-03-20 00:24:47",
        "slug": "0f1e",
        "subject": "#206 LONG: bfb mode in SMM (2)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2013-03-20 00:24:47",
        "slug": "34ef",
        "subject": "#206 LONG: bfb mode in SMM (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2013-03-20 00:24:47",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31562718463761fc0276",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/ebed9a6a/",
  "ticket_num": 206,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-24 17:31:22"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "\r\nImplement a version of FieldRegridStore which is specifically designed to be faster for moving grids. This version would hang onto all of the mesh and overlap information, so that it could more quickly generate the weights for a new slightly different position of the grids. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: RGRD: RegridStore specifically for moving grids (8)",
  "discussion_thread": {
    "_id": "83637d58",
    "posts": [
      {
        "text": "WHO: Bob Oehmke \\(core team\\), thought that this would help anyone who is trying to regrid between moving grids. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2009-11-30 17:31:20",
        "slug": "a2a5",
        "subject": "#207 LONG: RGRD: RegridStore specifically for moving grids (8)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-11-24 22:42:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31582718463761fc02a6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/83637d58/",
  "ticket_num": 207,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-24 22:42:04"
},{
  "status": "closed",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "Replace the current custom printf\\(\\)-based method with one based on the standard Xerces C++ XML class library.",
  "labels": [
    "I/O"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "LONG: AttributeWrite(): XML output w/ Xerces C++ (3)",
  "discussion_thread": {
    "_id": "5eb68595",
    "posts": [
      {
        "text": "From:  Tim Campbell",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2009-11-30 16:01:42",
        "slug": "b6d1",
        "subject": "#208 LONG: AttributeWrite(): XML output w/ Xerces C++ (3)"
      },
      {
        "text": "Introduced in ESMF\\_5\\_0\\_0.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-06-30 21:57:45",
        "slug": "b6a0",
        "subject": "#208 LONG: AttributeWrite(): XML output w/ Xerces C++ (3)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-06-30 21:57:45",
        "slug": "72e1",
        "subject": "#208 LONG: AttributeWrite(): XML output w/ Xerces C++ (3)"
      },
      {
        "text": "This is essentially a low-level write ability driven from AttributeWrite\\(CIM\\), down through the IO/SAX2/Xerces API, to produce properly formatted XML output.  There are other tickets that address a higher-level Xerces-based output capability driven via XSD files:\r\n\r\n\\#3103887 \"LONG: CIM: Auto validate CIM XML output with CIM xsd\"\r\n\\#3077615 \"LONG: CIM: Define attribute packages with an xsd\"\r\n\\#2990606 \"LONG: Create XSD files for standard AttPacks\"\r\n",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-03-31 16:03:14",
        "slug": "8b04",
        "subject": "#208 LONG: AttributeWrite(): XML output w/ Xerces C++ (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-30 21:57:45",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31592718463761fc02b3",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/5eb68595/",
  "ticket_num": 208,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-30 07:06:58"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "WHO: Natalie Perlin/CSTM\r\n\r\nImplement halo in Array, Field, and \\*Bundles.",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: ARY_HAL: Implement halo (6)",
  "discussion_thread": {
    "_id": "6a292eb5",
    "posts": [
      {
        "text": "- **summary**: LONG: ARY_HAL: Implement halo --> LONG: ARY_HAL: Implement halo (6)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 15:23:51",
        "slug": "d8de",
        "subject": "#209 LONG: ARY_HAL: Implement halo (6)"
      },
      {
        "text": "ArrayHalo, ArrayBundleHalo, FieldHalo, FieldBundleHalo were released with ESMF 5.0.0. Notified Natalie.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-24 21:46:49",
        "slug": "f8f5",
        "subject": "#209 LONG: ARY_HAL: Implement halo (6)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-24 21:46:50",
        "slug": "1dc3",
        "subject": "#209 LONG: ARY_HAL: Implement halo (6)"
      },
      {
        "text": "Natalie has confirmed via email that HALO works in her ROMS-SWAN coupling code as expected. :-\\)\r\nThere is sort of an \\(internal\\) follow on to this ticket. It is \\#3038413, and it is to track that we need to add an ArrayHaloSTest that verify Halo in the Coupler context.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-08-02 18:22:45",
        "slug": "c0c9",
        "subject": "#209 LONG: ARY_HAL: Implement halo (6)"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-08-02 18:22:45",
        "slug": "461f",
        "subject": "#209 LONG: ARY_HAL: Implement halo (6)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-08-02 18:22:45",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d315a2718463761fc02cf",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6a292eb5/",
  "ticket_num": 209,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-30 15:19:00"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Possibly Tim Campbell or Mariana, though this is not a direct request\r\n\r\nImplement multi-tile grids.  This is important to do before freezing the grid interface.",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: RGRD: Implement multi-tile grids, incl. cub. sph. (6)",
  "discussion_thread": {
    "_id": "9ce2640f",
    "posts": [
      {
        "text": "- **summary**: LONG: nGRD: Implement multi-tile grids, incl. cub. sph. (4) --> LONG: nGRD: Implement multi-tile grids, incl. cub. sph. (6)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 15:48:51",
        "slug": "fea2",
        "subject": "#210 LONG: RGRD: Implement multi-tile grids, incl. cub. sph. (6)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-11-30 18:02:56",
        "slug": "4cf8",
        "subject": "#210 LONG: RGRD: Implement multi-tile grids, incl. cub. sph. (6)"
      },
      {
        "text": "This includes hooking to regrid.",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-06-14 05:38:31",
        "slug": "1455",
        "subject": "#210 LONG: RGRD: Implement multi-tile grids, incl. cub. sph. (6)"
      },
      {
        "text": "- **summary**: LONG: nGRD: Implement multi-tile grids, incl. cub. sph. (6) --> LONG: RGRD: Implement multi-tile grids, incl. cub. sph. (6)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-06-14 05:38:31",
        "slug": "a445",
        "subject": "#210 LONG: RGRD: Implement multi-tile grids, incl. cub. sph. (6)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-14 05:38:31",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d315b2718463761fc02ef",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/9ce2640f/",
  "ticket_num": 210,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-30 15:23:16"
},{
  "status": "closed",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Tim Campbell\r\n\r\nNeed to add a data access method to the C interfaces developed for Meshes.",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "uGRD: Add data access method for C interface",
  "discussion_thread": {
    "_id": "608e97ff",
    "posts": [
      {
        "text": "capability added and communicated to user via a different ticket: 3012642, which was closed.",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2010-11-05 16:21:29",
        "slug": "919a",
        "subject": "#211 uGRD: Add data access method for C interface"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2010-11-05 16:21:29",
        "slug": "f71f",
        "subject": "#211 uGRD: Add data access method for C interface"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:21:29",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d315c2718463761fc030b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/608e97ff/",
  "ticket_num": 211,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-11-30 15:48:08"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Fei Lui from ESMF\r\n\r\n\r\nHi Gerhard,\r\n\r\nI have made progress substituting CCSM SMM with ESMF SMM. The more I use ESMF SMM, the more I like it :\\). There is one distinction between CCSM SMM and ESMF SMM that makes me call for help. In CCSM, the regridding code is set up to compute a route handle during model initialization phase and this routehandle is computed based on data distribution alone. At this initialization phase, it's not known yet how many physical fields are there and it's not known what fields are going through the flux exchange calculation. So I cannot set up corresponding ESMF Arrays \\(missing the undistributed bounds\\) to compute an ESMF routehandle.\r\n\r\nI am wondering if we could set up ArraySMM such that the calculated routehandle is a function of the the underlying distributed topology. It will mirror the approach CCSM handles regridding. I am not saying it's a better way of doing things, however it seems to me this will definitely give a user more flexibility on applying ArraySMM. It's conceivable that in a physical model the physical fields going through a flux exchange layer can change over time during model simulation. Adopting such a change would facilitate such a model setup.\r\n\r\nWell, I should probably write this before yesterday's CRB meeting but at that time, there was some cloud in my understanding of this problem...Now it is quite clear that we could benefit from this approach. Let me know if there is a workaround of this problem, maybe I missed something in ArraySMM docs/examples.\r\n\r\nFei\r\n\r\n\r\n",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: routehandle to handling runtime size of nondistr. (2)",
  "discussion_thread": {
    "_id": "7c17e4a9",
    "posts": [
      {
        "text": "- **labels**: 368244 --> Array - New\n- **milestone**: 495011 --> \n- **summary**: Make it possible to compute routehandle on distgrids? --> LONG: routehandle to handling runtime size of nondistr. (2)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 19:11:15",
        "slug": "fbbf",
        "subject": "#212 LONG: routehandle to handling runtime size of nondistr. (2)"
      },
      {
        "text": "We talked about this during the technical part of the core meeting on 12/02/09. This seems to be very high priority for the CCSM work Fei is doing\\! From my understanding the cleanest approach will be to relax the \"congruent\" condition for routehandle based communications a bit. Basically we would need to allow that the size of the non-distributed dimensions are allowed to be different between those the Array pair used during Store\\(\\) and those used during comm execution. For the CCSM work the simplest case, i.,e. where there is one non-distributed dimension, and it is the first one on the Array, should be implemented for this ticket.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 19:18:22",
        "slug": "d279",
        "subject": "#212 LONG: routehandle to handling runtime size of nondistr. (2)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-04 19:18:22",
        "slug": "5d69",
        "subject": "#212 LONG: routehandle to handling runtime size of nondistr. (2)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-01-19 22:23:09",
        "slug": "8766",
        "subject": "#212 LONG: routehandle to handling runtime size of nondistr. (2)"
      },
      {
        "text": "Fei tested the implementation of this feature in his CCSM work. Fei also reviewed the Array and ArrayBundle doc changes. Fei will make appropriate doc changes on the Field and FieldBundle level under \\#2944105.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-02-01 22:01:47",
        "slug": "e363",
        "subject": "#212 LONG: routehandle to handling runtime size of nondistr. (2)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-02-01 22:01:47",
        "slug": "6cb9",
        "subject": "#212 LONG: routehandle to handling runtime size of nondistr. (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-02-01 22:01:47",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d315d2718463761fc031d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7c17e4a9/",
  "ticket_num": 212,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-12-01 16:30:12"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team member\\) But this was added in respose to confusion by Ben Foster of HAO about having to have fields in the regrid store call. In general this will help any user that wants to set up a regrid routeHandle before creating fields. IT may also make it clearer that the regridstore doesn't depend on what's contained in the Fields being regridded. \r\n\r\nThis call would allow the user to setup a regrid routeHandle just by passing in Grids \\(instead of Fields\\). ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "RGRD: Add regrid store interface that uses Grids",
  "discussion_thread": {
    "_id": "98fdb465",
    "posts": [
      {
        "text": "There is a technical problem with the idea of pre-computing a routehandle from the Grids alone. We talked about this briefly during the technical part of the 12/02/09 core call. The issue is that in the final Array::sparseMatMulStore\\(\\), which is what precomputes the routehandle, the memory layout of the Field/Array allocation on each DE must be known. This is part of the \"congruent\" condition that is described in all of the communcation call APIs that use routehandles. Of course, for the case where the total region == exclusive region on all DEs, it would be possible to precompute the routehandle from the Grid/DistGrid alone. However, it seems \\(to me\\) more confusing to introduce an additional Store\\(\\) entry point, that only works under that special assumption. \r\n-&gt; I recommend to drop this ticket in favor of a couple more examples in the docs showing how to use the existing Store\\(\\) paradigm under certain conditions \\(routehandle re-use\\).\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-03 17:17:42",
        "slug": "da81",
        "subject": "#213 RGRD: Add regrid store interface that uses Grids"
      },
      {
        "text": "This call can't create a routehandle without the Arrays in the Fields, however, this call could just create a sparse matrix. If so, another FieldRegridStore\\(\\) call which takes a sparse matrix as input should be added. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:25:44",
        "slug": "9e9f",
        "subject": "#213 RGRD: Add regrid store interface that uses Grids"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-12-01 17:35:45",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d315f2718463761fc0342",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/98fdb465/",
  "ticket_num": 213,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-12-01 17:35:45"
},{
  "status": "closed",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "o Implement Array::scalarProduct\\(\\) \\[think about whether this should be done following the precompute/execute pattern, to ultimately support a product between Arrays w/ any distribution, or whether it makes more sense to just keep it simple for now and introduce it as a product between Arrays of identical distribution. Making the right decision is more important if we decide to make this method available through the public API.\\]\r\no Implement a suitable \\_internal\\_ mechanism to attach and retrieve Arrays \\(and other pieces of information\\) to a RouteHandle.\r\no Ensure existing RouteHandle based Array communication methods are o.k. with Routehandles that hold extra information. \r\n\\*gjt\\*\r\n",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Array/RouteHandle support for conservative Regrid (2)",
  "discussion_thread": {
    "_id": "119569d7",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-01-19 22:23:08",
        "slug": "9004",
        "subject": "#214 LONG: Array/RouteHandle support for conservative Regrid (2)"
      },
      {
        "text": "Closed because the new implementation of conservative regridding doesn't require this capability. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:18:22",
        "slug": "d6a0",
        "subject": "#214 LONG: Array/RouteHandle support for conservative Regrid (2)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:18:22",
        "slug": "1362",
        "subject": "#214 LONG: Array/RouteHandle support for conservative Regrid (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:18:22",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31602718463761fc0354",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/119569d7/",
  "ticket_num": 214,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-12-04 19:35:51"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Gerhard Theurich, ESMF -&gt; will become important for Bob as he works on factorized Regrid\\(\\) schemes\\!\r\n\r\nThere is a ticket open \\#2909050 that deals with the factorization aspect of the seq indices in ASMM. However, it only covers the simplest to implement mode, i.e. \"full, non-factorized sparse matrix\" mode. In that mode one sparse matrix for the full index space must be passed into Array::sparseMatMulStore\\(\\). The indices may be specified in the multi-tuple fashion, reflecting the fact that the index space is considered factorized.\r\n\r\nThere are two additional modes that may provide memory and performance benefits:\r\n\r\n\"Explicit sparse matrix factorized mode\" - here the sparse matrix can be provided in pieces. Each piece covers a subspace of the factorized problem. Array::sparseMatMulStore\\(\\) is expected to carry out the tensor product of these factorized sparse matices and construct the full operation on the fly.\r\n\r\n\"Implicit sparse matrix factorized mode\" - here only those factorized sparse matrices that are not the identity matrix must be provided. Array::sparseMatMulStore\\(\\) will construct the comms according to the full sparse matrix tensor product considering absent factors as identity matrix.\r\n\r\n\\*gjt\\*",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: complete ASMM support for multi-comp. seqIndices (6)",
  "discussion_thread": {
    "_id": "1fb10663",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-01-19 22:23:08",
        "slug": "7008",
        "subject": "#215 LONG: complete ASMM support for multi-comp. seqIndices (6)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-01-19 22:23:08",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31612718463761fc036b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/1fb10663/",
  "ticket_num": 215,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-12-04 21:40:36"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Gary Block\r\n\r\nHi-\r\nI have successfully completed a user test of the new mesh code using the\r\nsource masking feature on version 4.0.0r beta snapshot 07. The data set\r\nconsisted of a 385x258x40 \\(~4 million\\) sample points of salinity data taken\r\noff the coast of California using the ROMS ocean model. This was regridded\r\nonto a 118x212x24 \\(~600000\\) grid. The purpose of the regridding was to map\r\nthe data set from the sample grid onto a grid having regularly spaced\r\nlatitude and longitude at specific depths.\r\n\r\nAlthough the focus of the test was on end to end testing using a actual\r\nEarth science data set, the majority of the execution time was spent in the\r\nESMF\\_FieldRegridStore subroutine.\r\n\r\nOverall, I was very pleased with the results. The primary remaining\r\nserious problem is getting segment faults when there aren\u2019t enough\r\nprocessors. I am also concerned about the number of processors and the\r\nexecution time required. Several segment fault problems have been reported\r\nand the code has steadily improved over the past several months. I\r\nappreciate the progress that has made in stabilizing the mesh code. This\r\nwas not easy work.\r\n\r\nI found the documentation for the masking feature of regrid incomplete.\r\nPart of the problem is that the srcMaskValues and dstMaskValues parameters\r\nfor the ESMF\\_FieldRegridStore \\(18.6.8\\) are not very well described and\r\nthere needs to be a cross reference back to 18.2.18. I would like to see a\r\nbetter description of how the mask values for the field along with values\r\nin the Grid mask determine whether a particular element is included or\r\nexcluded. For example, \u201ca grid element will be excluded if any of the\r\nmask values are equal to the mask value for the grid element.\u201d\r\n\r\nPlease note, that the Grid mask value allows for many data types including\r\nreal, but the RegridStore masks only allow a 32 bit integer. You may want\r\nto make a note on whether real values are rounded or truncated prior to\r\nusage.\r\n\r\nIn addition, I would like to set my own \u201cmissing value\u201d in the\r\ndestination array. Currently, this is zero filled, but zero may be a valid\r\nvalue for some data sets. Please consider this for a new feature request.\r\n\r\nFinally, I noticed that the throughput for the RegridStore was about 7.5%\r\nslower when using the source mask. The regrid run without a source mask\r\nfor mapping 385x258x40 onto 118x212x24 took 31.6 minutes for the\r\nRegridStore using a 128 node Linux cluster \\(cosmos\\). It took 34 minutes\r\nwhen the run was modified to use a the source mask.\r\n\r\nGary\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "RGRD: Add option to set missing value in destination array",
  "discussion_thread": {
    "_id": "c84a2a9d",
    "posts": [
      {
        "text": "- **summary**: Add option to set missing value in destination array --> RGRD: Add option to set missing value in destination array",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-12-18 18:20:36",
        "slug": "3345",
        "subject": "#216 RGRD: Add option to set missing value in destination array"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-12-18 18:20:36",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31622718463761fc0377",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c84a2a9d/",
  "ticket_num": 216,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-12-18 18:20:06"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Cecelia\r\n\r\nThis came about as a result of discussion during a ticket meeting.  Several tickets require a check mode, for example the bit-for-bit check that Tony Craig has requested.  This mode will require longer to execute, and is not likely to be turned on for regular runs. -- Cecelia",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "debug/check mode ",
  "discussion_thread": {
    "_id": "b2a8b901",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2009-12-21 22:06:19",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31632718463761fc0384",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b2a8b901/",
  "ticket_num": 217,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-12-21 22:06:19"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Ben Foster of NCAR HAO\r\n\r\nBen wanted to regrid from a grid to multiple copies of destination points. This seems like it would be a good application of grid-&gt;locstream regridding. This ticket also relates to 1893842 where locstream regridding is also mentioned as a subpiece. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Hook Locstream to regrid  as dest (5)",
  "discussion_thread": {
    "_id": "36113db1",
    "posts": [
      {
        "text": "- **summary**: Hook Locstream to regrid --> LONG: Hook Locstream to regrid (5)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-01-12 21:05:36",
        "slug": "2ce4",
        "subject": "#218 LONG: Hook Locstream to regrid  as dest (5)"
      },
      {
        "text": "- **summary**: LONG: Hook Locstream to regrid (5) --> LONG: Hook Locstream to regrid  as dest (5)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-01-12 21:08:08",
        "slug": "4919",
        "subject": "#218 LONG: Hook Locstream to regrid  as dest (5)"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:58:37",
        "slug": "8932",
        "subject": "#218 LONG: Hook Locstream to regrid  as dest (5)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:03:53",
        "slug": "4667",
        "subject": "#218 LONG: Hook Locstream to regrid  as dest (5)"
      },
      {
        "text": "Inform Shujia Zhou when this is done as part of 1893842.",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-15 20:05:06",
        "slug": "771a",
        "subject": "#218 LONG: Hook Locstream to regrid  as dest (5)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:03:53",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31632718463761fc038c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/36113db1/",
  "ticket_num": 218,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2009-12-22 23:05:51"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core developer\\) also relates to Gary Block's bug 2839848\r\n\r\nAdd functionality to regrid to precheck for elements which contain repeated points. Repeated points can cause an element to collapse to a line or a point, neither of which the regrid can handle. It might be useful to have this func, togglable, so the user can turn it off/on to increase efficiency. Another possiblity would be to fix the  degnerate elements, by clipping them out for example, however, even if this was implemented this detection capabiolity would probably still be useful, because often these elements can indicate an ill defined grid, which can be fixed on the user end.  ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Add degenerate element checks to regrid",
  "discussion_thread": {
    "_id": "5b038f6d",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-01-08 19:32:57",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31642718463761fc03ad",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/5b038f6d/",
  "ticket_num": 219,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-01-08 19:32:57"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Suggested by Gary Block while working on Test harness, but would also useful for other core  developers  and users of ESMF\r\n\r\nThe basic idea here is to add a trace flag to LogError which when on, causes ESMF\\_LogMessageFoundError to print out the \\(processor?\\), file, and line that it's called from. Thus, when the trace flag is on the code will give a trace of the execution of the code. This trace could be very useful in narrowing down where a segfault or other crash occurred. The trace flag should be default off, but should be setable by a LogError subroutine call \\(e.g. ESMF\\_LogErrorSet\\(\\)\\). The trace output should be written to stderror. \\(Would we want the user to be able to chose which file it's written to? and have stderror be the default?\\)  This should be a very easy feature to add. ",
  "labels": [
    "LogErr"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Add trace capability to LogError",
  "discussion_thread": {
    "_id": "083f809b",
    "posts": [
      {
        "text": "Two further comments to who will implement this:\r\n1\\) Consider setting the default mode in ESMF\\_Initialize\\(\\).\r\n2\\) Keep request \\#2865938 in mind, maybe implement both feature requests at the same time.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-01-27 21:50:33",
        "slug": "9897",
        "subject": "#220 Add trace capability to LogError"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 16:12:07",
        "slug": "74f1",
        "subject": "#220 Add trace capability to LogError"
      },
      {
        "text": "A tracing option is now in the trunk.  To enable and disable the feature, use the new 'trace' argument in  ESMF\\_LogSet.  A complimentary trace argument is in ESMF\\_LogGet for inquiry.\r\n\r\nThis currently covers the Fortran calls to ESMF\\_LogFoundError, ESMF\\_LogFoundAllocError, and ESMF\\_LogFoundDeallocError.  Still TODO are the c++ equivalents.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-03-23 21:49:07",
        "slug": "39c2",
        "subject": "#220 Add trace capability to LogError"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:12:07",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31652718463761fc03b5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/083f809b/",
  "ticket_num": 220,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-01-27 21:40:20"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "The original exchange between Bob and Gerhard is below. This seems critical for the LocStream background grid implementation. The request is basically to \r\n1\\) allow sparse matrices in ASMMStore\\(\\) that contain elements with seqIndices that are \\_not\\_ in srcArray/dstArray. Simply ignore these entries, don't return an error,\r\n2\\) have RedistStore\\(\\) construct an identity sparse matrix from the srcArray elements only, not checking whether the dstArray has the same number of elements. This will require \\#1 to work, or else ASMMStore\\(\\) will bail with error currently,\r\n3\\) provide the zeroflag in Redist\\(\\) calls.\r\n\\*gjt\\*\r\n\r\n\r\nRobert Oehmke wrote:\r\n&gt; Hi Gerhard,\r\n&gt; \r\n&gt;  Thanks for taking a deeper look at this\\! From what you say it sounds like if the two locstreams have the same number of elements it would work now and\r\n&gt; with some work on your part you could make it so if some elements are missing then the user could pass in a flag to get it to work. That seems reasonable, since by defalt the background grid func will return an error if items are missing too. \r\n&gt; \r\n&gt; Cecelia talked about getting this into 4.0.0rp1 if Arlindo wants it. If he doesn't want the missing element functionality, then having it for 5.00 seems good. If he does for the first version, then I'll reconsider the matrix approach. I have to say though, the more I think about it the more clean the arbdistgrid approach seems, since it would just allow the standard FieldRedist stuff to just work....\r\n&gt; \r\n&gt; Would you mind putting in a feature request? \r\n&gt; \r\n&gt; Thnaks,\r\n&gt; \r\n&gt; - Bob\r\n&gt; \r\n&gt; On Jan 27, 2010, at 11:49 PM, Gerhard Theurich wrote:\r\n&gt; \r\n&gt; \r\n&gt;&gt;Hi Bob,\r\n&gt;&gt;\r\n&gt;&gt;I just took a look at the docs and code and found that things are a little different currently than what I had thought earlier today.\r\n&gt;&gt;\r\n&gt;&gt;1\\) ASMMStore\\(\\) actually checks the sequence indices of the incoming sparse matrix against the srcArray and dstArray. It will bail out with an error if it finds sparse matrix elements that are outside of the srcArray/dstArray. I remember now that this was something Peggy had requested early on in her ASMM benchmarking, because it used to not check for this condition and fail somewhere later in the code. However, it doesn't seem difficult to implement an option where instead of bailing with error, the ASMMStore\\(\\) simply ignores these sparse matrix elements and continues with the rest. I don't think this should be the default behavior, but it is a well-defined option for when you know what you are doing.\r\n&gt;&gt;\r\n&gt;&gt;2\\) The situation in the RedistStore\\(\\) is currently also more restrictive. Here the total number of elements must match between srcArray and dstArray. The elements of the identity sparse matrix are constructed by using the srcArray sequence indices, so if src and dst differ in that regard then the follow-on call to ASMMStore\\(\\) will catch this as the issue described under \\#1.\r\n&gt;&gt;\r\n&gt;&gt;Again I think it would not be too difficult to provide the option to relax requirement \\#2 to where an identity sparse matrix is constructed with as many elements as there are in the srcArray, simply ignoring the fact that the dstArray may have a different number of elements. I think that this, combined with the relaxed option under \\#1, should give you exactly what you need for your LocStream background grid stuff. However, I also think you would need to use ArrayRedistStore\\(\\) in combination with ArraySMM\\(\\), because I think you probably would want to use the zeroflag=ESMF\\_REGION\\_SELECT to ensure that you do not overwrite elements that had no src points. Thinking about this now, at least under the relaxed options described, it seems that the zeroflag makes perfect sense for the ArrayRedist\\(\\) call, too. I should just add it.\r\n&gt;&gt;\r\n&gt;&gt;Hope this helps to clarify the current status of things and how I think we could move toward the functionality that you seem to need. Please let me know how this sounds to you. Depending on what you think, we should turn the above into a feature request. Will you need this for 5.0.0?\r\n&gt;&gt;\r\n&gt;&gt;-Gerhard\r\n&gt;&gt;\r\n",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Relax RedistStore() and SMMStore() for LocStream (2)",
  "discussion_thread": {
    "_id": "605f9aa2",
    "posts": [
      {
        "text": "WHO: Bob Oehmke, ESMF core team",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-01-28 17:29:35",
        "slug": "85a2",
        "subject": "#221 LONG: Relax RedistStore() and SMMStore() for LocStream (2)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 16:11:08",
        "slug": "0024",
        "subject": "#221 LONG: Relax RedistStore() and SMMStore() for LocStream (2)"
      },
      {
        "text": "- **summary**: Options to relax RedistStore() and ASMMStore() restrictions --> LONG: Relax RedistStore() and SMMStore() for LocStream (2)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-10-05 23:12:23",
        "slug": "6e7b",
        "subject": "#221 LONG: Relax RedistStore() and SMMStore() for LocStream (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-05 23:12:23",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31662718463761fc03cc",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/605f9aa2/",
  "ticket_num": 221,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-01-28 17:28:01"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Gerhard Theurich, ESMF Core\r\n\r\nThe feature requested by Fei under \\#2906981 has been implemented and documented on the Array and ArrayBundle level. Fei has reviewed the doc changes and the ticket has been closed. This ticket is for Fei to make the appropriate changes on the Field and FieldBundle level.\r\n\\*gjt\\*",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "Reflect weak congruency rule in Field, FieldBundle comm doc",
  "discussion_thread": {
    "_id": "241a08b7",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-02-01 21:59:38",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31682718463761fc03e2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/241a08b7/",
  "ticket_num": 222,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2010-02-01 21:59:38"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "In the 'make info' print out, it would be useful for support purposes to print out the version of the MPI which is in use.  This can often be found by using a -v or -V option on the mpirun or mpiexec command.  On some platforms a command like 'mpirun -v -np 1 /bin/true' might be needed.\r\n\r\nMods will also need to be made to the mpiuni mpirun script to allow a -v option.",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Print out MPI version number when possible",
  "discussion_thread": {
    "_id": "2440946e",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-02-03 20:10:42",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31682718463761fc03ea",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/2440946e/",
  "ticket_num": 223,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-02-03 20:10:42"
},{
  "status": "pending",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Raised during discussion with Bobby Hunter discussion, but needed for all NUOPC and other customers\r\n\r\nFieldBundle needs to have a regrid method since the basic data object for our applications is a FieldBundle, not a single Field.\r\n\r\n",
  "labels": [
    "FieldBundle"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "FieldBundle regrid",
  "discussion_thread": {
    "_id": "e3d3c185",
    "posts": [
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-07-06 16:57:27",
        "slug": "5642",
        "subject": "#224 FieldBundle regrid"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-07-06 16:57:27",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31682718463761fc03f2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e3d3c185/",
  "ticket_num": 224,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-03-23 18:32:23"
},{
  "status": "closed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "The test harness could use a procedure for accessing command line arguments, in order to provide file names.  Here is a proposed API specification:\r\n\r\nProposed command line argument call:\r\n\r\nReturn the count of command line arguments:\r\n\r\ninteger function ESMF\\_CommandLineArgc \\(\\)\r\n\r\n\r\nReturn a specific argument number.\r\n\r\nsubroutine ESMF\\_CommandLineGetArg \\(number\\[, value\\]\\[, length\\]\\[, rc\\]\\)\r\ninteger, intent\\(in\\) :: number\r\ncharacter\\(\\*\\), intent\\(out\\), optional :: value\r\ninteger, intent\\(out\\), optional :: length\r\ninteger, intent\\(out\\), optional :: rc\r\n\r\nWhere:\r\n\r\nnumber - the desired argument number.  0 = command name.  If negative,\r\nor unknown, a rc of ESMF\\_RC\\_ARG\\_VALUE is returned.\r\n\r\nvalue - the argument. If the provided string is too long, the value\r\nwill be blank-padded.  If provided string is too short, a\r\ntruncated value is returned, and a rc of ESMF\\_RC\\_ARG\\_SIZE is\r\nreturned.\r\n\r\nlength - length of the actual command argument - irrespective of\r\nthe length of the character string passed in arg\r\n\r\nrc - ESMF\\_SUCCESS on success\r\n\r\n\r\nImplementation:\r\n\r\nOn compilers that support Fortran-2003 command line argument access,\r\nwe can simply call the COMMAND\\_ARGUMENT\\_COUNT and GET\\_COMMAND\\_ARGUMENT\r\nintrinsic procedures.\r\n\r\nOn compilers that support the POSIX Fortran binding \\(i.e., IRIX, Intel\\),\r\nwe can call IPXF\\_ARGC and PXF\\_GETARG calls.  These provide the same\r\nfunctionality as the Fortran-2003 intrinsics - minus optional arguments.\r\n\r\nOn other compilers we can usually call non-Standard IARGC and GETARG\r\nprocedures.  Note that these do not offer full error handling.\r\n\r\n\r\nBugs:\r\n\r\nOn compilers which use GETARG, the rc may incorrectly return ESMF\\_SUCCESS,\r\nsince the typical GETARG call does not provide indication of errors.",
  "labels": [
    "Util"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Add Util routine for command line access",
  "discussion_thread": {
    "_id": "c6d9d890",
    "posts": [
      {
        "text": "Code is complete and committed to the trunk.  The test harness is now using the feature.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-06-29 21:57:08",
        "slug": "f049",
        "subject": "#225 Add Util routine for command line access"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-06-29 21:57:08",
        "slug": "b2b4",
        "subject": "#225 Add Util routine for command line access"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-29 21:57:08",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31692718463761fc03ff",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c6d9d890/",
  "ticket_num": 225,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-03-24 17:38:44"
},{
  "status": "pending",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bobby Hunter of BEI and Changsheng Chen from Univ. of Mass Dartmouth\r\n\r\nAdd an example of Mesh to Mesh regridding and a system test that demonstrates this on a component to component level.",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Add Mesh to Mesh regridding example",
  "discussion_thread": {
    "_id": "c8c0217e",
    "posts": [
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:05:23",
        "slug": "9930",
        "subject": "#226 Add Mesh to Mesh regridding example"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:06:37",
        "slug": "4440",
        "subject": "#226 Add Mesh to Mesh regridding example"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:06:37",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d316a2718463761fc0411",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c8c0217e/",
  "ticket_num": 226,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-03-31 21:07:03"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bobby Hunter from BEI\r\n\r\nThey would like a C interface Field Create from pointer. ",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "C_INTERF: Field Create from Pointer",
  "discussion_thread": {
    "_id": "a0cdde6d",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-04-07 18:45:24",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d316b2718463761fc0423",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a0cdde6d/",
  "ticket_num": 227,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-07 18:45:24"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bobby Hunter from BEI\r\n\r\nThey would like C interfaces to the attribute functionality. ",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG: C_INTERF: Attribute interfaces (4)",
  "discussion_thread": {
    "_id": "007a83bc",
    "posts": [
      {
        "text": "- **summary**: C_INTERF: Attribute interfaces --> LONG: C_INTERF: Attribute interfaces (4)",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-15 13:46:17",
        "slug": "7ade",
        "subject": "#228 LONG: C_INTERF: Attribute interfaces (4)"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:57:37",
        "slug": "2312",
        "subject": "#228 LONG: C_INTERF: Attribute interfaces (4)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-02-17 17:02:33",
        "slug": "802d",
        "subject": "#228 LONG: C_INTERF: Attribute interfaces (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:02:33",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d316b2718463761fc042b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/007a83bc/",
  "ticket_num": 228,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-07 18:47:43"
},{
  "status": "closed",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Tim Campbell, NRL\r\n\r\nWhile we met with Tim in Boulder \\(Feb. 2010\\), he mentioned that while he is waiting on masking features for Regrid, he could utilize ESMF HALO functions in his Coupler code. Send him a snapshot once the HALO feature becomes available.\r\n\r\n\\*gjt\\*",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "HALO: needs halo in Coupler",
  "discussion_thread": {
    "_id": "44683ed1",
    "posts": [
      {
        "text": "Notified Tim about the HALO implementation on Array, ArrayBundle, Fiueld , FieldBundle level that went out with ESMF 5.0.0. \r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-24 21:59:15",
        "slug": "3107",
        "subject": "#229 HALO: needs halo in Coupler"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-24 21:59:15",
        "slug": "7e04",
        "subject": "#229 HALO: needs halo in Coupler"
      },
      {
        "text": "Tim has a contractor working on introducing the ESMF HALO functionality to do the \"creeping\" \\(i.e., extrapolating\\) unmasked field values over the masked region. He says everything is looking good at this point. They are using the official ESMF\\_5\\_0\\_0 for this right now.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-25 20:04:01",
        "slug": "64cc",
        "subject": "#229 HALO: needs halo in Coupler"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-25 20:04:01",
        "slug": "938e",
        "subject": "#229 HALO: needs halo in Coupler"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-25 20:04:01",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d316c2718463761fc0442",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/44683ed1/",
  "ticket_num": 229,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-09 21:10:04"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\), but useful for anyone using Meshes\r\n\r\nAdd the capability to get node owners, coords, etc. back out of the Mesh.",
  "labels": [],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Get Mesh Node info",
  "discussion_thread": {
    "_id": "df329618",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> oehmke",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:02:02",
        "slug": "f94f",
        "subject": "#230 Get Mesh Node info"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:02:02",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d316e2718463761fc045d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/df329618/",
  "ticket_num": 230,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-04-12 23:09:11"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\), but this was suggested by a Mesh example review and should help out any Mesh user\r\n\r\n\r\nIn Mesh create calls break the local and nonlocal information into two separate lists \\(and associated changes to other parts of MeshCreate process\\)\r\n\\- This makes it less confusing that the field is only created on  the local parts\r\n\\- This makes it less confusing that the field halo to hold this nonlocal data would be at the end of the field memory instead of intermingled like in the combined lists now.\r\n\\- The non-local lists should be optional if they don't exist then the information can be automatically communicated. This makes things easier for the user because they don't  have to provide non-local information if they don't have it available, however, if they do provide the information then the Mesh code will skip the internal communication and work faster.\r\n\r\nAn possible API for MeshCreate is:\r\n\r\nESMF\\_MeshCreate\\(parametricDim, spatialDim,\r\nnodeIds, nonLocalNodeIds, nodeCoords, nonLocalNodeCoords, nodeOwners, nonLocaLNodeOwners,\r\nelemIds, elemTypes, elemConn, rc\\)\r\n\r\nWhere nonLocal... are all optional. Also note that to have an interface like this the elemConn could no longer be an index into the node array and would need to be changed, perhaps to contain node ids.\r\n\r\nAnother thought would be to keep the local and nonlocal info in one array, but use a special symbol in the arrays to indicate that the Mesh code should communicate to get the info.\r\n",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Improvement to make MeshCreate easier",
  "discussion_thread": {
    "_id": "1097e10c",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:00:38",
        "slug": "b78d",
        "subject": "#231 Improvement to make MeshCreate easier"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 17:01:10",
        "slug": "fd1f",
        "subject": "#231 Improvement to make MeshCreate easier"
      },
      {
        "text": "For CESM, add ability to autogenerate nodeOwners info, or just arbitrary decide it \\(in some cases it doesn't matter to them which is the owned node\\). ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2013-03-19 22:50:18",
        "slug": "3f22",
        "subject": "#231 Improvement to make MeshCreate easier"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:01:10",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d316e2718463761fc046a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/1097e10c/",
  "ticket_num": 231,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-16 16:23:58"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\), but useful for any user of Mesh\r\n\r\nExpand capability to use Mesh class in computations:\r\n\\- Add a method to pull out the Mesh neighbor relation so that a user can use the F90 Mesh class to actually do computation.\r\n\\- Make sure that the coord. output from Mesh is in a format that's useful for the user to do computation with Field.",
  "labels": [],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Capability to use Mesh in more computations",
  "discussion_thread": {
    "_id": "c4f1295f",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> oehmke",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 16:01:09",
        "slug": "a1d5",
        "subject": "#232 Capability to use Mesh in more computations"
      },
      {
        "text": "Should also include Mesh Halo.",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-01-12 20:56:27",
        "slug": "a097",
        "subject": "#232 Capability to use Mesh in more computations"
      },
      {
        "text": "- **summary**: Capability to use Mesh in more computations --> LONG: Capability to use Mesh in more computations (4)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-01-12 20:56:27",
        "slug": "78cd",
        "subject": "#232 Capability to use Mesh in more computations"
      },
      {
        "text": "- **summary**: LONG: Capability to use Mesh in more computations (4) --> Capability to use Mesh in more computations",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-01-12 20:56:55",
        "slug": "4534",
        "subject": "#232 Capability to use Mesh in more computations"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-12 20:56:55",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d316f2718463761fc0481",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c4f1295f/",
  "ticket_num": 232,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-04-16 16:25:13"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\), but useful for any Mesh user\r\n\r\n\\+ Mesh read/write to/from file\r\n\\- VTK format exists for both, but needs to be cleaned up and made public\r\n\\- netcdf format read exists in Peggy's cube sphere code\r\n",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Mesh IO",
  "discussion_thread": {
    "_id": "3b2bd1d4",
    "posts": [
      {
        "text": "The current VTK writer is in the legacy format. I wrote a VTK binary XML writer \\(=new format\\) that I commited in the MESH branch of ESMF. \n\nSome improvements could be done, but it may be useful.\n\nRegards,\nS\u00e9bastien",
        "attachments": [],
        "author": "sblaise",
        "timestamp": "2010-04-21 20:32:16",
        "slug": "054d",
        "subject": "#233 Mesh IO"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:53:52",
        "slug": "0904",
        "subject": "#233 Mesh IO"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:54:30",
        "slug": "a2e3",
        "subject": "#233 Mesh IO"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 11:54:30",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31702718463761fc049d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3b2bd1d4/",
  "ticket_num": 233,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-16 16:26:25"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\), but useful for any Mesh user\r\n\r\nIts difficult to find the beginning of a given element in elemConn, so it would make sense to develop a method which takes the elemType list and gives back an array which gives the index of each elem in the elemConn list.",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Mesh elemConn helper index list",
  "discussion_thread": {
    "_id": "7d309540",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-04-16 16:27:46",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31712718463761fc04b5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7d309540/",
  "ticket_num": 234,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-16 16:27:46"
},{
  "status": "closed",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\)\r\n\r\nMake it possible to create Fields on Mesh elements \\(right now you can just create a field on Mesh nodes\\).",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "FieldCreate on Mesh elements",
  "discussion_thread": {
    "_id": "a1a1bc25",
    "posts": [
      {
        "text": "Bob, this is already possible in the  MESH branch.\n\n\nAmik",
        "attachments": [],
        "author": "amikstcyr",
        "timestamp": "2010-04-21 20:17:01",
        "slug": "014f",
        "subject": "#235 FieldCreate on Mesh elements"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 15:58:50",
        "slug": "6bdc",
        "subject": "#235 FieldCreate on Mesh elements"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 15:58:50",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31722718463761fc04bd",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a1a1bc25/",
  "ticket_num": 235,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-16 16:33:05"
},{
  "status": "closed",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "Nested Attribute Packages need to be enhanced from the current single-child nests to multi-child nests.  This will allow a full tree structure of AttPacks to be constructed, which is required to handle any given XML file structure.  The CIM XML file, with its deep hierarchy, is an instance of such a full, multi-child tree structure.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Multi-child AttPack nests (full trees)",
  "discussion_thread": {
    "_id": "8bdfc526",
    "posts": [
      {
        "text": "CIM XML file as of 4/16/10",
        "attachments": [
          {
            "url": "http://sourceforge.net/p/esmf/feature-requests/_discuss/thread/8bdfc526/2a43/attachment/cim_xml041610.tz",
            "bytes": 38192
          }
        ],
        "author": "eschwab",
        "timestamp": "2010-04-21 21:47:28",
        "slug": "2a43",
        "subject": "#236 Multi-child AttPack nests (full trees)"
      },
      {
        "text": "Added F90 API overloaded methods ESMF\\_AttributeAdd\\(\\) to take arrays of nestConvention and nestPurpose \\(in addition to the already existing overloads that take a single nestConvention/nestPurpose\\) as arguments to create multi-child nests.  Unit tests created in ESMF\\_AttributeXMLUTest.F90\r\n\r\nSame as curatordb ticket \\#20 https://sourceforge.net/apps/trac/curatordb/ticket/20",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-06-30 21:49:35",
        "slug": "a9d3",
        "subject": "#236 Multi-child AttPack nests (full trees)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-06-30 21:49:36",
        "slug": "e563",
        "subject": "#236 Multi-child AttPack nests (full trees)"
      },
      {
        "text": "Keep in mind bug \\#2187242 , which is holding in pend status until the capability is resolved.  Please respond to Tom Henderson when this has been resolved.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-01-13 17:18:18",
        "slug": "e31b",
        "subject": "#236 Multi-child AttPack nests (full trees)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-30 21:49:36",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31722718463761fc04d0",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/8bdfc526/",
  "ticket_num": 236,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-21 21:47:28"
},{
  "status": "closed",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "Need the ability to output AttPacks and single Attributes, contained at the same nest level within a parent AttPack, in any order \\(interspersed\\). This contrasts with the current AttPack design in which any single Attributes appear before a nested AttPack.  Again, this enhancement is required to represent any XML file structure, which can have any number of simple types \\(individual tags/elements -- single level nodes\\) and complex types \\(tags/elements within tags/elements -- hierarchical, multi-level nodes \\(trees\\)\\), in any order \\(interspersed with each other\\), contained within a parent complex type.  The CIM XML file contains interspersed simple and complex element types.  See CIM XML file uploaded in Feature ticket \\#2990601.\r\n\r\nFor performance reasons \\(e.g. searching\\), we'll probably want to reserve the ability to re-order \\(sort\\) the Attributes and AttPacks internally; C++ STL may be useful for this.  XSD files could be used to map from internal order to external order \\(e.g., as written to an XML file\\).\r\n",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "AttPacks with interspersed AttPacks & individual Attributes",
  "discussion_thread": {
    "_id": "04aadaf8",
    "posts": [
      {
        "text": "Turns out this Is only an internal data structure to output xml mapping issue, which is done by AttributeWrite\\(xml\\).  Hopefully this will be supplanted by using external xsd files, in combination with Xerces.  See ticket \\#3077517 \"LONG: Define att packs with an xsd\"",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 22:53:29",
        "slug": "136e",
        "subject": "#237 AttPacks with interspersed AttPacks & individual Attributes"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 22:53:29",
        "slug": "925c",
        "subject": "#237 AttPacks with interspersed AttPacks & individual Attributes"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 22:53:29",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31732718463761fc04f1",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/04aadaf8/",
  "ticket_num": 237,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-21 21:48:54"
},{
  "status": "closed",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "Need to keep track of XML element 'attributes' apart from XML elements.  If the need is just for output, then, again, XSD files could be used to provide the mapping.  This will allow the current basic ESMF Attributes to remain unchanged to hold either an XML element 'attribute' or a regular XML element.  On the other hand, if internal action is needed based on knowing the distinction between an XML element 'attribute' or just a regular XML element, then we may need a flag or other mechanism \\(\"Attribute of an Attribute\"\\) to represent it within our internal data structure.  The CIM XML file contains element attributes.  See CIM XML file uploaded in Feature ticket \\#2990601.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Represent XML element 'attributes'",
  "discussion_thread": {
    "_id": "1c148d3b",
    "posts": [
      {
        "text": "Implemented with logical flag and F90 API argument 'attrAttribute' and use it in AttributeWriteXML\\(\\) to output corresponding ESMF Attribute in 'XML attribute' format.  Added unit tests in ESMF\\_AttributeXMLUTest.F90.\r\n\r\nSame as ticket \\#22 in curatordb:  https://sourceforge.net/apps/trac/curatordb/ticket/22",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-06-30 21:15:05",
        "slug": "c86d",
        "subject": "#238 Represent XML element 'attributes'"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-06-30 21:15:05",
        "slug": "738f",
        "subject": "#238 Represent XML element 'attributes'"
      },
      {
        "text": "Removed 'attrAttribute' flag and API argument.  Turns out we don't need to mirror our Attribute data structure to match CIM XML output structure.  Mapping between ESMF Attributes to CIM XML output is done currently in AttributeWrite\\(\\(CIM\\).  This may be replaced with a Xerces/DOM/XSD based approach; this is part of FR \\#3103887 \"LONG:  CIM: Auto validate CIM XML output with CIM xsd\".",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-03-31 15:49:33",
        "slug": "6a7f",
        "subject": "#238 Represent XML element 'attributes'"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-30 21:15:05",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31742718463761fc0503",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/1c148d3b/",
  "ticket_num": 238,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-21 21:49:07"
},{
  "status": "open",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "Add ESMF\\_Time and possibly ESMF\\_TimeInterval as Attribute types, alongside the existing numeric and string types, to be consistent with the standard XML/XSD simple types of 'dateTime' and 'duration'.  This would require adding Serialize\\(\\)/Deserialize\\(\\) methods to TimeManager/Attributes and adding AttributeGet\\(\\)/Set\\(\\) and AttPackGet\\(\\)/Set\\(\\) methods, as well as enhancing AttributeWrite\\(\\) to handle these new Attribute types.  There are other standard simple types we may want to add as needed.  The CIM XML file does contain dateTime element types.  See CIM XML file uploaded in Feature ticket \\#2990601.\r\n",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "LONG: Add ESMF_Time & ESMF_TimeInterval Attribute types",
  "discussion_thread": {
    "_id": "b9d72b8b",
    "posts": [
      {
        "text": "Could be used as a solution to ticket \\#1634441 \"LONG:COMP\\_CLK:ESMF time-objects to States \\(5\\)\"",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 17:56:09",
        "slug": "c3db",
        "subject": "#239 LONG: Add ESMF_Time & ESMF_TimeInterval Attribute types"
      },
      {
        "text": "- **summary**: Add ESMF_Time & ESMF_TimeInterval Attribute types --> LONG: Add ESMF_Time & ESMF_TimeInterval Attribute types",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 23:15:00",
        "slug": "5326",
        "subject": "#239 LONG: Add ESMF_Time & ESMF_TimeInterval Attribute types"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 23:15:00",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31752718463761fc051a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b9d72b8b/",
  "ticket_num": 239,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-21 21:49:24"
},{
  "status": "open",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "XSD has an include/import mechanism, so a schema can be defined in pieces \"from the bottom up\" -- smaller pieces put together to form larger pieces, at varying levels in a tree.  'Include' is for locally defined pieces, 'import' is for pieces defined by other organizations/namespaces.  This may be of use when it comes time to create an XSD for the CIM XML file \\(responsibility of METAFOR?\\).  If the smaller pieces can be determined first \\(\"nailed down\"\\), then they could be rearranged into different hierarchies to see what might work best before determining a final standard.  See CIM XML file uploaded in Feature ticket \\#2990601.\r\n\r\nNeed to consider/design AttPack specification \\(convention, purpose\\) to be within the file and/or external \\(via arguments to the AttributeRead\\(\\) method calls\\).  Take into account multiplicity \\(one-to-many relationships\\) between ESMF data objects \\(component, state, field, grid, etc\\) and AttPacks.\r\n\r\nAlso need to determine appropriate directories in the ESMF distribution tree to place and install the XSD files.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "LONG: Create XSD files for standard AttPacks",
  "discussion_thread": {
    "_id": "f9ff1010",
    "posts": [
      {
        "text": "Related to ticket 3077517 \"Define att packs with an xsd\".  \r\n\r\nHave created first-cut xsd's to help populate attpack's values by validating them, but need to go further to use xsds to actually define packages within ESMF, to replace the current library hard-code method.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 16:15:38",
        "slug": "34f1",
        "subject": "#240 LONG: Create XSD files for standard AttPacks"
      },
      {
        "text": "- **summary**: Create XSD files for standard AttPacks --> LONG: Create XSD files for standard AttPacks",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 16:15:39",
        "slug": "8399",
        "subject": "#240 LONG: Create XSD files for standard AttPacks"
      },
      {
        "text": "- **summary**: LONG: Create XSD files for standard AttPacks --> LONG: Create XSD files for standard AttPacks (4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:49:59",
        "slug": "56b3",
        "subject": "#240 LONG: Create XSD files for standard AttPacks"
      },
      {
        "text": "- **summary**: LONG: Create XSD files for standard AttPacks (4) --> LONG: Create XSD files for standard AttPacks",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:51:21",
        "slug": "1fdc",
        "subject": "#240 LONG: Create XSD files for standard AttPacks"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 11:51:21",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31752718463761fc052c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f9ff1010/",
  "ticket_num": 240,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2010-04-21 21:49:51"
},{
  "status": "closed",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "From Sylvia:\r\n\r\n\"The CIM XML format is broken down into several records within the main file \\(e.g. platform information is its own record\\).  ESMF will need to be modified to create these records, imbed them within the main file, and associate particular nodes within the tree with these records. \"\r\n\r\n\"Eventually,  ESMF will need to validates its output and controlled vocabulary using the CIM XSD \\(does not exist yet\\).\"\r\n\r\nTo do:\r\n\r\n1\\) Need to ensure AttributeWrite\\(\\) can output the CIM format, with its top-level uniform multiple record structure.  This could conceivably be done by outputting several pieces into temporary files \\(possibly with multiple AttributeWrite\\(\\) calls\\), and concatenating them together into the final file.   Before calling AttributeWrite\\(\\), ensure Attribute tree and values are setup properly \\(as per feature tickets 2990601, 2990602, 2990603, and possibly 2990604\\).  Ensure any necessary Attribute links between ESMF objects are set correctly.\r\n\r\n2\\) For associating records with particular Attribute tree nodes, the XML/XSD 'identityContraint' feature and/or XPath may be useful to uniquely identify specific XML records/nodes.\r\n\r\n3\\) Validation with XSDs is done during parsing \\(input\\) with standard XML tools such as Xerces.  So to validate output, the last step in AttributeWrite\\(\\) would be to read it back in \\(Xerces parse\\), with validation enabled against the corresponding XSD file, before returning success/failure.  See also feature ticket \\#2990606.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "AttributeWrite() for CIM XML",
  "discussion_thread": {
    "_id": "b026b807",
    "posts": [
      {
        "text": "IN 5.1.0",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:17:57",
        "slug": "5965",
        "subject": "#241 AttributeWrite() for CIM XML"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:17:57",
        "slug": "7c6e",
        "subject": "#241 AttributeWrite() for CIM XML"
      },
      {
        "text": "In 5.1.0, the CIM XML output from AttributeWrite\\(xml\\) validates against the CIM standard as of 10/19/2010.\r\n\r\nValidation requirement moved to new ticket \\#3103887 \"LONG:  Validate CIM XML output with CIM xsd\"",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 22:37:12",
        "slug": "d1ae",
        "subject": "#241 AttributeWrite() for CIM XML"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 22:37:12",
        "slug": "ebc0",
        "subject": "#241 AttributeWrite() for CIM XML"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 22:37:12",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31762718463761fc0548",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b026b807/",
  "ticket_num": 241,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-04-22 16:39:13"
},{
  "status": "closed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "See support request \\#2976083 from Jim Abeles.  Jim would like the ability to turn informational\r\nmessages on and off - without recompiling the program.\r\n\r\nOne proposal is to add a 'msgtype' argument to ESMF\\_LogSet and ESMF\\_LogOpen which would\r\naccept an ESMF\\_MsgType value to set a severity level.  ESMF\\_MsgType has values of either\r\nESMF\\_LOG\\_INFO, ESMF\\_LOG\\_WARNING, or ESMF\\_LOG\\_ERROR.  An ESMF application could\r\nread from a Config file to get the desired severity level from a user.  \\(Implement a system test or\r\nexample to show this.\\)",
  "labels": [
    "LogErr"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Add filtering capability for LogErr messages",
  "discussion_thread": {
    "_id": "2959d941",
    "posts": [
      {
        "text": "This feature has been implemented for the 5.1 internal release.  Still need to ping Jim, then pend it.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-11-05 15:47:33",
        "slug": "0cd3",
        "subject": "#242 Add filtering capability for LogErr messages"
      },
      {
        "text": "Sent Jim an email referring him to 5.1 and documentation.  Pending.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-11-05 15:58:21",
        "slug": "b3ff",
        "subject": "#242 Add filtering capability for LogErr messages"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-11-05 15:58:21",
        "slug": "40f6",
        "subject": "#242 Add filtering capability for LogErr messages"
      },
      {
        "text": "Pinged Jim on this.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-01-07 01:00:38",
        "slug": "2b32",
        "subject": "#242 Add filtering capability for LogErr messages"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-01-07 01:00:38",
        "slug": "c77d",
        "subject": "#242 Add filtering capability for LogErr messages"
      },
      {
        "text": "Jim confirmed that this feature resolves his problem.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-01-13 03:34:04",
        "slug": "3dc3",
        "subject": "#242 Add filtering capability for LogErr messages"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-01-13 03:34:04",
        "slug": "eee5",
        "subject": "#242 Add filtering capability for LogErr messages"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 03:34:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31772718463761fc0564",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/2959d941/",
  "ticket_num": 242,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-06-02 17:40:46"
},{
  "status": "closed",
  "reported_by_id": "51015dd5b9363c6f38026e41",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "garyblock",
  "description": "The test harness needs to allow test cases to be selected through command line arguments.  This will eliminate \"hard coded\" test file names.",
  "labels": [
    "Test Harness"
  ],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "Selection of test cases through command line ",
  "discussion_thread": {
    "_id": "de84fd49",
    "posts": [
      {
        "text": "Added two command line arguments, the test case path and the test case name.  ",
        "attachments": [],
        "author": "garyblock",
        "timestamp": "2010-06-03 14:21:10",
        "slug": "15f7",
        "subject": "#243 Selection of test cases through command line "
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "garyblock",
        "timestamp": "2010-06-03 14:21:10",
        "slug": "f9a1",
        "subject": "#243 Selection of test cases through command line "
      },
      {
        "text": "Verify that the test harness is actually using this. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-03-31 15:45:24",
        "slug": "f582",
        "subject": "#243 Selection of test cases through command line "
      },
      {
        "text": "- **assigned_to**: garyblock --> svasquez\n- **status**: closed --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-03-31 15:45:25",
        "slug": "8b46",
        "subject": "#243 Selection of test cases through command line "
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2011-03-31 15:46:05",
        "slug": "181a",
        "subject": "#243 Selection of test cases through command line "
      },
      {
        "text": "This work is done.",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2011-05-13 20:54:25",
        "slug": "d181",
        "subject": "#243 Selection of test cases through command line "
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2011-05-13 20:54:25",
        "slug": "2fb6",
        "subject": "#243 Selection of test cases through command line "
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-05-13 20:54:25",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31792718463761fc058f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/de84fd49/",
  "ticket_num": 243,
  "custom_fields": {
    "_priority": "7"
  },
  "created_date": "2010-06-03 14:15:55"
},{
  "status": "closed",
  "reported_by_id": "51015dd5b9363c6f38026e41",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "garyblock",
  "description": "Currently, the test harness supports one \"non-exhaustive\" and one \"exhaustive\" test case for each class.  Since the \"exhaustive\" for redistribution takes so long, the test harness will only run a \"non-exhaustive\" test case.  The test harness needs to be upgraded to allow test case selection from several test cases for a class.",
  "labels": [
    "Test Harness"
  ],
  "assigned_to": "garyblock",
  "assigned_to_id": "51015dd5b9363c6f38026e41",
  "private": false,
  "summary": "Selection of more than 2 cases per class",
  "discussion_thread": {
    "_id": "a88d2cac",
    "posts": [
      {
        "text": "The test harness supports selection of a test case from an arbitrary number of test cases for a class.",
        "attachments": [],
        "author": "garyblock",
        "timestamp": "2010-06-03 14:29:41",
        "slug": "21df",
        "subject": "#244 Selection of more than 2 cases per class"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "garyblock",
        "timestamp": "2010-06-03 14:29:41",
        "slug": "8dd3",
        "subject": "#244 Selection of more than 2 cases per class"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-03 14:29:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d317a2718463761fc05ba",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a88d2cac/",
  "ticket_num": 244,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-06-03 14:26:33"
},{
  "status": "closed",
  "reported_by_id": "51015dd5b9363c6f38026e41",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "garyblock",
  "description": "The test harness needs to support for UNI test cases.",
  "labels": [
    "Test Harness"
  ],
  "assigned_to": "garyblock",
  "assigned_to_id": "51015dd5b9363c6f38026e41",
  "private": false,
  "summary": "Test Harness support for UNI test cases",
  "discussion_thread": {
    "_id": "09e03d7c",
    "posts": [
      {
        "text": "Implemented and updated documentation. Integrated into CVS.  Awaiting feedback fro Silvario.",
        "attachments": [],
        "author": "garyblock",
        "timestamp": "2010-07-19 17:14:25",
        "slug": "2796",
        "subject": "#245 Test Harness support for UNI test cases"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "garyblock",
        "timestamp": "2010-07-19 17:14:26",
        "slug": "6151",
        "subject": "#245 Test Harness support for UNI test cases"
      },
      {
        "text": "The implementation and documentation are complete.\r\n",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2010-11-05 21:44:57",
        "slug": "a6a7",
        "subject": "#245 Test Harness support for UNI test cases"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **status**: pending --> closed",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2010-11-05 21:44:57",
        "slug": "0986",
        "subject": "#245 Test Harness support for UNI test cases"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 21:44:57",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d317b2718463761fc05cc",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/09e03d7c/",
  "ticket_num": 245,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-06-03 14:51:20"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Chaing \\(James\\) Chen, with NRLMRY for NOGAPS\r\n\r\nOn 06/05/10 as part of an email under \\#3007633:\r\n\r\n&gt; 1. The sample code in the quick\\_start is very useful to grasp the ESMF \r\n&gt; concept. However, the gap to go from there to a more realistic model is \r\n&gt; big. The most difficult part is to figure out how to do the coupling. I \r\n&gt; have tried to use the \"coupled-flow\" in the /src/demo as the guiding \r\n&gt; post. However, the \"coupled-flow\" is completely outdated. The existence \r\n&gt; of the outdated demo code adds unnecessary confusion. My first good \r\n&gt; understanding of ESMF came from the running of the L63 Lorenz model \r\n&gt; provided by Tim Whitcomb \\(tim.whitcomb@nrlmry.navy.mil\\). It is a very \r\n&gt; simple demo model, however, it can provide user a good concept about all \r\n&gt; the important essence of ESMF. I highly recommend to include L63 as a \r\n&gt; part of ESMF distribution.\r\n\r\n\\*gjt\\*\r\n",
  "labels": [
    "General Documentation"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: Need better/working DEMO (2)",
  "discussion_thread": {
    "_id": "0f243f63",
    "posts": [
      {
        "text": "- **milestone**:  --> Add Other Capability",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-07 16:15:18",
        "slug": "57e0",
        "subject": "#246 LONG: Need better/working DEMO (2)"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 15:38:07",
        "slug": "6b42",
        "subject": "#246 LONG: Need better/working DEMO (2)"
      },
      {
        "text": "- **summary**: Need better/working DEMO --> LONG: Need better/working DEMO (2)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:56:02",
        "slug": "0ddd",
        "subject": "#246 LONG: Need better/working DEMO (2)"
      },
      {
        "text": "The demo has been reworked and re-enabled \\(mostly Fei's work\\). \r\n\r\nAs for James \\(the user of the ticket here\\), I have been working with him through NUOPC, and he is using the NUOPC layer to do the model Component driving and coupling, so he is definitely taken care of from that end. \r\n\r\nAs Tim Whitcomb's Lorenz model \"tutorial\", we have a separate ticket open to think about integrating it as an ESMF tutorial.\r\n\r\n\\*gjt\\*\r\n",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-10-05 23:09:41",
        "slug": "bbca",
        "subject": "#246 LONG: Need better/working DEMO (2)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-10-05 23:09:41",
        "slug": "e315",
        "subject": "#246 LONG: Need better/working DEMO (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-05 23:09:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d317c2718463761fc05e8",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0f243f63/",
  "ticket_num": 246,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2010-06-07 16:14:43"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Chaing \\(James\\) Chen, with NRLMRY for NOGAPS\r\n\r\nOn 06/05/10 as part of an email under \\#3007633:\r\n\r\n&gt; 2. I strongly believe that ESMF community needs to have a forum. An \r\n&gt; effective forum can help user to resolve issues quickly without opening \r\n&gt; trouble tickets, and can help your group to save time on Support. It is \r\n&gt; a win-win situation.\r\n\r\n\\*gjt\\*",
  "labels": [],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Should ESMF have an online Forum?",
  "discussion_thread": {
    "_id": "b862c5f5",
    "posts": [
      {
        "text": "- **assigned_to**: cdeluca --> theurich",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-07 16:59:06",
        "slug": "405e",
        "subject": "#247 Should ESMF have an online Forum?"
      },
      {
        "text": "move to Usability tracker per Sylvia on 02/17/11 ticket meeting\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 17:00:36",
        "slug": "b156",
        "subject": "#247 Should ESMF have an online Forum?"
      },
      {
        "text": "- **labels**: 904964 --> \n- **milestone**: 650741 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 17:00:36",
        "slug": "d8d5",
        "subject": "#247 Should ESMF have an online Forum?"
      },
      {
        "text": "Moved to FeatureRequests per Cecelia and Sylvia on 07/21/11.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-07-21 15:51:44",
        "slug": "2187",
        "subject": "#247 Should ESMF have an online Forum?"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 17:00:36",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d317e2718463761fc0608",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b862c5f5/",
  "ticket_num": 247,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-06-07 16:17:31"
},{
  "status": "pending",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tim Campbell\r\n\r\nThis is minor suggestion for improving the field and array api.  I noticed that although one can create a field or array using arraySpec, there is no direct way to get an arraySpec from a field or array.  Instead, one must get the typekind and rank and then create an arraySpec.  I suggest adding arraySpec to the FieldGet and ArrayGet methods.\r\n\r\nHere is the context.  I have a subroutine that takes an array as an argument.  In the subroutine I want to create an array that has the same distGrid and arraySpec as the passed in array.  However, I want the locally created array to have \\(possibly\\) a different halo region \\(i.e., total region\\).  I looks like the simplest path is to accomplish this is to get the distGrid and arraySpec from the passed in array, then use these specifications in a call to ESMF\\_ArrayCreateAllocate.\r\n\r\n-Tim",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "ArraySpec in ArrayGet()/FieldGet()",
  "discussion_thread": {
    "_id": "7c16fbda",
    "posts": [
      {
        "text": "- **labels**: 588648 --> Field\n- **milestone**: 495011 --> \n- **summary**: a suggestion --> ArraySpec in ArrayGet()/FieldGet()",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-06-11 23:21:49",
        "slug": "85b3",
        "subject": "#248 ArraySpec in ArrayGet()/FieldGet()"
      },
      {
        "text": "Fei and Gerhard added this to FieldGet\\(\\), ArrayGet\\(\\), respectively. Tim was notified.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 15:36:38",
        "slug": "b158",
        "subject": "#248 ArraySpec in ArrayGet()/FieldGet()"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-05 15:36:38",
        "slug": "ea74",
        "subject": "#248 ArraySpec in ArrayGet()/FieldGet()"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 15:36:38",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31802718463761fc0623",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7c16fbda/",
  "ticket_num": 248,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-06-08 15:24:54"
},{
  "status": "open",
  "reported_by_id": "519d24fa2718463761fab958",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "scholbrock",
  "description": "The purpose of this feature will be to include LibCF as another option for regridding in the ESMF.  Currently only offline regridding is available through LibCF, however future releases of LibCF will include online capabilities.  The goal here is to provide an API using the ESMCI interface to make a call to LibCF's regridding function \"nccf\\_fregrid\".",
  "labels": [
    "Field"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Integrating LibCF Regridding",
  "discussion_thread": {
    "_id": "99886082",
    "posts": [
      {
        "text": "- **assigned_to**: scholbrock --> oehmke",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 15:33:25",
        "slug": "d6fe",
        "subject": "#249 Integrating LibCF Regridding"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 15:33:25",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31822718463761fc063a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/99886082/",
  "ticket_num": 249,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-06-09 20:25:25"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  Amik St Cyr/NCAR\r\n\r\nThis ticket is to merge in what's on the Mesh branch with what's on the trunk.  The anticipated strategy is to first bring over new development to the branch and test, then merge the updated branch to the trunk.  Amik still needs to provide information on what new capabilities are in the branch. - Cecelia",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG: Merge Mesh branch with trunk (3)",
  "discussion_thread": {
    "_id": "794036f0",
    "posts": [
      {
        "text": "- **summary**: Merge Mesh branch with trunk (3) --> LONG: Merge Mesh branch with trunk (3)",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-06-15 13:45:20",
        "slug": "fd64",
        "subject": "#250 LONG: Merge Mesh branch with trunk (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-15 13:45:20",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31832718463761fc0647",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/794036f0/",
  "ticket_num": 250,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-06-10 19:42:06"
},{
  "status": "closed",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "There should be a call to return a cubed sphere grid as an ESMF Mesh that was created from a netcdf file.",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "Cubed sphere shortcut",
  "discussion_thread": {
    "_id": "c4e8e63e",
    "posts": [
      {
        "text": "An API ESMF\\_MeshCreate\\(\\) was developed to create a Mesh from a cubed-sphere grid defined in a SCRIP grid file or in an ESMF unstructured grid file. The API is included in the ESMF 5.0.0 internal release.",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2010-11-05 03:33:37",
        "slug": "893c",
        "subject": "#251 Cubed sphere shortcut"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2010-11-05 03:33:37",
        "slug": "ad9c",
        "subject": "#251 Cubed sphere shortcut"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 03:33:37",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31842718463761fc0654",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c4e8e63e/",
  "ticket_num": 251,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-06-10 22:22:47"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "There should be a call to create a Tripole grid from file and return as an ESMF Mesh",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Create Tripole Mesh from File",
  "discussion_thread": {
    "_id": "c681daae",
    "posts": [
      {
        "text": "- **summary**: Tripole shortcut --> Create Tripole Grid from File",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-06-14 05:07:05",
        "slug": "14fe",
        "subject": "#252 Create Tripole Mesh from File"
      },
      {
        "text": "This seems like it would be covered by 2902778, however, I'm not sure if there's a reason we would want this as a separate ticket, so I'm leaving it for now. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-06-14 05:20:40",
        "slug": "57c5",
        "subject": "#252 Create Tripole Mesh from File"
      },
      {
        "text": "- **summary**: Create Tripole Grid from File --> Create Tripole Mesh from File",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-06-14 05:28:31",
        "slug": "68ed",
        "subject": "#252 Create Tripole Mesh from File"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-06-14 05:28:31",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31842718463761fc0666",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c681daae/",
  "ticket_num": 252,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-06-10 22:24:53"
},{
  "status": "pending",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  John Dennis\r\n\r\nJohn is interested in using asynchronous ESMF array halos to support a prototype project he is doing with a summer student.  The eventual goal is to get it into the POP model.  He needs an interface added that supports arb distributed data.",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Halo for arb distributed data",
  "discussion_thread": {
    "_id": "c88a822f",
    "posts": [
      {
        "text": "This was implemented and documentation was added. John was notified several times. The feature is available on the ESMF installations on kraken. We are now wating for John to get back to this and try it out.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-10-20 15:53:40",
        "slug": "7980",
        "subject": "#253 Halo for arb distributed data"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-10-20 15:53:40",
        "slug": "feaf",
        "subject": "#253 Halo for arb distributed data"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-10-20 15:53:40",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31852718463761fc067d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c88a822f/",
  "ticket_num": 253,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-07-06 19:52:02"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Karl Taylor of CMIP5 \r\n\r\nEnsure that conservative regridding takes both the source and destination areas into account. A more detailed explanation is provided in the attached file from Karl.",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Ensure conserv. regrid takes src and dest area into account",
  "discussion_thread": {
    "_id": "4a1af4f6",
    "posts": [
      {
        "text": "",
        "attachments": [
          {
            "url": "http://sourceforge.net/p/esmf/feature-requests/_discuss/thread/4a1af4f6/ac98/attachment/Karl_taylor.pdf",
            "bytes": 162367
          }
        ],
        "author": "oehmke",
        "timestamp": "2010-07-12 20:39:47",
        "slug": "ac98",
        "subject": "#254 Ensure conserv. regrid takes src and dest area into account"
      },
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 356870 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-01-06 17:14:20",
        "slug": "a5d5",
        "subject": "#254 Ensure conserv. regrid takes src and dest area into account"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-06 17:14:20",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31872718463761fc068e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4a1af4f6/",
  "ticket_num": 254,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-07-12 20:39:46"
},{
  "status": "closed",
  "reported_by_id": "5048c2deb9363c1e4f0e247b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "peggyli",
  "description": "Merge the ESMF\\_CubedSphereRegridEx.F90 and ESMC\\_RegridWgtGenEx.c into one Fortran application and move it to /src/apps.",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "Merge offline weight generator apps",
  "discussion_thread": {
    "_id": "9ba7f9a3",
    "posts": [
      {
        "text": "ESMF\\_RegridWeightGen.F90 was developed and included in the ESMF 5.0.0 internal release.",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2010-11-05 03:30:06",
        "slug": "2e0b",
        "subject": "#255 Merge offline weight generator apps"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2010-11-05 03:30:06",
        "slug": "f44a",
        "subject": "#255 Merge offline weight generator apps"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 03:30:06",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31882718463761fc06a4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/9ba7f9a3/",
  "ticket_num": 255,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-07-22 05:48:14"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: Tim Whitcomb - NASA\r\n\r\nIn a conversation with Tim at the Summer School on Atmospheric Modeling \\(SSAM 2010\\) he asked if it was possible to use the ESMF LogErr capabilities with a general Fortran code.  By general Fortran he meant that he wanted to use LogErr for codes that weren't necessarily involved with ESMF Components.  He understands that he will still have to link his code with ESMF to use this capability, and he is willing to accept that overhead for the ability to be able to do tracebacks and Log writing.  Tim said that he is familiar with using LogErr inside ESMF Components, and that he would like to be able to use that same knowledge with non-ESMF Fortran development.",
  "labels": [
    "LogErr"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "LogErr available to user code",
  "discussion_thread": {
    "_id": "7c95a9d8",
    "posts": [
      {
        "text": "In working with the external demos it became apparent that not all of the LogErr API could be used without a \\#include ESMF.h, because the current implementation requires the use of macros defined in this file.  We would like to move to an ESMF implementation that requires only \"use ESMF\\_Mod\" in user code to allow access to the full public ESMF API. Specifically, the ESMF\\_CONTEXT and related macros are not available through public API with only a 'use ESMF\\_Mod' in user code.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2010-11-05 15:43:06",
        "slug": "26e5",
        "subject": "#256 LogErr available to user code"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:34:39",
        "slug": "070b",
        "subject": "#256 LogErr available to user code"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 11:34:39",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31892718463761fc06b6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7c95a9d8/",
  "ticket_num": 256,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-07-28 22:48:35"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "The gridspec package in ESG has changed.  Several attributes have been removed, new ones have been added.   The deprecated attributes should be removed in the ESMF version as well, unless they are needed by ESMF for other reasons.  If they are, they should be put into a separate ESMF Grid Package. \r\nThe new items should be added. \r\n\r\nThese are the items to be potentially removed:\r\n\r\nNumDims\r\nNZ\r\nIsPoleCovered\r\n\r\nThese are the items to be added\r\n\r\nCongruentTiles boolean\r\nNumberOfGridTiles  integer",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Adjust Grid Attribute Package to match latest ESG Gridspec",
  "discussion_thread": {
    "_id": "b15bfad8",
    "posts": [
      {
        "text": "NumDims, NZ, IsPoleCovered removed, NumberOfGridTiles added.  CongruentTiles already exists.  Builds and runs ok in overnight tests.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-08-27 22:08:41",
        "slug": "539e",
        "subject": "#257 Adjust Grid Attribute Package to match latest ESG Gridspec"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-08-27 22:08:42",
        "slug": "077f",
        "subject": "#257 Adjust Grid Attribute Package to match latest ESG Gridspec"
      },
      {
        "text": "verified in 5.1.0",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:29:26",
        "slug": "e4b1",
        "subject": "#257 Adjust Grid Attribute Package to match latest ESG Gridspec"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:29:26",
        "slug": "b8a3",
        "subject": "#257 Adjust Grid Attribute Package to match latest ESG Gridspec"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-01 22:29:26",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31892718463761fc06c9",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b15bfad8/",
  "ticket_num": 257,
  "custom_fields": {
    "_priority": "7",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-08-18 19:33:51"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Metafor is changing their CIM output\r\n\r\nNow if a users sets the role to \"author\", output author\r\nif the users sets the role to Principalinvestigator, output Principal Investigator",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Modify Responsible Party Attribute Package",
  "discussion_thread": {
    "_id": "c0da11f8",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-09-27 22:37:25",
        "slug": "6365",
        "subject": "#258 Modify Responsible Party Attribute Package"
      },
      {
        "text": "done in 5.1.0",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:19:04",
        "slug": "77f6",
        "subject": "#258 Modify Responsible Party Attribute Package"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:19:04",
        "slug": "27ac",
        "subject": "#258 Modify Responsible Party Attribute Package"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-01 22:19:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d318a2718463761fc06e5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c0da11f8/",
  "ticket_num": 258,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-08-20 16:06:13"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "This is a new attribute.  See email snippet from Allyn below.  \r\nThis belongs to CIM Main\r\n\r\nDon't start this task until:\r\n\r\na\\) The METAFOR online validtator has been updated with the new version of the CIM\r\nb\\) We get an example of the output format \r\n\r\nBoth above have been requested. Sylvia will update this ticket as those items become available. \r\n\r\nAll,\r\n\r\nI have added an optional onlineResource element to SoftwareComponent  as of revision 1884.\r\n\r\nRegards,\r\nAllyn",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Add \"onlineResource\" to CIM Main Attribute Package",
  "discussion_thread": {
    "_id": "edce1bab",
    "posts": [
      {
        "text": "I talked with Allyn today.  He did implement a upper level URL at the software component level.  \r\nSo, this is what we need to do:\r\n\r\n1\\) In the CIM Main package, add the attribute \"URL\" to the package.\r\n2\\) Here is what the export looks like:\r\n\r\n\r\n&lt;gmd:onlineResource&gt;\r\n&lt;gmd:CI\\_OnlineResource&gt;\r\n&lt;gmd:linkage&gt;\r\n&lt;gmd:URL&gt;www.nerc.ac.uk&lt;/gmd:URL&gt;\r\n&lt;/gmd:linkage&gt;\r\n&lt;/gmd:CI\\_OnlineResource&gt;\r\n&lt;/gmd:onlineResource&gt;\r\n\r\n",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-09-27 22:24:22",
        "slug": "c377",
        "subject": "#259 Add \"onlineResource\" to CIM Main Attribute Package"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-09-27 22:24:22",
        "slug": "ced1",
        "subject": "#259 Add \"onlineResource\" to CIM Main Attribute Package"
      },
      {
        "text": "In 5.1.0",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:18:20",
        "slug": "3df5",
        "subject": "#259 Add \"onlineResource\" to CIM Main Attribute Package"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:18:21",
        "slug": "e612",
        "subject": "#259 Add \"onlineResource\" to CIM Main Attribute Package"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-01 22:18:21",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d318b2718463761fc06fc",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/edce1bab/",
  "ticket_num": 259,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-08-25 16:32:53"
},{
  "status": "pending",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Bob Oehmke, ESMF core\r\n\r\nFrom Bob's email 09/01/2010:\r\n\r\n1\\. The ability to defer setting the connectionList until later after the DistGrid create. This would allow the user to create a custom index space/distribution, but still be able to set the topology stuff using Grid. I guess this could also be implemented as an interface to create a new Distgrid from an old one, but replacing it's connectionList\\(\\). \\(This later option might actually make more sense, but I guess we would just have to make sure that the user's aware that the distgrid they pull out of Grid is different that the one they passed in\\)\r\n\r\n2\\.  Have the DistgridCreate which creates a new distgrid from an old one with extra padding also add the padding to the connection. \\(This may already happen\\).\r\n\r\nBoth of these interfaces can just be on the C++ side.\r\n\r\n\\*gjt\\*\r\n",
  "labels": [
    "DistGrid - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "DistGridCreate() for Grid topology work",
  "discussion_thread": {
    "_id": "b22a4b5d",
    "posts": [
      {
        "text": "This has been implemented and is available on the TRUNK. See email traffic for details. Waiting for Bob to use and verify.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-09-14 18:33:51",
        "slug": "c081",
        "subject": "#260 DistGridCreate() for Grid topology work"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-09-14 18:33:51",
        "slug": "4c18",
        "subject": "#260 DistGridCreate() for Grid topology work"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-09-14 18:33:51",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d318c2718463761fc0718",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b22a4b5d/",
  "ticket_num": 260,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-09-10 16:40:21"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "The CIM Citation package can be set by the user but not exported.  It needs to be exportable as part of the overall CIM XML.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Export CIM Citation Attribute Package",
  "discussion_thread": {
    "_id": "6d4615c9",
    "posts": [
      {
        "text": "verified in ST for 5.1.0 SJM",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:14:57",
        "slug": "18ca",
        "subject": "#261 Export CIM Citation Attribute Package"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:14:57",
        "slug": "bc49",
        "subject": "#261 Export CIM Citation Attribute Package"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-01 22:14:57",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d318c2718463761fc0729",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6d4615c9/",
  "ticket_num": 261,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-09-27 20:48:44"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "CIM Attribute packages are currently only exportable as CIM XML.\r\n\r\nExtend this so that they can we written out as:\r\n\r\nFirst Priority: Tab delimited file \\(earl says one week to do\\)\r\nSecond Priority: Generic XML \\(earl says one week to do\\)\r\n",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "LONG:CIM: Increase export options for CIM attribute packages",
  "discussion_thread": {
    "_id": "09726aa3",
    "posts": [
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:21:28",
        "slug": "55cf",
        "subject": "#262 LONG:CIM: Increase export options for CIM attribute packages"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 15:18:36",
        "slug": "58c1",
        "subject": "#262 LONG:CIM: Increase export options for CIM attribute packages"
      },
      {
        "text": "- **summary**: Extend export formats for CIM attribute packages --> LONG: Extend export formats for CIM attribute packages",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 23:09:38",
        "slug": "8ec2",
        "subject": "#262 LONG:CIM: Increase export options for CIM attribute packages"
      },
      {
        "text": "- **summary**: LONG: Extend export formats for CIM attribute packages --> LONG:CIM: Increase export options for CIM attribute packages",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:16:49",
        "slug": "ca2e",
        "subject": "#262 LONG:CIM: Increase export options for CIM attribute packages"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 11:16:49",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d318d2718463761fc073b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/09726aa3/",
  "ticket_num": 262,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-09-27 20:50:31"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "RPs come in 5 flavors.  The user needs to decide on a flavor and depending upon that choice set other attributes.  Currently, there is nothing to prevent the user from setting the wrong attributes for the flavor chosen. \r\n",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "CIM:  Implement Responsible Party Error Checking",
  "discussion_thread": {
    "_id": "acc5b6ef",
    "posts": [
      {
        "text": "This will likely be a sub-item of ticket \\#3103887 \"LONG:  Validate CIM XML output with CIM xsd\"",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 23:08:41",
        "slug": "df05",
        "subject": "#263 CIM:  Implement Responsible Party Error Checking"
      },
      {
        "text": "- **summary**: Implement Responsible Party Error Checking --> CIM:  Implement Responsible Party Error Checking",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:14:51",
        "slug": "56d4",
        "subject": "#263 CIM:  Implement Responsible Party Error Checking"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 11:14:51",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d318e2718463761fc0757",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/acc5b6ef/",
  "ticket_num": 263,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-09-27 21:56:50"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "until RP error checking is in place, we need an example of how to set each flavor of RP.  ",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "CIM: Create responsible party examples",
  "discussion_thread": {
    "_id": "b66e6c2a",
    "posts": [
      {
        "text": "done for 5.1.0",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:12:40",
        "slug": "016d",
        "subject": "#264 CIM: Create responsible party examples"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:12:40",
        "slug": "35ad",
        "subject": "#264 CIM: Create responsible party examples"
      },
      {
        "text": "verified in reference manual for 5.1.0",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:28:35",
        "slug": "18eb",
        "subject": "#264 CIM: Create responsible party examples"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:28:35",
        "slug": "99a8",
        "subject": "#264 CIM: Create responsible party examples"
      },
      {
        "text": "- **summary**: create responsible party examples --> CIM: Create responsible party examples",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:46:03",
        "slug": "6836",
        "subject": "#264 CIM: Create responsible party examples"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 11:46:03",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d318f2718463761fc0769",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b66e6c2a/",
  "ticket_num": 264,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-09-27 21:58:30"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Currently, you can have only one Responsible Party, Platform, or Citation package per component.  We need the ability to have multiple packages per component",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "LONG: Enable multiple att packages per component (3)",
  "discussion_thread": {
    "_id": "f70e4c0d",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2010-11-01 22:19:40",
        "slug": "77a1",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 15:18:35",
        "slug": "7f46",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "- **summary**: LONG: Enable multple, similiar packages per component (3) --> LONG: Enable multiple, similiar packages per component (3)\n- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 10:52:26",
        "slug": "bd7b",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "- **summary**: LONG: Enable multiple, similiar packages per component (3) --> LONG: Enable multiple attribute packages per component (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:50:37",
        "slug": "a558",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "This is required to finalize the CIM output correctly. ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-01-13 13:42:25",
        "slug": "8ab3",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "- **summary**: LONG: Enable multiple attribute packages per component (3) --> LONG: CIM: Enable multiple att packages per component (3)",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-01-13 13:42:25",
        "slug": "b571",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "Related to 2873767 \"Custom Attribute package to set up standard Attpack\", since this \\(3076837\\) will allow creation of a standard attpack \\(CIM Comp\\), with standard nested attpacks \\(RP, Citation, Platform\\).",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-01-13 18:41:03",
        "slug": "e71a",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "This is a general attribute feature. It should not in any way be specific to the CIM. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-15 17:17:06",
        "slug": "4973",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "- **summary**: LONG: CIM: Enable multiple att packages per component (3) --> LONG: Enable multiple att packages per component (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-15 17:17:06",
        "slug": "ae16",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "See also ticket  3162102, \"AttributeUpdate\\(\\) handle mult. instances of nested attpacks\"",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-01-19 23:35:38",
        "slug": "3106",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "This was introduced in the ESMF 5.2.0 release: \r\n\r\n\"Added ability to create multiple instances of the Attribute packages ISO 191115/Responsible Party Description and/or ISO 191115/Citation Description, nested within a standard CIM 1.0/Model Component Simulation Description package for Components.\"\r\n\r\nMultiple instances of a Platform package are not required.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-19 02:40:31",
        "slug": "1fa3",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-19 02:40:31",
        "slug": "928a",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "I have examined simulation Simulation Metadata: CESM1.0 SMS.f09\\_g16.X.bluefire in the ESG display.  I have seen multiple RP packages of various flavors \\(e.g. PI, contact, funding source\\), and have seen multiple references displayed.  \r\n\r\nI have not specifically seen multiple platform packages yet.\r\n\r\nI think it is safe to close the ticket. ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-10-19 22:11:46",
        "slug": "3fda",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-10-19 22:11:46",
        "slug": "1e99",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-19 22:26:22",
        "slug": "6763",
        "subject": "#265 LONG: Enable multiple att packages per component (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-19 22:26:22",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31902718463761fc078a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f70e4c0d/",
  "ticket_num": 265,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-09-27 22:00:49"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "How would this work?\r\nWould it involve interface changes? ",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "LONG: Define attribute packages with an xsd",
  "discussion_thread": {
    "_id": "fb4c5482",
    "posts": [
      {
        "text": "Related to ticket \\#2990606 \"Create XSD files for standard AttPacks\", which is about populating an attpack's values from xsd.\r\n\r\nExplore moving attpack definitions and output mapping outside of code:\r\n\\-- Benefit:  to remove necessity of touching library code in order to keep up with evolving external standards \\(CIM\\).\r\n\\-- use xsd files?  \\(use ESMF xsd's to constrain CIM xsds? \\(create ESMF std packages as subsets of CIM std?\\)\r\n\\-- need to use CIM xsd's to output\r\n\\-- need to use DOM vs. SAX2 standard API?\r\n\\-- what are public API needs/impact?\r\n",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 15:49:51",
        "slug": "0508",
        "subject": "#266 LONG: Define attribute packages with an xsd"
      },
      {
        "text": "- **summary**: Explore consequences of creating att packs from an xsd --> LONG: Define att packs with an xsd",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 15:49:52",
        "slug": "08eb",
        "subject": "#266 LONG: Define attribute packages with an xsd"
      },
      {
        "text": "Related to ticket \\#3103887 \"LONG:  Validate CIM XML output with CIM xsd\"",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 22:44:32",
        "slug": "bce2",
        "subject": "#266 LONG: Define attribute packages with an xsd"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 10:53:17",
        "slug": "cf55",
        "subject": "#266 LONG: Define attribute packages with an xsd"
      },
      {
        "text": "- **summary**: LONG: Define att packs with an xsd --> LONG: Define attribute packages with an xsd",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:13:35",
        "slug": "b0d1",
        "subject": "#266 LONG: Define attribute packages with an xsd"
      },
      {
        "text": "This is to define the CIM using their XSD instead of an internal hardwired setup. ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-01-13 13:41:15",
        "slug": "bafb",
        "subject": "#266 LONG: Define attribute packages with an xsd"
      },
      {
        "text": "- **summary**: LONG: Define attribute packages with an xsd --> LONG: CIM: Define attribute packages with an xsd",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-01-13 13:41:15",
        "slug": "d34e",
        "subject": "#266 LONG: Define attribute packages with an xsd"
      },
      {
        "text": "This is a general attribute feature that does not only relate to the CIM.  It must be general enough to use for other schema. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-15 17:15:33",
        "slug": "173c",
        "subject": "#266 LONG: Define attribute packages with an xsd"
      },
      {
        "text": "- **summary**: LONG: CIM: Define attribute packages with an xsd --> LONG: Define attribute packages with an xsd",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-15 17:15:33",
        "slug": "ade7",
        "subject": "#266 LONG: Define attribute packages with an xsd"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-02-17 16:57:47",
        "slug": "0133",
        "subject": "#266 LONG: Define attribute packages with an xsd"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:57:47",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31932718463761fc07dd",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/fb4c5482/",
  "ticket_num": 266,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-09-28 19:42:02"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Just learned that in the CIM, users can create their own ResponsiblePartyRoles and then decide if that role equates to an individual or organization.\r\n\r\ne.g. \r\nResponsiblePartyRole = AttributeGoddess\r\n\r\nI don't think we should implement this until after we have the means of automatically setting IndividualName/OrganizationName based upon the values for FundingSource, etc.  It might mean we need the ability to create a custom attribute in a package that already exists.  ",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "CIM: Enable custom responsible party packages",
  "discussion_thread": {
    "_id": "0b0b63eb",
    "posts": [
      {
        "text": "- **summary**: Enable custom responsible party packages --> CIM: Enable custom responsible party packages",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:23:47",
        "slug": "0507",
        "subject": "#267 CIM: Enable custom responsible party packages"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 11:23:47",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31952718463761fc0818",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0b0b63eb/",
  "ticket_num": 267,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-09-28 21:58:52"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Convention = CIM 1.0\r\nPurpose = Component Property Description\r\n\r\nWill give us field and Scientific Properties\r\n\r\nSubattributes are:\r\n\r\nShortname\r\nLongname\r\nDescription\r\nStandardName\r\nUnits\r\nIntent\r\n",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "CIM: Enable fields and scientific properties",
  "discussion_thread": {
    "_id": "3472947f",
    "posts": [
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 15:18:35",
        "slug": "0871",
        "subject": "#268 CIM: Enable fields and scientific properties"
      },
      {
        "text": "- **priority**: 5 --> 9\n- **summary**: Create a component property package --> CIM: Create a component property package",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:30:02",
        "slug": "8200",
        "subject": "#268 CIM: Enable fields and scientific properties"
      },
      {
        "text": "- **summary**: CIM: Create a component property package --> CIM: Enable fields and scientific properties",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:31:25",
        "slug": "5dd1",
        "subject": "#268 CIM: Enable fields and scientific properties"
      },
      {
        "text": "Related to \\(same as?\\) ticket 3101109 \"CIM: Change Inputs Attribute Package to be on the Component\"",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-01-13 18:23:33",
        "slug": "03fc",
        "subject": "#268 CIM: Enable fields and scientific properties"
      },
      {
        "text": "Beginning with ESMF 5.2.0, CF Field info, from the CIM/Inputs attpack, is written to the respective field's component's &lt;componentProperty&gt;'s in the CIM XML output file.  However, this is not harvested by ESG \\(1.3.1\\).  The CIM allows for the CF field &lt;componentProperty&gt; info to be written within the &lt;simulationRun&gt;&lt;input&gt;s \\(where the field coupling info is written, at the top-level of the file, not part of any component\\), so this avenue could be explored as a means for ESG ingestion.\r\n\r\nFor post ESMF 5.2.0r \\(5.2.0rp1 and 5.3.0\\), a new CIM \"Scientific Properties Description\" Attribute package has been added which can hold any user-defined name/value sets \\(one or more values for each name\\).  However, in order to be ingested and displayed by ESG, the Attribute names must be part of the Metafor controlled vocabulary for scientific property names.  ",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-20 01:01:48",
        "slug": "9c9e",
        "subject": "#268 CIM: Enable fields and scientific properties"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 11:31:25",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31952718463761fc0825",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3472947f/",
  "ticket_num": 268,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-01 22:24:23"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Currently the Inputs Package is attached to Fields.  \r\nChange this so that they are attached directly to a component.\r\nThis will match what we are doing with Component Properties\r\n\r\n",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "CIM: Change Inputs Attribute Package to be on the Component",
  "discussion_thread": {
    "_id": "343e8113",
    "posts": [
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-11-05 15:18:35",
        "slug": "6503",
        "subject": "#269 CIM: Change Inputs Attribute Package to be on the Component"
      },
      {
        "text": "- **summary**: Change Inputs Attribute Package to be on the Component --> CIM: Change Inputs Attribute Package to be on the Component",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:28:19",
        "slug": "a7a3",
        "subject": "#269 CIM: Change Inputs Attribute Package to be on the Component"
      },
      {
        "text": "Related to \\(same as?\\) ticket 3101108 \"CIM: Enable fields and scientific properties\"",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-01-13 18:22:22",
        "slug": "e778",
        "subject": "#269 CIM: Change Inputs Attribute Package to be on the Component"
      },
      {
        "text": "Not sure if this is still necessary.  Currently, in 5.2.0r, the CIM/Inputs attpack is attached to an ESMF Field, but for output, its info is split and written to two places in the CIM XML file:\r\n\r\n1\\) Coupling info is written to the &lt;simulationRun&gt; section as &lt;input&gt;s.\r\n2\\) CF field info is written in the &lt;componentProperty&gt; section of the field's component.\r\n\r\nAlso, the CIM allows for the CF field &lt;componentProperty&gt; info to be written within the &lt;simulationRun&gt;&lt;input&gt;s \\(at the top-level of the file, not part of any component\\), so this could be explored further.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-20 00:21:10",
        "slug": "f125",
        "subject": "#269 CIM: Change Inputs Attribute Package to be on the Component"
      },
      {
        "text": "In Item 2\\) in previous comment about CF field info, this is not currently harvested by ESG \\(1.3.1\\), whereas the coupling info in item 1\\) is harvested and displayed by ESG.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-20 00:31:05",
        "slug": "9372",
        "subject": "#269 CIM: Change Inputs Attribute Package to be on the Component"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 11:28:19",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31962718463761fc0846",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/343e8113/",
  "ticket_num": 269,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-01 22:25:55"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "When a system has no netCDF installation, it'd be great if PIO can swtich to ascii or native mode and writes out ascii/native output file. Not sure if this is possible in PIO. Need investigation.",
  "labels": [
    "I/O"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "LONG: Field/ArrayWrite can write ascii output (2)",
  "discussion_thread": {
    "_id": "858cb1e7",
    "posts": [
      {
        "text": "- **assigned_to**: feiliu --> samsoncheung",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2010-11-03 19:37:05",
        "slug": "810f",
        "subject": "#270 LONG: Field/ArrayWrite can write ascii output (2)"
      },
      {
        "text": "- **summary**: Field/ArrayWrite can write ascii output --> LONG: Field/ArrayWrite can write ascii output (2)",
        "attachments": [],
        "author": "samsoncheung",
        "timestamp": "2011-02-17 16:57:13",
        "slug": "efdb",
        "subject": "#270 LONG: Field/ArrayWrite can write ascii output (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:57:13",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31972718463761fc0867",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/858cb1e7/",
  "ticket_num": 270,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-03 19:17:59"
},{
  "status": "open",
  "reported_by_id": "5048c2deb9363c1e4f0e247b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "peggyli",
  "description": "Currently, ESMF\\_RegridWeightGen uses NetCDF.  It would be good to support PIO in order to be consistent with the ESMF IO package and provide better IO performance and flexibility.\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "Add PIO support in Offline Regridding application",
  "discussion_thread": {
    "_id": "ca792486",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 16:33:48",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31992718463761fc0879",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/ca792486/",
  "ticket_num": 271,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-05 16:33:48"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  Unidate, GFDL via Bob and Cecelia\r\n\r\nIt would be great if the offline regrid could accept gridspec files.  Could be just single tile at first. - Cecelia",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Offline regrid accept gridspec files (3)",
  "discussion_thread": {
    "_id": "be8702d4",
    "posts": [
      {
        "text": "- **priority**: 5 --> 7\n- **summary**: offline regrid accept gridspec files --> Offline regrid accept gridspec files",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 10:51:38",
        "slug": "c34b",
        "subject": "#272 LONG: Offline regrid accept gridspec files (3)"
      },
      {
        "text": "- **summary**: Offline regrid accept gridspec files --> LONG: Offline regrid accept gridspec files (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:47:12",
        "slug": "d47b",
        "subject": "#272 LONG: Offline regrid accept gridspec files (3)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 16:56:05",
        "slug": "1109",
        "subject": "#272 LONG: Offline regrid accept gridspec files (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:56:05",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31992718463761fc0881",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/be8702d4/",
  "ticket_num": 272,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-05 16:40:40"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Tim Campbell\r\n\r\nTim asked for the ability to do nearest neighbor regridding \\(with a search radius\\) as part of extrapolation, It would be good to have this capaiblity in general. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Nearest neighbor regridding (4)",
  "discussion_thread": {
    "_id": "67d737db",
    "posts": [
      {
        "text": "The time here is for nearest neighbor with a maximum radius of search. Unbounded would be longer. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 17:41:25",
        "slug": "776b",
        "subject": "#273 LONG: Nearest neighbor regridding (4)"
      },
      {
        "text": "- **summary**: Nearest neighbor regridding --> LONG: Nearest neighbor regridding (4)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2010-11-05 17:41:25",
        "slug": "5ab8",
        "subject": "#273 LONG: Nearest neighbor regridding (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:41:25",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d319a2718463761fc0898",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/67d737db/",
  "ticket_num": 273,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-05 17:25:20"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(of core team\\), but useful for anyone who uses regrid\r\n\r\nInvestigate which types of regridding would be useful to have, for example, Tri-cubic and then add them. I would estimate something like an average of a month to add each new regridding types, but it would obviously vary with the regridding type \\(some could be really quick and some slower\\). ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Add other types of regridding (3+4*R)",
  "discussion_thread": {
    "_id": "f2638188",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:38:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d319a2718463761fc08aa",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f2638188/",
  "ticket_num": 274,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-05 17:38:41"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\), but useful for users who want to do 3D conservative regridding\r\n\r\nThe hard part here is the 3D clipping between polyhedra, if we can get that done then the rest should be easy. There are a few papers on this and I have some ideas.....",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: 3D conservative regridding (8)",
  "discussion_thread": {
    "_id": "95b461be",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-05 17:46:22",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d319b2718463761fc08b2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/95b461be/",
  "ticket_num": 275,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-05 17:46:22"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\), but would be really cool, and would be useful to researchers who are looking at new types of interpolation\r\n\r\nThe idea behind this is to provide an interface to users which would allow them to use the parallel communication and searching capbabilites of ESMF regridding, but allow them to do the actual calculation of the regridding weights. This would allow researchers \\(and users with custom regridding\\) to easily develop interpolation capabilites without needing to worry about developing parallel search cababilites and parallel recombination of the weights. Very cool\\! \r\n\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Regrid internal interface (4)",
  "discussion_thread": {
    "_id": "d74bdc14",
    "posts": [
      {
        "text": "- **priority**: 5 --> 7\n- **summary**: LONG: Regrid research interface (4) --> LONG: Regrid internal interface (4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:27:01",
        "slug": "a7ab",
        "subject": "#276 LONG: Regrid internal interface (4)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 16:54:43",
        "slug": "8d29",
        "subject": "#276 LONG: Regrid internal interface (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:54:43",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d319b2718463761fc08ba",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d74bdc14/",
  "ticket_num": 276,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-05 17:55:42"
},{
  "status": "open",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "Related to ticket \\#3077517 \"LONG: Define att packs with an xsd\".\r\n\r\nAutomate validating ESMF CIM XML output against CIM xsds.\r\n\r\nCan validate 2 ways:\r\n\r\n1\\) Using a METAFOR/CIM website \\(automatable?\\):\r\na\\) http://metafor.cs.man.ac.uk:8192/xmlreport/cimupload \\(will probably be fluid, close to development head\\)\r\nb\\) http://cirrus.badc.rl.ac.uk:5000/validate \\(part of portal, will likely be tied to a CIM release, starting with CIM 1.5\\)\r\n\r\n2\\) Locally using Xerces and downloaded CIM xsd tree:\r\nTo checkout CIM:\r\n\\----------------\r\nDevelopment:\r\nESMF\\_5\\_1\\_0 validates against svn 2210:\r\nsvn co -r2210 http://metaforclimate.eu/svn/CIM/branches/dev1.5\r\nsvn co -r2210 http://metaforclimate.eu/svn/external\\_schemas\r\n\r\nRelease:\r\n\\-------------\r\nsvn co http://metaforclimate.eu/svn/CIM/tags/version-1.4\r\nsvn co http://metaforclimate.eu/svn/external\\_schemas\r\n\\(gets well-established standards:  xlink, gmd, gco, etc.\\)\r\n\r\nCan validate manually using example command-line tools for Xerces, together with top-level xsd file cim.xsd:\r\n\r\nGet load-grammar-sax.cxx and load-grammar-dom.cxx from:\r\nhttp://www.codesynthesis.com/~boris/blog/2010/03/15/validating-external-schemas-xerces-cxx/\r\nhttp://codesynthesis.com/~boris/data/load-grammar/load-grammar-sax.cxx\r\nhttp://codesynthesis.com/~boris/data/load-grammar/load-grammar-dom.cxx\r\n\\-- or --\r\nuse examples in Xerces distro:\r\n\\{Xerces install dir\\}/bin/SAX2Count, SAXCount, DOMCount\r\n\r\nIn order to validate, edit output xml file to use these xml attributes in its root element,\r\nto reference the local cim.xsd hierarchy, e.g:\r\nxmlns=\"http://www.metaforclimate.eu/schema/cim/1.5\"\r\n\\(namespace must match the one you're validating against\\)\r\nxsi:schemaLocation=\"http://www.metaforclimate.eu/schema/cim/1.5 file:///home/eschwab/cim/dev1.5/cim.xsd\"\r\n\r\n",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "LONG:  CIM: Auto validate CIM XML output with CIM xsd",
  "discussion_thread": {
    "_id": "5b6001f7",
    "posts": [
      {
        "text": "- **summary**: LONG:  Validate CIM XML output with CIM xsd --> LONG:  CIM: Validate CIM XML output with CIM xsd",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:24:36",
        "slug": "ff4e",
        "subject": "#277 LONG:  CIM: Auto validate CIM XML output with CIM xsd"
      },
      {
        "text": "Would be even better if ESMF output were generated \\(driven\\) via the CIM.xsd tree, rather than the current hard-coded approach in AttributeWrite\\(\\).  Then wouldn't need to validate \\(only do in tests\\), and the ESMF library code release would not be so tightly coupled with CIM releases.  But would first step in AttributeWrite\\(\\) would need to create an equivalent XML attribute tree in memory, from our ESMF Attribute tree, using the standard XML DOM approach \\(as opposed to SAX2\\).",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-01-13 17:24:46",
        "slug": "aa27",
        "subject": "#277 LONG:  CIM: Auto validate CIM XML output with CIM xsd"
      },
      {
        "text": "- **summary**: LONG:  CIM: Validate CIM XML output with CIM xsd --> LONG:  CIM: Auto validate CIM XML output with CIM xsd",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-02-17 16:54:16",
        "slug": "f01f",
        "subject": "#277 LONG:  CIM: Auto validate CIM XML output with CIM xsd"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:54:16",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d319c2718463761fc08cc",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/5b6001f7/",
  "ticket_num": 277,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-05 22:35:52"
},{
  "status": "open",
  "reported_by_id": "519d24fb2718463761fab97a",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "samsoncheung",
  "description": "On Nov 4, we called Arlindo da Silva to understand what kind of ESMF\\_IO API he would like to see in ESMF IO. The email below has paraphrased what he said on the phone.  Basically, in addition to write out a FieldBundle, he likes to see if the file has different resolution than the expected field, the code will do regriding/interpolation behind the scene.  Below email is for documentation.\r\n\r\n\r\n\\--------------------------------- Original Message ---------------------------------\r\nSubject: Re: ESMF IO feature\\(s\\)\r\nFrom:    \"Samson Cheung\" &lt;cheung@math.ucdavis.edu&gt;\r\nDate:    Tue, November 9, 2010 10:23 am\r\nTo:      \"Arlindo da Silva\" &lt;arlindo.dasilva@nasa.gov&gt;\r\nCc:      esmf\\_core@list.woc.noaa.gov\r\n\\------------------------------------------------------------------------------------\r\n\r\nHi Arlindo,\r\n\r\nI got the data, thank you\\!\r\nCheers,\r\n\r\n~Samson\r\n\r\nOn Mon, November 8, 2010 7:59 am, Arlindo da Silva wrote:\r\n&gt; On Fri, Nov 5, 2010 at 6:29 PM, Samson Cheung &lt;cheung@math.ucdavis.edu&gt;wrote:\r\n&gt;\r\n&gt;&gt; Hello Arlindo,\r\n&gt;&gt;\r\n&gt;&gt; Thank you for giving me those useful information on the phone\\!\r\n&gt;&gt; I had a chance to talk to Bill Pullman and asked him the similar\r\n&gt;&gt; questions regarding the future API in ESMF IO.\r\n&gt;&gt;\r\n&gt;&gt; I can see from the user level, one wants asynchronous I/O from\r\n&gt;&gt; FieldBundle and State.  However, one point you stressed\r\n&gt;&gt; was that when reading in a variable, the grid size of the variable\r\n&gt;&gt; may is not corresponding to the expected grid size in the Field; thus,\r\n&gt;&gt; interpolation/regrid should be automatically done behind the scene.\r\n&gt;&gt;\r\n&gt;&gt; I will discuss with Cecelia, after that I will consider\r\n&gt;&gt; this \"resolution interpolation\" as a feature request in the\r\n&gt;&gt; future ESMF release. However, if any additional feature\\(s\\) that come\r\n&gt;&gt; to your mind, please let me know too.\r\n&gt;&gt;\r\n&gt;&gt; On the other hand, you said you would give me a set of data, so that\r\n&gt;&gt; I can do some timing study with our current Parallel IO capability.\r\n&gt;&gt; I am ready for that now. Please simply let me know where to\r\n&gt;&gt; download when you have a chance.\r\n&gt;&gt;\r\n&gt;&gt;\r\n&gt;\r\n&gt; Go to:\r\n&gt;\r\n&gt;      http://gmao.gsfc.nasa.gov/forecasts/\r\n&gt;\r\n&gt; Click on anonymous ftp on the left, GEOS-5 Assimilation. These are our 1/4\r\n&gt; deg global files. Take a large one, say \\*aer\\_Nv\\* from the assimilation\r\n&gt; collections. If you have problems with the ftp contact support@nccs.nasa.gov\r\n&gt; .\r\n&gt;\r\n&gt;\r\n&gt;     Arlindo\r\n&gt;\r\n&gt;\r\n&gt;\r\n&gt;\r\n&gt;\r\n&gt;\r\n&gt;&gt; Cheers,\r\n&gt;&gt;\r\n&gt;&gt; Samson\r\n&gt;&gt;",
  "labels": [
    "I/O"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "LONG: Regrid on read in ESMF IO.",
  "discussion_thread": {
    "_id": "9ddb3073",
    "posts": [
      {
        "text": "- **summary**: LONG: future API in ESMF IO. --> LONG: Regrid on read in ESMF IO.",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 10:45:55",
        "slug": "a4d1",
        "subject": "#278 LONG: Regrid on read in ESMF IO."
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 10:45:55",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d319d2718463761fc08e3",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/9ddb3073/",
  "ticket_num": 278,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-11-10 19:21:44"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "The name and other basic information that comes in through the public class interfaces should be connected to the basic Attribute hierarchy associated with that object.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG: Connect class information with Attributes (8)",
  "discussion_thread": {
    "_id": "01477f73",
    "posts": [
      {
        "text": "- **priority**: 5 --> 7\n- **summary**: Connect classes with Attributes --> Connect class information with Attributes",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 10:44:54",
        "slug": "e856",
        "subject": "#279 LONG: Connect class information with Attributes (8)"
      },
      {
        "text": "- **summary**: Connect class information with Attributes --> LONG: Connect class information with Attributes (8)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 10:54:06",
        "slug": "103b",
        "subject": "#279 LONG: Connect class information with Attributes (8)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-02-17 16:53:39",
        "slug": "a59c",
        "subject": "#279 LONG: Connect class information with Attributes (8)"
      },
      {
        "text": "The following list of classes is not necessarily complete, but it does give an idea of which classes will need more work with respect to their names being routed through Attribute:  CANCHANGENAME: Components, Array, Attribute, Calendar, Clock, Alarm      HAVENONAME: mesh, distgrid, time, timeinterval, config, delayout, vm, localarray",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-09-07 21:52:10",
        "slug": "823c",
        "subject": "#279 LONG: Connect class information with Attributes (8)"
      },
      {
        "text": "We decided in the technical portion of the core meeting on 12/21/11 that the name and other basic information of an object does not necessary need to be represented as objects in the Attribute hierarchy attached to that object.  The task description should more appropriately read: \"The name and other basic information that comes in through the public class interfaces should be ACCESSIBLE THROUGH THE ATTRIBUTE CLASS API\".",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-12-22 00:57:29",
        "slug": "90d1",
        "subject": "#279 LONG: Connect class information with Attributes (8)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:53:39",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d319e2718463761fc08f0",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/01477f73/",
  "ticket_num": 279,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-11 22:41:06"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "From: Fei Liu, ESMF\r\n\r\nDuring the API standardization call reviewing the time manager operators, I thought it'd be extremely useful to have arithmetic operators overloaded for Array and Field. In the future, we might also want to overload some of the Fortran internal functions such as min/max/minval/maxval etc. We could even go one step further and provide simple statistical functions and checksum functions of Array and Field because they are extremely useful for complex/realistic modeling. This task will involve Gerhard having the Array level support implemented first and Fei will build it upon Array.\r\n\r\nFor the assignment operator, we may consider to overload that to be a value copy functioon...\r\n",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "Operators for Array and Field, possibly bundles too",
  "discussion_thread": {
    "_id": "cba56a6f",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2010-11-18 21:09:22",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d319f2718463761fc0911",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/cba56a6f/",
  "ticket_num": 280,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-18 21:09:22"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "We have several CIM packages that have a convention ISO.  We call these packages CIM X.  Cecelia and talked at supercomputing and now think we should not have CIM in the name but ISO. \r\n\r\ne.g.\r\n\r\nChange CIM Responsible Party to ISO Responsible Party.  Keep convention the same.  \r\n\r\nThis change will need to be propagated through all examples and documentation",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "murphysj",
  "assigned_to_id": "4d794255b9363c57d70002fc",
  "private": false,
  "summary": "CIM: ISO packages should have ISO in the name",
  "discussion_thread": {
    "_id": "5371faec",
    "posts": [
      {
        "text": "- **summary**: Change Attribute Package Names to include ISO in the name --> CIM: ISO packages should have ISO in the name",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:04:53",
        "slug": "e803",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "Change made in the documentation.\r\nNot change necessary in the code \\(from Earl\\)\r\nGerhard did not think there was any change necessary in his NUOPC documents\r\nCecelia asked that the attribute document be rewritten to include a section on standards.  This has yet to be done. ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-01-13 13:34:21",
        "slug": "64eb",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "- **assigned_to**: eschwab --> murphysj",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-01-13 13:34:21",
        "slug": "1e96",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-02-17 16:52:42",
        "slug": "ab64",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "ref manual modified and nuopc metadata document updated.  pending approval by TPTB.",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-03-14 19:14:49",
        "slug": "7289",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "- **priority**: 7 --> 5\n- **status**: open --> pending",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-03-14 19:14:49",
        "slug": "c890",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "- **priority**: 5 --> 7\n- **status**: pending --> open",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-03-17 16:17:16",
        "slug": "843c",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-03-17 16:17:48",
        "slug": "ec13",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "- **priority**: 7 --> 5\n- **status**: pending --> open",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-03-28 14:04:27",
        "slug": "dee0",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "sent updated document to Earl",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-05-16 20:49:53",
        "slug": "26df",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-05-16 20:49:53",
        "slug": "5662",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "I just checked the reference manual and all the att packs that should be listed as ISO are so this can be closed.  It was originally in Earl's queue. ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2013-04-17 16:33:11",
        "slug": "2623",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2013-04-17 16:33:11",
        "slug": "90e6",
        "subject": "#281 CIM: ISO packages should have ISO in the name"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2013-04-17 16:33:11",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d319f2718463761fc0919",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/5371faec/",
  "ticket_num": 281,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-19 17:20:10"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "METAFOR is contemplating a near-term change to the CIM output format.  Instead of a &lt;CIMRecordSet&gt; they will use something like &lt;CIMDocumentSet&gt; to encapsulate the entire CIM output.  \r\n\r\nThey also will REMOVE the individual &lt;CIMRecord&gt; tags around each document in the \"DocumentSet\"\r\n\r\nThey have not done this yet but may do so for CMIP5.  We need to be prepared to execute this as necessary",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "CIM: Change CIMRecordSet to CIMDocumentSet",
  "discussion_thread": {
    "_id": "e88db186",
    "posts": [
      {
        "text": "- **summary**: Change CIM output format to conform to the new one --> CIM: Change CIM output format to conform to the new one",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:03:47",
        "slug": "c0be",
        "subject": "#282 CIM: Change CIMRecordSet to CIMDocumentSet"
      },
      {
        "text": "- **summary**: CIM: Change CIM output format to conform to the new one --> CIM: Change CIMRecordSet to CIMDocumentSet",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 11:06:03",
        "slug": "18c7",
        "subject": "#282 CIM: Change CIMRecordSet to CIMDocumentSet"
      },
      {
        "text": "on 1/18 Hannah of ESG looked at the ESG metadata harvester and saw no dependencies on this code.  That would make this lower priority for the next ESMF release.",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-01-18 23:02:13",
        "slug": "d990",
        "subject": "#282 CIM: Change CIMRecordSet to CIMDocumentSet"
      },
      {
        "text": "Earl has done this.  we'll need to verify with the tests",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-02-17 16:51:42",
        "slug": "c0aa",
        "subject": "#282 CIM: Change CIMRecordSet to CIMDocumentSet"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-02-17 16:51:42",
        "slug": "ed3d",
        "subject": "#282 CIM: Change CIMRecordSet to CIMDocumentSet"
      },
      {
        "text": "Done in ESMF 520.  ESMF output validates against Metafor CIM 1.5 XSD repository, SVN rev 2675 and later.  Hannah Wilcox has been able to ingest ESMF output using the new &lt;CIMDocumentSet&gt; into ESG.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-03-31 17:04:29",
        "slug": "0615",
        "subject": "#282 CIM: Change CIMRecordSet to CIMDocumentSet"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-03-31 17:04:29",
        "slug": "06c0",
        "subject": "#282 CIM: Change CIMRecordSet to CIMDocumentSet"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-31 17:04:29",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31a12718463761fc0961",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e88db186/",
  "ticket_num": 282,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2010-11-19 17:23:28"
},{
  "status": "closed",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "It would be helpful to see the full test report after the 'check' target has been issued.  This is what is done for the 'all\\_tests' target.  Currently 'check' does the unit tests first, and then the system tests, so the output from the unit tests is buried behind all of the output for the system test build and run.",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "print full test report after gmake check",
  "discussion_thread": {
    "_id": "99f82ff8",
    "posts": [
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2011-02-17 16:51:30",
        "slug": "cf17",
        "subject": "#283 print full test report after gmake check"
      },
      {
        "text": "Sent email to Ryan asking to verify.",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2011-03-17 22:37:52",
        "slug": "8f8d",
        "subject": "#283 print full test report after gmake check"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2011-03-17 22:37:52",
        "slug": "8d28",
        "subject": "#283 print full test report after gmake check"
      },
      {
        "text": "Verified by Ryan.",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2011-03-18 15:54:22",
        "slug": "e82e",
        "subject": "#283 print full test report after gmake check"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2011-03-18 15:54:22",
        "slug": "4c68",
        "subject": "#283 print full test report after gmake check"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-18 15:54:22",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31a32718463761fc098c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/99f82ff8/",
  "ticket_num": 283,
  "custom_fields": {
    "_priority": "7",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2010-12-23 17:46:56"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Jim Rosinski from NOAA\r\n\r\nHello;\r\n\r\nOur work with the FIM model will require conversion of a Fortran \r\nnamelist into a ESMF resource file at each model run time. As part of \r\nthis procedure, ideally there would be some kind of \r\n\"ESMF\\_ConfigDumpFile\\(\\)\" call that would dump the contents of an existing \r\nConfig object to disk \\(i.e. the inverse of ESMF\\_ConfigLoadFile\\). Most \r\nlikely this would happen within a simple Fortran program after parsing \r\nthe namelist and converting relevant elements into portions of a Config \r\nobject. Looking through the ESMF documentation for either 3.1 \\(the ESMF \r\nrev. we're using\\) or the latest web-based doc. doesn't seem to show such \r\na function. Am I missing something, or is there another way to skin this \r\ncat, short of writing Fortran code to output an ESMF-compliant resource \r\nfile?\r\n\r\nMany thanks for your help.\r\n\r\nJim Rosinski\r\n",
  "labels": [
    "I/O"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "LONG: Write a Config file (4)",
  "discussion_thread": {
    "_id": "44cc8f8d",
    "posts": [
      {
        "text": "- **labels**: 588650 --> I/O\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 12:54:49",
        "slug": "309f",
        "subject": "#284 LONG: Write a Config file (4)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 12:55:06",
        "slug": "0477",
        "subject": "#284 LONG: Write a Config file (4)"
      },
      {
        "text": "- **summary**: How to write a resource file? --> LONG: Write a Config file (4)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 12:56:01",
        "slug": "e20a",
        "subject": "#284 LONG: Write a Config file (4)"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 12:56:15",
        "slug": "a790",
        "subject": "#284 LONG: Write a Config file (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 12:56:15",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31a42718463761fc09ac",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/44cc8f8d/",
  "ticket_num": 284,
  "custom_fields": {
    "_priority": "7",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-01-04 21:19:20"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "The equality and nonequality operators for deep objects will need to be generalized for the final implementation of the garbage collection.  This includes handling cases where one or both of the objects has been destroyed, or not yet created.",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "GARBAGE: generalize equality/non operators for deep objects",
  "discussion_thread": {
    "_id": "aa7c8cef",
    "posts": [
      {
        "text": "Also consider bug 1219800 LONG: Equality and Copying Objects Issue - a similar issue with user input on the matter.  Link:\r\n\r\nhttps://sourceforge.net/tracker/index.php?func=detail&aid=1219800&group\\_id=38089&atid=421185",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-11-17 17:31:34",
        "slug": "dc28",
        "subject": "#285 GARBAGE: generalize equality/non operators for deep objects"
      },
      {
        "text": "Also consider adding a lazy-deep-copy mechanism, as mentioned in the mail from Tom Henderson under ticket 1219800.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-11-18 18:21:22",
        "slug": "4e9d",
        "subject": "#285 GARBAGE: generalize equality/non operators for deep objects"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-10 23:38:46",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31a62718463761fc09c8",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/aa7c8cef/",
  "ticket_num": 285,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-01-10 23:38:46"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "There is a need to be able to query the CREATED status of any ESMF object.  This could be used for internal error checking in routines that need to be concerned about garbage collection, as well as for users at the public interface. ",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "GARBAGE: ability to query the CREATED status of an object",
  "discussion_thread": {
    "_id": "af240de5",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-10 23:41:34",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31a62718463761fc09da",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/af240de5/",
  "ticket_num": 286,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-01-10 23:41:34"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Tim Campbell \r\n\r\nTim has asked for the regrid to provide nearest neighbor extrapolation of points which lie outside the unmasked source grid. He has another solution built into his code, but he has said before it would be nice if ESMF provided this.\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Extrapolation of dst points which lie outside src (5)",
  "discussion_thread": {
    "_id": "7666c91d",
    "posts": [
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 13:00:53",
        "slug": "b796",
        "subject": "#287 LONG: Extrapolation of dst points which lie outside src (5)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 16:50:51",
        "slug": "9780",
        "subject": "#287 LONG: Extrapolation of dst points which lie outside src (5)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:50:51",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31a72718463761fc09e1",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7666c91d/",
  "ticket_num": 287,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-01-12 21:15:56"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\), but possibly useful for David Randall or others with iscosahedral grids\r\n\r\nThis would allow the Mesh class to represent many sided polygons in the same manner as the weight generation application does. For each polygon with more the 4-sides the internal mesh represents it as a set of triangles. A map allows regridding weights to be translated, so they work for the many sided polygons. One issue with this is that a non-conservative interpolation won't use all the points in the multisided polygon \\(although this should be researched\\). Haloing could also be done, but will take a bit of research. \r\n\r\n",
  "labels": [],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: RGRD: Represent n-gons as tri/quad in Mesh (3)",
  "discussion_thread": {
    "_id": "073213d0",
    "posts": [
      {
        "text": "- **summary**: LONG: RGRD: \"Surface\" support of n-gons in Mesh (3) --> LONG: RGRD: Represent n-gons as tri/quad in Mesh (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 10:42:04",
        "slug": "c1d8",
        "subject": "#288 LONG: RGRD: Represent n-gons as tri/quad in Mesh (3)"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 13:42:03",
        "slug": "b6ce",
        "subject": "#288 LONG: RGRD: Represent n-gons as tri/quad in Mesh (3)"
      },
      {
        "text": "- **priority**: 7 --> 5\n- **assigned_to**: nobody --> oehmke",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-02-17 16:50:22",
        "slug": "ed94",
        "subject": "#288 LONG: RGRD: Represent n-gons as tri/quad in Mesh (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:50:22",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31a72718463761fc09f3",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/073213d0/",
  "ticket_num": 288,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-01-12 22:52:22"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\) used for Xgrid\r\n\r\nWrite a subroutine which takes two meshes and produces a third which is the union of the first two. ",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Create union of two meshes (3)",
  "discussion_thread": {
    "_id": "824010cc",
    "posts": [
      {
        "text": "- **summary**: Long: Mesh Merge (3) --> LONG: Mesh Merge (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 10:27:22",
        "slug": "5077",
        "subject": "#289 LONG: Create union of two meshes (3)"
      },
      {
        "text": "- **summary**: LONG: Mesh Merge (3) --> LONG: Create union of two meshes (3)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 10:38:17",
        "slug": "0643",
        "subject": "#289 LONG: Create union of two meshes (3)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **priority**: 5 --> 9",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 10:39:45",
        "slug": "1abc",
        "subject": "#289 LONG: Create union of two meshes (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 10:39:45",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31a82718463761fc0a0a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/824010cc/",
  "ticket_num": 289,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-01-12 23:56:50"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "Who: required by operational centers for backwards compatibility\r\n\r\nAdd a hidden argument after required arguments in order to enforce the use of keywords for optional arguments.  This is a way of ensuring that optional argument order can continue to evolve, while avoiding subtle ordering bugs.",
  "labels": [
    "Language Interface"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "Add hidden  arg to enforce keywords for back compat",
  "discussion_thread": {
    "_id": "47dd5515",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-01-13 12:29:50",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31a92718463761fc0a21",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/47dd5515/",
  "ticket_num": 290,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-01-13 12:29:50"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: NUOPC users, NEMS, NOGAPS, COAMPS\r\n\r\nThis involves:\r\n\\- defining, prototyping annd documenting NUOPC rules\r\n\\- refinement of component, grid, and state classes\r\n\\- possibly implementation of a standard component distribution and build interface\r\n\\- assistance with implementation of NUOPC rules in user codes\r\n",
  "labels": [
    "AppDriver"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: prototype atm-ocn coupling (10)",
  "discussion_thread": {
    "_id": "8ff0c985",
    "posts": [
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 13:12:19",
        "slug": "4221",
        "subject": "#291 LONG: prototype atm-ocn coupling (10)"
      },
      {
        "text": "- **summary**: LONG: prototype atm-ocn coupling for NUOPC (10) --> LONG: prototype atm-ocn coupling (10)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 16:28:00",
        "slug": "657d",
        "subject": "#291 LONG: prototype atm-ocn coupling (10)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 16:49:49",
        "slug": "26c3",
        "subject": "#291 LONG: prototype atm-ocn coupling (10)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:49:49",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31aa2718463761fc0a29",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/8ff0c985/",
  "ticket_num": 291,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-01-13 13:11:37"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "Who: For NUOPC and others for use in coupler construction, via Gerhard\r\n\r\n\\* spatial and temporal integration and averaging\r\n\\* linear combinations of Fields \\(for merging\\)\r\n\\* distributed scalar product and reduction operation ",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "LONG: Field data operations (6)",
  "discussion_thread": {
    "_id": "b25d6b81",
    "posts": [
      {
        "text": "- **summary**: Field data operations --> LONG: Field data operations (6)",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 13:15:53",
        "slug": "ed02",
        "subject": "#292 LONG: Field data operations (6)"
      },
      {
        "text": "- **priority**: 5 --> 7",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-01-13 13:16:00",
        "slug": "7274",
        "subject": "#292 LONG: Field data operations (6)"
      },
      {
        "text": "- **priority**: 7 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 16:49:26",
        "slug": "3874",
        "subject": "#292 LONG: Field data operations (6)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:49:26",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ab2718463761fc0a3f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b25d6b81/",
  "ticket_num": 292,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-01-13 13:14:43"
},{
  "status": "pending",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "WHO: Sylvia Murphy\r\nThis affects anyone who wants to ingest the CIM into ESG \\(e.g. Purdue\\).\r\n\r\nThe CIM output format is continually evolving along with ESG's harvesting software.  The final output from the questionnaire should be CIM 1.5.  Update the ESMF write to reflect these changes.  \r\n\r\nThe first thing to do is test the current output from ESMF  against the current ESG harvester.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "CIM: Update CIM output to CIM 1.5",
  "discussion_thread": {
    "_id": "083cb33e",
    "posts": [
      {
        "text": "earl did this.   we may need to do more testing because what the questionnaire is putting out is not cim 1.5 compliant.  What can be harvested by ESG is not the same either.  \r\n\r\n",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-02-17 16:48:15",
        "slug": "8b67",
        "subject": "#293 CIM: Update CIM output to CIM 1.5"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-02-17 16:48:15",
        "slug": "b07a",
        "subject": "#293 CIM: Update CIM output to CIM 1.5"
      },
      {
        "text": "Note:  ESMF 5.2.0 CIM XML output validates against CIM 1.5 \\(in development\\), SVN rev2675.  However, ESG cannot fully ingest this yet -- see email thread under this ticket number.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-03-31 17:11:18",
        "slug": "dfd0",
        "subject": "#293 CIM: Update CIM output to CIM 1.5"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:48:15",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ac2718463761fc0a56",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/083cb33e/",
  "ticket_num": 293,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-01-14 21:21:16"
},{
  "status": "pending",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "WHO:  CESM\r\n\r\nEnhance AttributeUpdate\\(\\) as appropriate to handle multiple instances of nested attribute packages, when implemented.  See ticket \\#3076837 \"LONG: Enable multiple att packages per component\".\r\n\r\n",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "AttributeUpdate() handle mult. instances of nested attpacks",
  "discussion_thread": {
    "_id": "d6c1e33b",
    "posts": [
      {
        "text": "Earl is adding new testing for the capability, can pend once these tests are in the repository and passing on all platforms.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-02-17 16:47:17",
        "slug": "fbff",
        "subject": "#294 AttributeUpdate() handle mult. instances of nested attpacks"
      },
      {
        "text": "- **assigned_to**: rokuingh --> eschwab",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-02-17 16:47:17",
        "slug": "8461",
        "subject": "#294 AttributeUpdate() handle mult. instances of nested attpacks"
      },
      {
        "text": "Created a new unit test program for this purpose, in ESMF 5.2.0, which works with 2 instances of a Responsible Party package nested in a CIM/Main package, and with interleaving and overlapping Pets:\r\n\r\nsrc/Superstructure/AttributeAPI/tests/ESMF\\_AttributeUpdate2UTest.F90\r\n\r\nCould be enhanced to include 2 or more instances of a Citation package nested inside the same CIM/Main package.\r\n\r\n",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-19 02:26:11",
        "slug": "33ef",
        "subject": "#294 AttributeUpdate() handle mult. instances of nested attpacks"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-19 02:26:11",
        "slug": "f3cc",
        "subject": "#294 AttributeUpdate() handle mult. instances of nested attpacks"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-19 02:26:11",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ad2718463761fc0a6d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d6c1e33b/",
  "ticket_num": 294,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-01-19 23:33:03"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO:  Dan Kokron from Global Modeling and Assimilation Office, NASA Goddard Space Flight Center\r\n\r\nI am attempting to create an ESMF grid from a SCRIP format file.  The\r\nSCRIP file is 73GB in size.  The executable fails with \"insufficient\r\nvirtual memory\" on the following line.  It does not seem to matter if I\r\nadd more nodes, it always fails in the same way.  Does this call read\r\nthe file serially?  Any suggestions?\r\n\r\nsrcgrid = ESMF\\_GridCreate\\('/gpfsm/dnb52/projects/p10/dkokron/play/SCRIP.svn/trunk/SCRIP/grids/PE43200x21600-DE\\_grid.nc4', &\r\n\\(/NX,NY/\\), addCornerStagger=.true., rc=rc\\)\r\n\\-- \r\nDan Kokron\r\nGlobal Modeling and Assimilation Office\r\nNASA Goddard Space Flight Center\r\nGreenbelt, MD 20771\r\nDaniel.S.Kokron@nasa.gov\r\nPhone: \\(301\\) 614-5192\r\nFax:   \\(301\\) 614-5304\r\n\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "LONG: Parallelize ESMF_GridCreate() from a file (4)",
  "discussion_thread": {
    "_id": "a54b3e74",
    "posts": [
      {
        "text": "This is because the coordinates in the SCRIP file are read into PET0 and scattered to all other PETs when creating the Grid.  The code should be parallelized, possibly using PNETCDF or PIO for better performance. ",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2011-01-27 06:55:59",
        "slug": "c2fc",
        "subject": "#295 LONG: Parallelize ESMF_GridCreate() from a file (4)"
      },
      {
        "text": "- **summary**:  insufficient virtual memory --> Parallelize ESMF_GridCreate() from a SCRIP grid",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2011-01-27 06:55:59",
        "slug": "3766",
        "subject": "#295 LONG: Parallelize ESMF_GridCreate() from a file (4)"
      },
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 356870 --> ",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2011-04-07 19:09:56",
        "slug": "979a",
        "subject": "#295 LONG: Parallelize ESMF_GridCreate() from a file (4)"
      },
      {
        "text": "- **summary**: Parallelize ESMF_GridCreate() from a SCRIP grid --> Parallelize ESMF_GridCreate() from a file",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-10-04 21:00:20",
        "slug": "68f9",
        "subject": "#295 LONG: Parallelize ESMF_GridCreate() from a file (4)"
      },
      {
        "text": "- **summary**: Parallelize ESMF_GridCreate() from a file --> LONG: Parallelize ESMF_GridCreate() from a file (4)",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2011-10-06 00:03:17",
        "slug": "dfac",
        "subject": "#295 LONG: Parallelize ESMF_GridCreate() from a file (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-06 00:03:17",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ae2718463761fc0a8a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a54b3e74/",
  "ticket_num": 295,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-01-24 21:53:15"
},{
  "status": "open",
  "reported_by_id": "5048c2deb9363c1e4f0e247b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "peggyli",
  "description": "Dan Kokron of Goddard is going to regrid a 1/120 degree lat/lon grid \\(43200x21600, 73GB\\) into a 2880x2880x6 \\(1/33 degree, 4.5GB\\) cubed sphere grid.  He ran out of memory in creating the corresponding Grid and Mesh.  The ESMF\\_MeshCreateFromScrip\\(\\) has two steps, first it converts the SCRIP file into a ESMF unstructured Grid format, then it creates the Mesh from the ESMF unstructured grid.  The Scrip2ESMF converter is currently running sequentially \\(only on PET0\\).  In order to parallelize ESMF\\_MeshCreateFromScrip\\(\\), this part has to be parallelized first.  Secondly, the code reads in the entire node coordinate definition on all the PETs when creating the Mesh from the ESMF file.  It has the potential to run out of memory when the grid is big.  The parallelization of this part could be pretty complicated.   ",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "LONG: Parallelize ESMF_MeshCreate() from file (8)",
  "discussion_thread": {
    "_id": "d40ff38f",
    "posts": [
      {
        "text": "- **labels**: 1168002 --> Mesh",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2011-04-07 19:08:37",
        "slug": "dcf5",
        "subject": "#296 LONG: Parallelize ESMF_MeshCreate() from file (8)"
      },
      {
        "text": "- **summary**: Parallelize ESMF_MeshCreateFromScrip() --> Parallelize ESMF_MeshCreate() from file",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-10-04 20:59:16",
        "slug": "a16a",
        "subject": "#296 LONG: Parallelize ESMF_MeshCreate() from file (8)"
      },
      {
        "text": "- **summary**: Parallelize ESMF_MeshCreate() from file --> LONG: Parallelize ESMF_MeshCreate() from file (8)",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2011-10-06 00:04:33",
        "slug": "9b8d",
        "subject": "#296 LONG: Parallelize ESMF_MeshCreate() from file (8)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-06 00:04:33",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31af2718463761fc0aac",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d40ff38f/",
  "ticket_num": 296,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-02-02 18:39:57"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tony Craig from CCSM \r\n\r\ndoes esmf have a capability where multiple methods of interpolation\r\ncan be specified.  for instance, bilinear + nearest neighbor.  if there\r\nare no overlapping points for a bilinear interpolation, then it goes into\r\na nearest neighbor mode.  that extra nearest neighbor should not be\r\ndone by default though.  this might be helpful when there is mask data\r\nor for two grids that don't completely overlap \\(ie. regional grids\\).  i think\r\nthere may be cases where a user would like to have those non-overlapping \r\nor masked areas filled in with something reasonable by the interpolation.\r\n\r\nthanks,\r\n\r\ntony........",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Specification of multiple methods of interpolation",
  "discussion_thread": {
    "_id": "b508be8d",
    "posts": [
      {
        "text": "- **summary**: Specifiction of multiple methods of interpolation --> Specification of multiple methods of interpolation",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2011-03-03 16:38:52",
        "slug": "7821",
        "subject": "#297 Specification of multiple methods of interpolation"
      },
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-03-03 16:44:42",
        "slug": "4136",
        "subject": "#297 Specification of multiple methods of interpolation"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-03 16:44:42",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b02718463761fc0ac4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b508be8d/",
  "ticket_num": 297,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-02-09 00:49:00"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Added as a consequence of ticket 282635 from Tim Campbell, but he never formally asked for the capability and it sounds like he moved onto to other work. \r\n\r\nAdd the ability to add halo points to a Field which aren't on ends, but distributed throughout the data. Tim didn't need the capability to halo into these points, but that would be useful also. This type of Field should be able to be created from a pointer to user memory as other Fields are.  ",
  "labels": [
    "Field"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: interleaved halo points to Field on Arb Grid (4)",
  "discussion_thread": {
    "_id": "eb91bc39",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> theurich\n- **summary**: Ability to add interleaved halo points to Field on Arb Grid --> LONG: interleaved halo points to Field on Arb Grid (4)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-02-17 16:45:12",
        "slug": "0c22",
        "subject": "#298 LONG: interleaved halo points to Field on Arb Grid (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-02-17 16:45:12",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b12718463761fc0ad6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/eb91bc39/",
  "ticket_num": 298,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-02-10 19:05:58"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "A script should be written to automate the API changes between two points in the ESMF release history.  This is specifically aimed at the API changes that have gone into the library before ESMF 5.2, to help users adopt the widespread changes for consistency that were introduced at that time.",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "API: recipe to outline API changes from 510 - 520r",
  "discussion_thread": {
    "_id": "cbf4ab83",
    "posts": [
      {
        "text": "The description says this should be a script, we decided that this is overkill and we will only provide a 'recipe' of the API changes between 510 - 520 and another between 520 and 520r.  ",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-03-17 15:41:10",
        "slug": "439b",
        "subject": "#299 API: recipe to outline API changes from 510 - 520r"
      },
      {
        "text": "- **assigned_to**: nobody --> rokuingh",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-03-17 15:41:10",
        "slug": "c0a5",
        "subject": "#299 API: recipe to outline API changes from 510 - 520r"
      },
      {
        "text": "- **summary**: API: script to automate API changes --> API: recipe to outline API changes from 510 - 520r",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-03-17 15:41:11",
        "slug": "463c",
        "subject": "#299 API: recipe to outline API changes from 510 - 520r"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-17 15:41:11",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b12718463761fc0ae2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/cbf4ab83/",
  "ticket_num": 299,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2011-02-23 15:12:38"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Metafor is going to change where it outputs inputs in the CIM XML for the CMIP5 questionnaire.\r\n\r\nWe can change too or keep as is.  The CIM schema supposedly allows it to exist in both locations.  \r\n\r\n1\\) Verify our flexibility\r\n2\\) Determine if we want to change\r\n3\\) Make changes if desired",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Modify CIM XML to conform to Metafor Inputs Changes",
  "discussion_thread": {
    "_id": "3a231bc2",
    "posts": [
      {
        "text": "This was done for the ESMF 5.2.0r release; it allowed the inputs to be ingested and displayed in ESG/Trackback.  Inputs now appear under the &lt;simulationRun&gt; section in the CIM XML output file, whereas before they were written under the top-level &lt;modelComponent&gt; section.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-18 22:08:12",
        "slug": "30d4",
        "subject": "#300 Modify CIM XML to conform to Metafor Inputs Changes"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-18 22:08:12",
        "slug": "3509",
        "subject": "#300 Modify CIM XML to conform to Metafor Inputs Changes"
      },
      {
        "text": "I have examine simulation \"Simulation Metadata: CESM1.0 SMS.f09\\_g16.X.bluefire\" in the ESG display.  I see that inputs are being correctly rendered.  This would indicate that the inputs section has been correctly moved to the upper level component where the ESG harvester currently looks for them.  \r\n\r\nThe other CESM instance currently in the display does not have any inputs assigned so I could not verify there.  Nor did I examine the XML itself.\r\n\r\nI think it is safe to close this ticket. ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-10-19 22:09:16",
        "slug": "0365",
        "subject": "#300 Modify CIM XML to conform to Metafor Inputs Changes"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-10-19 22:09:16",
        "slug": "3566",
        "subject": "#300 Modify CIM XML to conform to Metafor Inputs Changes"
      },
      {
        "text": "Clarification:  The inputs were moved from the upper level &lt;modelComponent&gt; section to the &lt;simulationRun&gt; section, which appears in the file following the upper level &lt;modelComponent&gt; section \\(and all its nested &lt;modelComponent&gt;s\\).  ESG currently harvests the inputs from the &lt;simulationRun&gt; section. ",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-19 22:24:56",
        "slug": "5faf",
        "subject": "#300 Modify CIM XML to conform to Metafor Inputs Changes"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-19 22:24:56",
        "slug": "3353",
        "subject": "#300 Modify CIM XML to conform to Metafor Inputs Changes"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-19 22:24:56",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b22718463761fc0af9",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3a231bc2/",
  "ticket_num": 300,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-03-22 17:11:18"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Mariana Vertenstein, Brian Kauffman and others from CSEM\r\n\r\nThey would like the matrix sorted in the output file, so that it's in the same order no matter how many processors the weight generation is run on. This is so they can do ncdiffs between weight files. Note, they also said that they only want this if it doesn't cause a large performance degradataion, so we should look into it first and see how long we think the sorting will take. It would probably also be a good idea to have a flag to turn it off, if the users doesn't want to spend the time. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "Sort weight matrix output by ESMF_RegridWeightGen",
  "discussion_thread": {
    "_id": "8ad70601",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-03-23 15:56:38",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b32718463761fc0b1f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/8ad70601/",
  "ticket_num": 301,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-03-23 15:56:38"
},{
  "status": "closed",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: Mariana V. Jim Edwards from CESM\r\n\r\nClean up the offline regrid tester so that it can be extensible to new sets of grids.  It would be good to have the grids read in from a configuration file, so that the test script would not have to be modified to add new grids.",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "clean up offline regrid testing for use with additional grid",
  "discussion_thread": {
    "_id": "38ca0a06",
    "posts": [
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-05-03 17:43:20",
        "slug": "b50f",
        "subject": "#302 clean up offline regrid testing for use with additional grid"
      },
      {
        "text": "Closed on 6/21/2012 due to comments from Mariana in a previous CESM meeting which implies that they are currently using this utility with success.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2012-06-21 17:22:26",
        "slug": "7074",
        "subject": "#302 clean up offline regrid testing for use with additional grid"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2012-06-21 17:22:26",
        "slug": "47b8",
        "subject": "#302 clean up offline regrid testing for use with additional grid"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-06-21 17:22:26",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b32718463761fc0b27",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/38ca0a06/",
  "ticket_num": 302,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-03-23 18:19:12"
},{
  "status": "pending",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "What attributes, within ESMF-supplied packages, are required to be set in order to produce a valid cim output file should be documented; it isn't currently.  This depends on what is required in a cim output file, which I haven't seen documented anywhere yet.  However, it is encoded within the cim xsd file repository, which is complex -- there are 2 orthogonal hierarchies encoded, one for the output, and one for the type hierarchy \\(like a C++ class inheritance tree\\), and these appear intermingled in the files.  Also there are similarly-named items \\(some are only different in capitalization, such as between some element names and type names\\), so it can be a bit challenging to figure out the rules for specific elements/attributes.\r\n\r\nSo far, I've been using a combination of a trial & error process \\(using the few Metafor sample files we've received, along with the Xerces xsd validation tools\\), together with learning to read/analyze the cim xsd files, to code AttributeWrite\\(\\) and create the examples and tests in ESMF.  Now that I've gotten better at it, I believe I can go thru the xsd's and discern what all is required to appear in the output, and then correlate that back to what is required to be set in ESMF's attpacks.  I know there are some xml/xsd tools available out there to help with this process; I need to research what would be good to use.\r\n\r\nThe caveat in all this is that the cim is in development; I have seen the output structure \\(requiring changes to AttributeWrite\\(\\)\\) and rules change very frequently.  This is why I put a statement in our ref doc about exactly what cim svn revision our release is tied to \\(e.g CIM svn r2675 for ESMF 5.2.0\\).  Which leads to the idea of decoupling ESMF from CIM as much as possible \\(reducing/externalizing the dependency\\), as noted in FR tickets \\#3103887 \"LONG: CIM: Auto validate CIM XML output with CIM xsd\", \\#3077615 \"LONG: CIM: Define attribute packages with an xsd\", and \\#2990606 \"LONG: Create XSD files for standard AttPacks\".",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Document required Attributes in ESMF CIM AttPacks",
  "discussion_thread": {
    "_id": "11771aca",
    "posts": [
      {
        "text": "WHO:  Cecelia DeLuca",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-03-25 22:55:23",
        "slug": "25a2",
        "subject": "#303 Document required Attributes in ESMF CIM AttPacks"
      },
      {
        "text": "This was done for the ESMF 5.2.0r release.  It is in the form of footnotes \\(using asterisks\\) to the Attribute package description tables in the reference manual:\r\n\r\nhttp://www.earthsystemmodeling.org/esmf\\_releases/public/ESMF\\_5\\_2\\_0r/ESMF\\_refdoc/node6.html\\#SECTION06022000000000000000\r\n",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-18 21:02:26",
        "slug": "eae2",
        "subject": "#303 Document required Attributes in ESMF CIM AttPacks"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-18 21:02:26",
        "slug": "82aa",
        "subject": "#303 Document required Attributes in ESMF CIM AttPacks"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-18 21:02:26",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b42718463761fc0b3e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/11771aca/",
  "ticket_num": 303,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-03-25 21:52:18"
},{
  "status": "open",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "WHO:  Gerhard Theurich\r\n\r\nBased on discussions with Tom Henderson concerning models with variable time steps, Gerhard said it would be nice to have an option to save a newly calculated time step within the clock with every ClockAdvance\\(\\).  This would allow subsequent queries of the clock, which may be passed to other components or parts of the system.  Currently, a timeStep arg passed to ESMF\\_ClockAdvance\\(\\) is only used during that call, instead of the clock's internal timeStep, to calculate the clock's next current time; the clock's internal timeStep is not replaced.  May also consider adding the same optional arg to ESMF\\_GetNextTime\\(\\) and ESMF\\_GetAlarmList\\(\\), which also take an optional timeStep arg.  Since this is about adding an optional arg, it could be done post-5.2r; it would be backwards compatible.",
  "labels": [
    "Time Manager"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Add optional arg to ESMF_ClockAdvance() to save timeStep",
  "discussion_thread": {
    "_id": "26b5bb2c",
    "posts": [
      {
        "text": "Actually I think my discussion about this was with Tim Campbell \\(not Tom Henderson\\).\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-08-08 21:10:22",
        "slug": "fda6",
        "subject": "#304 Add optional arg to ESMF_ClockAdvance() to save timeStep"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-04-14 17:57:31",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b52718463761fc0b55",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/26b5bb2c/",
  "ticket_num": 304,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-04-14 17:57:31"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Dan Kokron from the Global Modeling and Assimilation Office, NASA Goddard Space Flight Center\r\n\r\nBob,\r\n\r\nI'm working with one of the authors of the attached paper.  It's a\r\nscheme that specifically targets LatLon to Cube and reverse.\r\n\r\nWhat is the procedure for adding regridding schemes to ESMF?\r\n\r\n\\-- \r\nDan Kokron\r\nGlobal Modeling and Assimilation Office\r\nNASA Goddard Space Flight Center\r\nGreenbelt, MD 20771\r\nDaniel.S.Kokron@nasa.gov\r\nPhone: \\(301\\) 614-5192\r\nFax:   \\(301\\) 614-5304",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "another conservative regridding scheme",
  "discussion_thread": {
    "_id": "cbde12fa",
    "posts": [
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-01-12 17:07:26",
        "slug": "52af",
        "subject": "#305 another conservative regridding scheme"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-01-12 17:07:26",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b62718463761fc0b62",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/cbde12fa/",
  "ticket_num": 305,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-04-19 19:14:39"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "FieldCreate methods from arrayspec or typekind can take ComputationalWidth arguments and pass them to the internal Array create methods. This way the Field object has a consistent view of memory on all DEs. The modfiied interfaces will be backward compatible.",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "Allow Field to pad internal DEs through ComputationalWidth",
  "discussion_thread": {
    "_id": "2bf2f0b7",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-04-20 19:17:47",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b62718463761fc0b6f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/2bf2f0b7/",
  "ticket_num": 306,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2011-04-20 19:17:47"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "Who: ryan\r\n\r\nThe ESMF\\_RegridWeightGen application should be able to accept other values than 0 for the masks.  Currently a grid file must use 0 as the mask value, which could be inconvenient for those grids which use alternate values.  This value should apply to both of the source and destination input grids, as well as the output weights file.\r\n\r\nAdditionally, it would be nice if there was an input argument to turn masking on and off, regardless of what masking fields are included in the source and destination grids.  The way I see this working is with a -m flag for toggling masking on and off \\(on by default\\) followed by a value, or list of values, that would be considered part of the mask \\(default is 0\\).",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "ESMF_RegridWeightGen application masking",
  "discussion_thread": {
    "_id": "8d5de1f0",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-04-22 22:39:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b62718463761fc0b77",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/8d5de1f0/",
  "ticket_num": 307,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-04-22 22:39:41"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "Who: ryan\r\n\r\nSimilar to the overloaded GridCreate with private name ESMF\\_GridCreateFrmScripReg, it would be useful to have a ESMF\\_GridCreateFrmWeightsReg.  This routine would create a Grid from the grid description in an ESMF weights file that is output from the ESMF\\_RegridWeightGen application.  This will allow creation of Grids from a weights file that can then be compared to the Grids created from the grid file that was used to create the weights file. ",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "samsoncheung",
  "assigned_to_id": "519d24fb2718463761fab97a",
  "private": false,
  "summary": "add API: ESMF_GridCreateFrmWeightsScripReg",
  "discussion_thread": {
    "_id": "29ce0b6b",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-04-22 22:46:37",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b72718463761fc0b7f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/29ce0b6b/",
  "ticket_num": 308,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-04-22 22:46:37"
},{
  "status": "closed",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "In the latest files from metafor \\(see attached\\) there is a section describing the metadata source.  I am going to add this to the harvester and esg display for cmip5.  \r\n\r\nWe should add this code automatically in the output from ESMF.  We could say something like:\r\n\r\n\\\"ESMF Attributes embedded in the model code\\\" or some such\r\n\r\n\r\nHere is the code from teh file:\r\n\r\n&lt;documentAuthor&gt;\r\n&lt;gmd:individualName&gt;\r\n&lt;gco:CharacterString&gt;Metafor Questionnaire&lt;/gco:CharacterString&gt;\r\n&lt;/gmd:individualName&gt;\r\n&lt;gmd:role&gt;\r\n&lt;gmd:CI\\_RoleCode codeList=\\\"\\\" codeListValue=\\\"documentAuthor\\\"/&gt;\r\n&lt;/gmd:role&gt;\r\n&lt;/documentAuthor&gt;\r\n\r\nstarts at 3170.\r\n\r\nThis block seems to exist for every component accept the top level component. ",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Add metadata source to CIM XML output",
  "discussion_thread": {
    "_id": "57edb87d",
    "posts": [
      {
        "text": "SF would not let me attach the file b/c it was too large.  contact me and I will email it when you are ready to start working on this.\r\n\r\n",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-04-26 14:54:33",
        "slug": "127d",
        "subject": "#309 Add metadata source to CIM XML output"
      },
      {
        "text": "The internal ESMF\\_VERSION\\_STRING is now used, starting in ESMF 5.2.0r, to automatically stamp the metadata source in CIM xml output files, for example:\r\n\r\n&lt;documentAuthor&gt;\r\n&lt;gmd:individualName&gt;\r\n&lt;gco:CharacterString&gt;ESMF Version 5.2.0r&lt;/gco:CharacterString&gt;\r\n&lt;/gmd:individualName&gt;\r\n&lt;gmd:role&gt;\r\n&lt;gmd:CI\\_RoleCode codeList=\"\" codeListValue=\"documentAuthor\"&gt;&lt;/gmd:CI\\_RoleCode&gt;\r\n&lt;/gmd:role&gt;\r\n&lt;/documentAuthor&gt;\r\n\r\nAlso, ESMF TimeMgr methods are used to get the current time to timestamp the CIM xml output file, e.g.\r\n\r\n&lt;documentCreationDate&gt;2011-09-18T10:16:58&lt;/documentCreationDate&gt;\r\n",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-18 18:26:11",
        "slug": "1846",
        "subject": "#309 Add metadata source to CIM XML output"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-18 18:26:11",
        "slug": "76e6",
        "subject": "#309 Add metadata source to CIM XML output"
      },
      {
        "text": "I have verified this feature is showing up in the XML output coming out of CESM and is in the ESG display.  \r\n\r\nYou may close the ticket. ",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-10-19 22:02:44",
        "slug": "f5c1",
        "subject": "#309 Add metadata source to CIM XML output"
      },
      {
        "text": "- **status**: pending --> open",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2011-10-19 22:02:44",
        "slug": "4369",
        "subject": "#309 Add metadata source to CIM XML output"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-19 22:10:12",
        "slug": "bbab",
        "subject": "#309 Add metadata source to CIM XML output"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-19 22:10:12",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b72718463761fc0b87",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/57edb87d/",
  "ticket_num": 309,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-04-26 14:53:58"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Jim Abeles, IBM consultant at NCEP\r\n\r\nThis comes from a conversation under \\#3234955:\r\n\r\n&lt;snip&gt;\r\nOne thing that might be useful for a future release is to allow the PET files to be opened in their own subdirectory. When we run MPI jobs with many thousands of tasks and all the files are in the same directory, there is a metatdata issue. Any thought on this?\r\nJim Abeles\r\n\r\n\\*gjt\\*\r\n",
  "labels": [
    "LogErr"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Log optimization for large PET counts",
  "discussion_thread": {
    "_id": "24567e69",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-05-02 22:49:56",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b82718463761fc0bad",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/24567e69/",
  "ticket_num": 310,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-05-02 22:49:56"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "Figure out the best way to support the Fortran string concatenation operator // in cppF90 files.  Currently it gets gobbled up in the first preprocessing pass because cpp thinks it is a C/C++ inline comment.  Some ways of solving the problem:\r\n\r\n1.\\) define a macro like:\r\n\r\n\\#define CONCAT /\r\n\r\nthen use:\r\n\r\nstring = \"something \" CONCAT/ \"something else\"\r\n\r\n2.\\) Add a new special character, like $, to the substitution list that tr performs after the first preprocessing pass\r\n\r\n3.\\) Try the cpp -traditional option\r\n\r\n4.\\) Punt and write a small ESMF\\_Concat function for Util.",
  "labels": [
    "Util"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "String concatenation operator in cppF90 files",
  "discussion_thread": {
    "_id": "94fa3048",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-05-04 05:20:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b92718463761fc0bb5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/94fa3048/",
  "ticket_num": 311,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2011-05-04 05:20:41"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Mark Taylor of Sandia/CCSM\r\n\r\nFrom Mark:\r\nFor our unstructured grids, I know how to generate the non-convex cell template files, so if you supported them we could then generate all the needed mapping files. This would be a pretty good solution.  \\(but the best would be a new algorithm for corner centered data - if such a thing exists\\)\r\n\r\nComments from Oehmke:\r\n\\- To support this in the offline we would just need to fix the meshcreate from file to chop up elements intelligently into convex pieces. \r\n\\- To support this in the online, in the conservative it would just take chopping concave quads into triangles, for other methods would have to investigate how they behave for non-convex. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Support for non-convex elements in regridding (3)",
  "discussion_thread": {
    "_id": "510e2b61",
    "posts": [
      {
        "text": "This is done for polygons with &gt;4 sides through ESMF\\_RegridWeightGen. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-08-30 22:57:18",
        "slug": "462d",
        "subject": "#312 LONG: Support for non-convex elements in regridding (3)"
      },
      {
        "text": "- **summary**: Support for non-convex elements in regridding --> LONG: Support for non-convex elements in regridding (3)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-08-30 22:57:18",
        "slug": "38c1",
        "subject": "#312 LONG: Support for non-convex elements in regridding (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-08-30 22:57:18",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31b92718463761fc0bbd",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/510e2b61/",
  "ticket_num": 312,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-05-05 21:54:09"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Mark Taylor of Sandia/CCSM\r\n\r\nWhat about a version that will conservatively map vertex centered data instead of cell-centered?  So the data on the cubed-sphere grid would be specified only at the corners of the cells, and all the cells would be squares.  That would be ideal.\r\n\r\nSecond best would be the ability to handle non-convex cells. \\(See: 3298081\\)\r\n\r\nFrom Oehmke: The big problem here is it's not clear what the control volume would be. Unless you just basically compute the dual mesh and do it on that, although there might be problems with border elements. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Support for corner centered conservative (6)",
  "discussion_thread": {
    "_id": "60cd4e18",
    "posts": [
      {
        "text": "- **summary**: Support for corner centered conservative --> LONG: Support for corner centered conservative (6)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-09-22 17:01:38",
        "slug": "df5e",
        "subject": "#313 LONG: Support for corner centered conservative (6)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-09-22 17:01:38",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ba2718463761fc0bcf",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/60cd4e18/",
  "ticket_num": 313,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-05-05 22:00:18"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "WHO:  no specific user, but may be useful for groups using unstructured grids\r\n\r\nThis shows up as a gap in our functionality at the moment.  If masking unstructured grids does not make sense, that's fine, but we should probably make it a N/A rather than a not implemented.  If it would be useful it should go in. - Cecelia",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Support for maskinng unstructured grids",
  "discussion_thread": {
    "_id": "6ad27026",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-05-14 15:54:34",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ba2718463761fc0bdc",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/6ad27026/",
  "ticket_num": 314,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-05-14 15:54:34"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Ryan from esmf core\r\n\r\nHi Gerhard,\r\nRyan feels that we should change the all\\_tests target to include running the use test cases if they have been checked out. So I envision that we would check for the existence of the use\\_test\\_case directory in esmf/src and if it exists we would build and run the use test cases.\r\nWhat do you think? I can make the changes if you agree.\r\nThanks,\r\n\\--Silverio\r\n\r\nEmail thread below:\r\n\\------------------------------------------\r\n\r\nRyan, Silverio,\r\n\r\nIt think this is doable Ryan, but it sounds more like a convenience thing for us internally than anything for the typical tarball user. With that in mind I agree with Silverio and suggest to open a feature request on this for after ESMF 5.2r.\r\n\r\n-Gerhard\r\n\r\nRyan O'Kuinghttons wrote:\r\nHi,\r\nSo I was thinking about it some more, and I thought that it would be \\_extra\\_ special if we could download use\\_test\\_cases \\_with\\_ ESMF, AND run them with the all\\_tests target.  How would that work?\r\nRyan\r\nOn Jun 24, 2011, at 1:01 PM, Silverio Vasquez wrote:\r\nRyan, Gerhard,\r\n\r\nI've been looking at how to make the required changes, and I don't think it's minimal. Do you think we should open a feature request ticket and consider it later?\r\nThanks,\r\n\\--Silverio\r\nOn Jun 23, 2011, at 4:41 PM, Gerhard Theurich wrote:\r\n\r\n\r\nSilverio, Ryan,\r\nI see the benefit of what you propose, on the other hand I don't typically like dynamic behavior of targets of this sort, i.e. what a specific target does should not depend on what you have checked out. Here though I see that \"all\" is very generic. Taking it all into account I don't have any objection with you going forward with this change, as long as the required modifications to the build system are minimal, well tested and robust.\r\n-Gerhard\r\n\r\nHi Gerhard,\r\nRyan feels that we should change the all\\_tests target to include running the use test cases if they have been checked out. So I envision that we would check for the existence of the use\\_test\\_case directory in esmf/src and if it exists we would build and run the use test cases.\r\nWhat do you think? I can make the changes if you agree.\r\nThanks,\r\n\\--Silverio\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "all_tests target to include use_test_cases",
  "discussion_thread": {
    "_id": "0cb0e9ae",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-06-27 17:08:22",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31bb2718463761fc0be4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0cb0e9ae/",
  "ticket_num": 315,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2011-06-27 17:08:22"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: V. Balaji from GFDL\r\n\r\n\r\nDear Bob, in regard to your question about \"chimera overset grids\" I\r\nbelieve they are currently unsupported in ESMF, though the gridspec at\r\nleast mentions overset grids:-\\), so in principle they can at least be\r\nrepresented, I'd hope.\r\n\r\nThat said, this is a great time to talk about support for novel grids in\r\nESMF, as Bob Oehmke, cc'd here, has a summer student working on adding\r\ngridspec support in ESMF. Hope this note can serve to start a dialogue.\r\n\r\nThanks,\r\n\r\nCecelia DeLuca writes:\r\n\r\n\r\n\r\nDear all,\r\n\r\nThe ESMF team would like to invite you to an informal review\r\nof the current ESMF grid API and remapping capabilities on\r\nWednesday, June 15, at 12pmPT/1pmMT/2pmCT/3pmET.  The call\r\nis intended to explore the possibility of ESMF code reuse by the\r\ndata community.  If we missed people who should be on the call\r\nplease feel free to forward the invitation.  We would be happy\r\nto set up follow-up sessions for anybody who can't make it.\r\n\r\nESMF offers parallel grid interpolation capabilities through\r\neither a file-based, command line interface or an API.  It\r\nincludes the capability to remap data on structured and unstructured\r\ngrids, including geodesic and cubed sphere grids, and accommodates\r\nboth an observational data type and exchange grids.\r\nThe team is in the process of incorporating CF unstructured and\r\ngridspec file conventions into its libraries.  The work on ESMF\r\ngrid interfaces has been ongoing since 2002 or so, in collaboration\r\nwith modelers at NASA, NOAA, DoD, NCAR, etc.\r\n\r\nThe call will include an overview of capabilities and plans,\r\nand a walk-through of the grid API.\r\n\r\nThe URL for the current ESMF API is:\r\nhttp://www.earthsystemmodeling.org/esmf\\_releases/last\\_built/ESMF\\_refdoc/node1.html\r\n\r\nCouple notes:\r\nThe grid API is a portion of the total API.  Scroll down to\r\nsection 27 for structured grids and 29 for meshes, and section 12\r\nfor the command-line interface.\r\nThis documentation is from the head of the current development\r\ntrunk, so it's not foolproof.\r\n\r\nIf you would like to call in, the number is 1-866-692-3582, code\r\n3443874\\#.\r\n\r\nFor desktop sharing, go to:\r\n\\*Web Bridge\\*\r\n\r\n1\\) Go to: mymeetings.com\r\n2\\) On the right side of the bottom box is a blue header called \"Participant\r\nJoin\".  Underneath this label is a link: \"Joint and Event\".  Click on this.\r\n3\\) Meeting Number is: 741490701\r\n4\\) Meeting Passcode is: 9270604\r\n5\\) Enter your personal Information\r\n6\\) Click \"join now\"\r\n\r\nHope you can make it,\r\nCecelia\r\n\r\n\r\n\r\n\\-- \r\n\r\nV. Balaji                               Office:  +1-609-452-6516\r\nHead, Modeling Systems Group, GFDL      Home:    +1-212-253-6662\r\nPrinceton University                    Email: v.balaji@noaa.gov\r\n",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Support for Chimera Overset Grids",
  "discussion_thread": {
    "_id": "78825982",
    "posts": [
      {
        "text": "- **summary**: parallel grid remapping services --> Support for Chimera Overset Grids",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-07-11 19:28:41",
        "slug": "f94d",
        "subject": "#316 Support for Chimera Overset Grids"
      },
      {
        "text": "- **labels**: 1019236 --> Grid - New\n- **milestone**: 356870 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-01-05 16:49:59",
        "slug": "63ee",
        "subject": "#316 Support for Chimera Overset Grids"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-01-05 16:49:59",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31bb2718463761fc0beb",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/78825982/",
  "ticket_num": 316,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-07-11 19:20:54"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Erik Kluzek from NCAR\r\n\r\nHello\r\n\r\nI'm having a problem with ESMF\\_RegridWeightGen with ESMF5.2.0 with mpiuni\r\nor without on bluefire.ucar.edu which is an IBM-SP, running AIX3.5, using\r\nthe IBM xlf90 compiler version 12.01.0000.0008. I am working with CESM.\r\nThis functionality isn't available in the latest public release. I would\r\ngive it a normal priority and hope there might be some resolution to it in\r\na month or so. I know this isn't a public release, so I may have to figure\r\nout something on my own. Since, I'm \"regridding\" to a single point I\r\nshould be able to gin up my own mapping file, but it would be nice if\r\nESMF\\_RegridWeightGen could handle all of my files for me.\r\n\r\nWhen I use my single point grid file in ESMF\\_RegridWeightGen mapping from\r\na global grid I get a seg-fault as follows. I tried all of the different\r\ninterpolation method options and pole=none \\(although the pole shouldn't\r\nmatter at all\\).\r\n\r\n/contrib/esmf-5.2.0-64-g-mpiuni/bin/ESMF\\_RegridWeightGen -s $INGRID -d\r\n$OUTGRID -w $OUTFILE\r\nuse default interpolation method: bilinear\r\nuse default pole: All\r\nStarting weight generation with these inputs:\r\nSource File:\r\n/fis/cgd/cseg/csm/inputdata/lnd/clm2/mappingdata/grids/0.5x0.5\\_landuse\\_rc2000\\_090630.nc\r\nDestination File:\r\n/fis/cgd/cseg/csm/inputdata/lnd/clm2/mappingdata/grids/1x1pt\\_brazil\\_c110308.nc\r\nWeight File: map\\_0.5x0.5\\_landuse\\_to\\_1x1\\_brazil\\_aave\\_da\\_c110711.nc\r\nSource File is in SCRIP format\r\nSource Grid is a global grid\r\nSource Grid is a logically rectangular grid\r\nDestination File is in SCRIP format\r\nDestination Grid is a global grid\r\nDestination Grid is a logically rectangular grid\r\nRegrid Method: bilinear\r\nPole option: ALL\r\nTrace/BPT trap \\(core dumped\\)\r\n/contrib/esmf-5.2.0-64-g-mpiuni/bin/ESMF\\_RegridWeightGen -s $INGRID -d\r\n$OUTGRID -p none -w $OUTFILE\r\nuse default interpolation method: bilinear\r\nStarting weight generation with these inputs:\r\nSource File:\r\n/fis/cgd/cseg/csm/inputdata/lnd/clm2/mappingdata/grids/0.5x0.5\\_landuse\\_rc2000\\_090630.nc\r\nDestination File:\r\n/fis/cgd/cseg/csm/inputdata/lnd/clm2/mappingdata/grids/1x1pt\\_brazil\\_c110308.nc\r\nWeight File: map\\_0.5x0.5\\_landuse\\_to\\_1x1\\_brazil\\_aave\\_da\\_c110711.nc\r\nSource File is in SCRIP format\r\nSource Grid is a global grid\r\nSource Grid is a logically rectangular grid\r\nDestination File is in SCRIP format\r\nDestination Grid is a global grid\r\nDestination Grid is a logically rectangular grid\r\nRegrid Method: bilinear\r\nPole option: NONE\r\n\r\nThe output grid is in SCRIP format and is just a single point \\(although it\r\nidentifies it as a global grid above\\)...\r\n\r\nncdump $OUTGRID\r\nnetcdf 1x1pt\\_brazil\\_c110308 \\{\r\ndimensions:\r\ngrid\\_size = 1 ;\r\ngrid\\_corners = 4 ;\r\ngrid\\_rank = 2 ;\r\nvariables:\r\nint grid\\_dims\\(grid\\_rank\\) ;\r\ndouble grid\\_center\\_lat\\(grid\\_size\\) ;\r\ngrid\\_center\\_lat:units = \"degrees\" ;\r\ndouble grid\\_center\\_lon\\(grid\\_size\\) ;\r\ngrid\\_center\\_lon:units = \"degrees\" ;\r\nint grid\\_imask\\(grid\\_size\\) ;\r\ngrid\\_imask:units = \"unitless\" ;\r\ndouble grid\\_corner\\_lat\\(grid\\_size, grid\\_corners\\) ;\r\ngrid\\_corner\\_lat:units = \"degrees\" ;\r\ndouble grid\\_corner\\_lon\\(grid\\_size, grid\\_corners\\) ;\r\ngrid\\_corner\\_lon:units = \"degrees\" ;\r\n\r\n// global attributes:\r\n:title = \"1x1pt\\_brazil\\_c110308.nc\" ;\r\n:input\\_file =\r\n\"/fs/cgd/csm/inputdata/lnd/clm2/griddata/griddata\\_1x1pt\\_brazil\\_navy\\_070404.nc\"\r\n;\r\ndata:\r\n\r\ngrid\\_dims = 1, 1 ;\r\n\r\ngrid\\_center\\_lat = -7 ;\r\n\r\ngrid\\_center\\_lon = -55 ;\r\n\r\ngrid\\_imask = 1 ;\r\n\r\ngrid\\_corner\\_lat =\r\n-8, -8, -6, -6 ;\r\n\r\ngrid\\_corner\\_lon =\r\n-56, -54, -54, -56 ;\r\n\\}\r\n\r\n\r\nI figured I'd also try to write the above data in ESMF unstructured grid\r\nformat and see if I could get it work, but I haven't done that yet.\r\n\r\nI have tried more than one single point file to no avail.\r\n\r\n\\-- \r\nErik Kluzek \\(CGD at NCAR\\)\r\nNational Center for Atmospheric Research\r\nBoulder CO, \\(off\\) \\(303\\)497-1326\r\nhttp://www.cgd.ucar.edu/~erik\r\n\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\r\n\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Support for mapping to a single cell",
  "discussion_thread": {
    "_id": "b08b1719",
    "posts": [
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 356870 --> \n- **summary**: Problem with ESMF_RegridWeightGen on IBM for ESMF5.2.0 for m --> Support for mapping to a single cell",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-01-05 16:44:59",
        "slug": "2fe6",
        "subject": "#317 Support for mapping to a single cell"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-01-05 16:44:59",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31bc2718463761fc0bfd",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b08b1719/",
  "ticket_num": 317,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-07-11 21:04:44"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Although they haven't asked for online capability yet, this would be useful for the unstructured community who stores data on Mesh edges \\(e.g. Michael Duda of MPAS, the CSU folks\\) to either use regridding or just store data in Fields. \r\n\r\nTo do this we need to be able to figure out how many edges are on each PET and build a distgrid from them, it appears the capability to have edges is already in the low level Mesh, but will need to test it and see if it provides everything, so there is some uncertainty in the time estimate. This is probably a necessary precondition for doing online regridding of edge data. ",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Ability to build Fields on Mesh Edges (3?)",
  "discussion_thread": {
    "_id": "fa85bda9",
    "posts": [
      {
        "text": "This is a probably a precondition for the online part of 3371544. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-07-19 16:24:55",
        "slug": "49e3",
        "subject": "#318 LONG: Ability to build Fields on Mesh Edges (3?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-07-19 16:22:13",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31bd2718463761fc0c0a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/fa85bda9/",
  "ticket_num": 318,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-07-19 16:22:13"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Would be useful for Michael Duda of MPAS and CSU icosahedral mesh folks, and probably others in the unstructured community\r\n\r\nThe idea is to let the user regrid data which is on mesh edges. This should eventually be available in both the offline and online regridding, and for conservative and non-conservative. Probably the easiest way to do this right now is to create a new mesh from the edge one which has the data at nodes \\(for non-conservative\\) or cell centers \\(for conservative\\).  \\(like a dual-mesh, but different\\).  For the online regridding we probably need to be able to build Fields on Mesh edges, see ticket \\# 3371542.",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Add ability to regrid Mesh edge data (5)",
  "discussion_thread": {
    "_id": "a49e2080",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-07-19 16:23:40",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31bd2718463761fc0c17",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a49e2080/",
  "ticket_num": 319,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-07-19 16:23:40"
},{
  "status": "closed",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "In file ESMCI\\_IO\\_XML.C, re-implement IO\\_XML::write\\*\\(\\) methods to use C/C++ printf\\(\\)s or couts instead of Xerces.\r\n\r\nXerces strength is in reading files, not so much in writing them, particularly with the line-oriented SAX2 approach currently used in the AttributeWriteXML\\*\\(\\) methods \\(for memory and time efficiency\\).  However, Xerces would be the better choice if the DOM approach is ever used instead, since it is tree-oriented rather than line-oriented.  This would be the case, if we later decide to do XSL transforms internally within ESMF, via the replacement of the intermediate XML output file step with the construction of an in-memory DOM tree.  Then the XSL transformation would occur from one DOM tree to another in memory, and Xerces would output this final DOM tree to an XML file \\(from one line of code within ESMF, plus a few lines of initialization/finalization\\).",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Remove CIM XML output dependency on Xerces",
  "discussion_thread": {
    "_id": "21193d3d",
    "posts": [
      {
        "text": "CIM XML output of Attributes can now be done without Xerces, using the standard C++ ofstream facility in ESMCI\\_IO\\_XML.C  The 5 special characters &lt; &gt; & ' \" are converted to their equivalent XML entities &amp;lt; &amp;gt; &amp;amp; &amp;apos; &amp;quot; on output in order to keep the XML output well-formed \\(valid, parseable\\).\r\n\r\nTo use, simply do not set the ESMF\\_XERCES\\* environment variables before building ESMF.  If ESMF is built with these variables set, and Xerces 3.1.0 or later is installed, output will be done via Xerces as before.\r\n",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-20 17:42:05",
        "slug": "535c",
        "subject": "#320 Remove CIM XML output dependency on Xerces"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2011-10-20 17:42:05",
        "slug": "a026",
        "subject": "#320 Remove CIM XML output dependency on Xerces"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-20 17:42:05",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31be2718463761fc0c1f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/21193d3d/",
  "ticket_num": 320,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-07-22 20:51:31"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\), but would have benefits for many users\r\n\r\nCurrently for any regridding the destination is a Mesh object. For non-conservative regridding this isn't really necessary and it could be just a list of points. This would have many benefits: It would reduce the memory used, it would make things somewhat more time efficient, it would solve the current bugs with not being able to regrid single points, or destination meshes with less than 2 width DEs. It would also allow us to trivially hook up location streams as a destination of the regridding. It would in general allow us to regrid to just points instead of imposing some kind of structure on them, it seem like this freedom would let\r\nus handle a lot of cases easily which would otherwise take unnecessary work and have unnecessary restrictions.  ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: For non-conserve regrid change dest to be pnt list (4)",
  "discussion_thread": {
    "_id": "8d6c1ac9",
    "posts": [
      {
        "text": "- **summary**: LONG: For non-conserve regrid change dest to be pnt list (3) --> LONG: For non-conserve regrid change dest to be pnt list (4)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-09-22 17:02:54",
        "slug": "61fe",
        "subject": "#321 LONG: For non-conserve regrid change dest to be pnt list (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-09-22 17:02:54",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31bf2718463761fc0c31",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/8d6c1ac9/",
  "ticket_num": 321,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-08-03 16:43:06"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: yesshi\r\n\r\n\r\nI have a question about using ESMF\\_GridCompRun in multi-threading. Because ESMF state collect all the data\\(private data and share data\\), call GridCompRun in multi-threading will lead to errors\r\nFor example:\r\n\r\n\\!$omp parallel do  &\r\n\\!$omp& private \\(m,rc\\)\r\ndo m = 1,1000\r\ncall ESMF\\_AttributeSet\\(user\\_model1\\_1\\_import,name=\"m\",value=m,rc=rc\\)\r\nif\\(rc/=ESMF\\_SUCCESS\\)return\r\ncall ESMF\\_GridCompRun\\(user\\_model1\\_1\\_comp,importState=user\\_model1\\_1\\_import,&\r\nexportState=user\\_model1\\_1\\_export,rc=rc\\)\r\nif\\(rc/=ESMF\\_SUCCESS\\)return\r\nenddo\r\n\\!$omp end parallel do\r\n\r\nGridCompRun need private parameter m, but m will be set at the same time and cause errors. And openmp seems not support state to be a private parameter.So if i want to call GridCompRun in multi-threading, any solutions can i get ? \r\n",
  "labels": [
    "Component"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: ESMF_GridCompRun when multi-threading (10)",
  "discussion_thread": {
    "_id": "0e3a49e0",
    "posts": [
      {
        "text": "- **labels**: 588645 --> Component\n- **milestone**: 155253 --> \n- **summary**: question about ESMF_GridCompRun when multi-threading --> LONG: ESMF_GridCompRun when multi-threading (10)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-12-06 17:01:38",
        "slug": "e1f6",
        "subject": "#322 LONG: ESMF_GridCompRun when multi-threading (10)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-12-06 17:01:38",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31bf2718463761fc0c3e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0e3a49e0/",
  "ticket_num": 322,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-08-05 21:11:32"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "From: Tony Craig, CESM\r\n\r\nesmf folks,\r\n\r\nwe are adding ensemble capability to cesm.  this is largely\r\ndone now in the driver and several component models.\r\nthe idea is that we want to be able to say there are \"N\"\r\natmosphere models coupled to 1 data ocean model for\r\ninstance.  The \"N\" instances of the atmosphere are identical\r\nexcept maybe for different namelist or different initial\r\nconditions, but they are the same code and same init, run,\r\nand finalize interfaces.  the atmosphere model is called\r\n\"N\" times by the driver, each time a unique ID is sent that\r\nallows the component to know which instance it is and to\r\nread the right namelist and so forth.  For now, these instances\r\nare always running concurrently, but we might try to support\r\nsequentially running ensemble components if we can figure\r\nout how each instance on a pe can have unique memory.\r\nbut that's a separate issue.\r\n\r\ni have made changes in the esmf implementation so the\r\nthe ensemble ID is passed through as an export state attribute.\r\nand i have modified the initialization of the petlist so each\r\nensemble member has it's own petlist.  that's all working fine.\r\nthe problem is that the \"register\" routine does not work\r\nproperly.  i have included that routine below.  basically, i can\r\npass a unique petlist to the register routine, but the \"atm\\_comp\"\r\ndatatype is singular in the component model.  i think one solution is\r\nto make the atm\\_comp an array, but we are working hard to\r\navoid creating arrays in the component models that reflect\r\nthe ensemble dimension.  so far, we have been successful.\r\nalso, to do that, we'd need to pass an ensemble ID somehow\r\nthrough the register routine which would mean changing the\r\nregister interface.  i suspect this is not consistent with ESMF\r\neither.  one issue seems to be that the register routine is called\r\non all pes while the init/run/finalize routines are only called on\r\nthe active pes.  so the arguments passed to the register routine\r\nfrom the driver can be arrays and the driver can handle that.\r\nbut the atm\\_comp in the component model cannot easily be\r\nmade an array of instances, but it seems it must be.\r\n\r\ni guess my question is how does esmf envision supporting\r\nmultiple instances of the same component in an esmf coupled\r\nsystem.  and does it allow the component to know nothing\r\nabout whether it's being run as multiple instances or not?\r\nwith the mct interfaces, as i said we just initialize all the \"IDs\"\r\nin the driver and instantiate enough mpi communicators for\r\neach instance and then we pass the proper ID and mpicom\r\ninto the init/run/finalize interfaces, and they are running concurrently\r\nand it all works nicely.\r\n\r\ni'm sure this makes no sense.  please ask some follow up\r\nquestions.  by the way, everything works fine in esmf with\r\nthe current implementation as long as we don't run multiple\r\ninstances with esmf interfaces.  it's just the multiple instance that works\r\nwith the mct interfaces and not the esmf interfaces.  also, i will be \r\nchecking\r\nin the multiple instance changes in the next week or two.  if\r\nthe esmf multiple instances is not working then, it's ok.  we\r\ncould then all look at the same code together and work on\r\nresolving this.  thanks,\r\n\r\ntony.........\r\n\r\n=======\r\nmodule atm\\_comp\\_mct\r\n\r\n.....\r\n\r\nprivate \\! except\r\n\r\ntype\\(ESMF\\_GridComp\\)     :: atm\\_comp\r\n\r\n\\!\r\n\\! Author: Fei Liu\r\n\\! This module is a wrapper layer between ccsm driver and ESMF data atm \r\ncomponent\r\n\\!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncontains\r\n\\!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\\!===============================================================================\r\n\r\nsubroutine atm\\_register\\(atm\\_petlist, ccsmComp, localComp\\)\r\n\r\nimplicit none\r\n\r\ninteger, pointer                  :: atm\\_petlist\\(:\\)\r\ntype\\(ESMF\\_CplComp\\)                :: ccsmComp\r\ntype\\(ESMF\\_GridComp\\),intent\\(inout\\) :: localComp\r\n\r\ninteger            :: rc\r\n\r\natm\\_comp = ESMF\\_GridCompCreate\\(name=\"atm\\_comp\", petList=atm\\_petlist, \r\nrc=rc\\)\r\nif\\(rc /= ESMF\\_SUCCESS\\) call shr\\_sys\\_abort\\('failed to create atm comp'\\)\r\ncall ESMF\\_GridCompSetServices\\(atm\\_comp, atm\\_register\\_esmf, rc=rc\\)\r\nif\\(rc /= ESMF\\_SUCCESS\\) call shr\\_sys\\_abort\\('failed to register atm comp'\\)\r\nimport\\_state = ESMF\\_StateCreate\\(name=\"atm import\", \r\nstatetype=ESMF\\_STATE\\_IMPORT, rc=rc\\)\r\nif\\(rc /= ESMF\\_SUCCESS\\) call shr\\_sys\\_abort\\('failed to create import \r\natm state'\\)\r\nexport\\_state = ESMF\\_StateCreate\\(name=\"atm export\", \r\nstatetype=ESMF\\_STATE\\_EXPORT, rc=rc\\)\r\nif\\(rc /= ESMF\\_SUCCESS\\) call shr\\_sys\\_abort\\('failed to create export \r\natm state'\\)\r\n\r\ncall ESMF\\_AttributeLink\\(ccsmComp, atm\\_comp, rc=rc\\)\r\nif\\(rc /= ESMF\\_SUCCESS\\) call shr\\_sys\\_abort\\('failed to link attribute'\\)\r\n\r\nlocalComp = atm\\_comp\r\n\r\nend subroutine\r\n\r\n",
  "labels": [
    "Component"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "CESM concurrent ensemble requires component creation change",
  "discussion_thread": {
    "_id": "c3cc8024",
    "posts": [
      {
        "text": "Initial investigation shows that the main problem Tony reported is caused by the module wise 'saved' gridded\\_comp and import and export states in the wrapper layer. They are overwritten by the last instance initialization. PETList calculation works fine. A quick fix is to have an array of gridded component and states in the wrapper layer that the component models are not aware of. There are other minor glitches such as calling AttributeGet in model component without setting its value in the wrapper layer. Once the main problem is resolved, the concurrent ensemble should work when ESMF interfaces are turned on.",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2011-08-26 15:37:54",
        "slug": "dcc2",
        "subject": "#323 CESM concurrent ensemble requires component creation change"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-08-17 20:44:44",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c02718463761fc0c4a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c3cc8024/",
  "ticket_num": 323,
  "custom_fields": {
    "_priority": "9",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-08-17 20:44:44"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: Li Yan CERFACS\r\n\r\nMore normalization options were requested: specifically fracarea and fracnei.  This does not sound like a high urgency item.",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Add more normalization options to ESMF_RegridWeightGen",
  "discussion_thread": {
    "_id": "59c539cf",
    "posts": [
      {
        "text": "It seems that Li only needs fracarea and it is higher urgency than originally thought:\r\n\r\nHi Ryan,\r\n\r\nYes, this feature is very important for us\\! The fracarea option is used in our operating model. Thanks for this prioritization\\!\r\n\r\nbest regards,\r\nLi",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-08-31 23:04:58",
        "slug": "8e2b",
        "subject": "#324 Add more normalization options to ESMF_RegridWeightGen"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-08-18 17:32:50",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c12718463761fc0c57",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/59c539cf/",
  "ticket_num": 324,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-08-18 17:32:50"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "Current Field partial creation implementation allows an empty Grid to be set in an empty Field. If the Grid is completed, then the Field can be completed afterwards. This is demonstrated in a unit test. The question is whether such behavior should be disallowed in the future. This maybe useful for NUOPC or other codes that requires high level of flexibility in the interaction between partially created Grid and Field.",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "Field Partial creation allows setting an empty Grid",
  "discussion_thread": {
    "_id": "515a5f62",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-08-18 20:02:42",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c12718463761fc0c65",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/515a5f62/",
  "ticket_num": 325,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-08-18 20:02:42"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Who: Bob Oehmke \\(core team\\) seems like it would be nice to have the capability\r\n\r\nChange short cut creates so they also allow the creation f 1d grids.  ",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Allow Grid shortcut creates to support 1D grids",
  "discussion_thread": {
    "_id": "217e99b0",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-08-25 16:12:21",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c22718463761fc0c6d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/217e99b0/",
  "ticket_num": 326,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-08-25 16:12:21"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Who: Bob Oehmke \\(or ESMF core team\\), but will allow us to validate online regridding with grid files as input and will also give users an easy built in sanity check of generated weights. \r\n\r\nThis new functionality will consist of adding interpolation checking code to the ESMF\\_RegridWeightGen application. The checking will be toggled on and off by a command line flag \\(default no checking\\). It's important that when the flag is off, no extra calculation is done in the application, so no extra time is added.  Since this code will be a repeat of what's in the ESMF\\_RegridWeigghtGenChecker it would make sense to make it a \\(non-user advertised\\) subroutine in ESMF called from both places. The regrid weight gen checker script will then run the generator with the flag on, checking that the results from the generator match those from the weight file and also that they pass tolerance tests. \r\n\r\n\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "Add checking code to ESMF_RegridWeightGen",
  "discussion_thread": {
    "_id": "66c5946b",
    "posts": [
      {
        "text": "Marianna and CCSM was also interested in this.",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-06-21 17:09:46",
        "slug": "a2e2",
        "subject": "#327 Add checking code to ESMF_RegridWeightGen"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-09-01 17:21:47",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c22718463761fc0c75",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/66c5946b/",
  "ticket_num": 327,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-09-01 17:21:47"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: the data community, and Rich Signell\r\n\r\nThe data community would like a Python interface to ESMF regridding.  They mentioned that this would be more useful than the corresponding C interface.  The initial implementation of the python API would include everything required to remap data from an unstructured grid to a structured grid, a major use case obtained from Rich Signell.",
  "labels": [
    "Language Interface"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG: Python API for regridding (8)",
  "discussion_thread": {
    "_id": "e6a00800",
    "posts": [
      {
        "text": "- **summary**: Python: Python API for regridding (8) --> LONG: Python API for regridding (8)",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2011-10-06 14:24:18",
        "slug": "70c8",
        "subject": "#328 LONG: Python API for regridding (8)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-06 14:24:18",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c32718463761fc0c83",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e6a00800/",
  "ticket_num": 328,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-09-23 21:19:51"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "In the design discussion to represent MCT attributeVector with ESMF data structures, we come up with the solution to hold the Fortran data pointer in AttributeVector as references in the split Fields in a FieldBundle. For the CESM work, we only need to change FieldBundle to implement this design. But in a different context where Field needs to act as an iterator for packed data access, additional changes are needed in the Field class type definition, create method, and access method. This ticket is to remind us of this discussion.",
  "labels": [
    "Field"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "Field act as an iterator for packed data access",
  "discussion_thread": {
    "_id": "513768cf",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-09-26 16:34:39",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c32718463761fc0c90",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/513768cf/",
  "ticket_num": 329,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-09-26 16:34:39"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Rich Signell of Woods Hole also other data/unstructured users have mention this in talks \r\n\r\nThe idea is given a polygon \\(in most cases this is a quad\\) return a new mesh containing just the cells within the polygon. There are three options:\r\n1\\) the new mesh consists of cells which fit within the poly. 2\\) the new mesh consists of cells which overlap the poly. 3\\) the new mesh consists of cells chopped to fit within the poly. It sounds like 1 or 2 are the most used variations, so start with those. Because they are the most popular, the time is for implementing 1 or 2. 3 might take a bit longer. ",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Mesh subsetting (3)",
  "discussion_thread": {
    "_id": "76127947",
    "posts": [
      {
        "text": "- **summary**: LONG: Mesh subsetting (4) --> LONG: Mesh subsetting (3)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-10-04 17:33:01",
        "slug": "cf02",
        "subject": "#330 LONG: Mesh subsetting (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-04 17:33:01",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c32718463761fc0c98",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/76127947/",
  "ticket_num": 330,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-09-27 21:45:09"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: Howard Lander, Rich Signell\r\n\r\nESMF could offer an easy install option, through an apt or rpm based package management system - such as with the Ubuntu linux distribution.  This is similar to past requests to make binaries available for certain platforms, this would only be available for a select few linux platforms.  The impact is potentially very large because of the overhead required to build this package for every new release, testing the package build, and acquisition of the appropriate systems on which to conduct the testing.  This is different from an autoconf build, which was tried in an early version of ESMF and found to be difficult to maintain.  ",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "LONG: easy install (4)",
  "discussion_thread": {
    "_id": "c8d70216",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-09-29 00:28:33",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c42718463761fc0ca5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c8d70216/",
  "ticket_num": 331,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Port to New Platform"
  },
  "created_date": "2011-09-29 00:28:33"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Thomas Clune from the Software Integration and Visualization Office, NASA GSFC\r\n\r\nGISS may soon begin an effort to adapt their climate model for other planets.  \\(Not sure at the moment if they are thinking of other planets in our solar system or theoretical Earth-like planets - or both.\\)\r\n\r\nI know that ESMF can be extended to support such calendars, but is there a mechanism to allow user-defined calendars.    This would be trivial in an OO context, but I can imagine some sort of standardized configuration file or a lengthy set of setter procedures.   Documentation seems to imply that there is only a slowly growing set of centrally defined calendars.\r\n\r\nCan someone quickly summarize my options here?\r\n\r\nCheers,\r\n\r\n\\- Tom\r\n\r\n\r\nThomas Clune\t\t\t\t\t\r\nSoftware Integration and Visualization Office\r\nNASA GSFC \\(610.3\\)   B33-C128  \r\n301-286-4635 \\(W\\)\t301-286-1775 \\(F\\)\r\n&lt;Thomas.L.Clune@nasa.gov&gt;  ",
  "labels": [
    "Time Manager"
  ],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "Question concerning planetary calendars",
  "discussion_thread": {
    "_id": "4c77698d",
    "posts": [
      {
        "text": "Earl implemented a custom calendar and it is available in a 5.3.0 snapshot. Tom Clune hopes to check it out when 5.3.0 is released.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-11-21 21:31:24",
        "slug": "918c",
        "subject": "#332 Question concerning planetary calendars"
      },
      {
        "text": "- **labels**: 588652 --> Time Manager\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2011-11-21 21:31:24",
        "slug": "aa61",
        "subject": "#332 Question concerning planetary calendars"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-11-21 21:31:24",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c42718463761fc0cad",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4c77698d/",
  "ticket_num": 332,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-09-29 15:22:50"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Dan Kokron from the Global Modeling and Assimilation Office, NASA Goddard Space Flight Center\r\n\r\nA feature request related to ESMF regridding.  Please consider adding\r\nthe ability to compute higher order moments beyond the weighted mean\r\nwhen performing a regridding operation.\r\n\r\nUse case.\r\nIt would be useful to get subgrid scale variability within a target grid\r\ncell when converting a high resolution \\(30 sec\\) topography data set to\r\nGCM type resolutions \\(1 degree for instance\\).\r\n\r\n\\-- \r\nDan Kokron\r\nGlobal Modeling and Assimilation Office, Code 610.1\r\nNASA Goddard Space Flight Center\r\nGreenbelt, MD 20771 USA\r\nDaniel.S.Kokron@nasa.gov\r\nPhone: \\(301\\) 614-5192\r\nFax:   \\(301\\) 614-5304",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: higher order moments (10?)",
  "discussion_thread": {
    "_id": "5b525e90",
    "posts": [
      {
        "text": "- **summary**: higher order moments --> LONG: higher order moments (10?)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-12-01 16:53:01",
        "slug": "166f",
        "subject": "#333 LONG: higher order moments (10?)"
      },
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-12-01 16:54:03",
        "slug": "9012",
        "subject": "#333 LONG: higher order moments (10?)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-12-01 16:54:03",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c62718463761fc0cbf",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/5b525e90/",
  "ticket_num": 333,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-10-03 22:51:37"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\), but useful for anyway who has data on cell centers \\(e.g. MPAS, FVCOM, etc.\\)\r\n\r\nCurrently we support bilinear regridding of data at cell centers for the offline regridding SCRIP format. It would be good to bring this functionality down to the integegrated regridding so it could be used by those customers also. This would also make the implementation much cleaner in the offline regridding. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Online Bilinear regridding on Mesh cell center (3)",
  "discussion_thread": {
    "_id": "453b0ba0",
    "posts": [
      {
        "text": "- **summary**: LONG: Online Bilinear regridding on cell center (3) --> LONG: Online Bilinear regridding on Mesh cell center (3)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2011-10-04 17:27:04",
        "slug": "4b85",
        "subject": "#334 LONG: Online Bilinear regridding on Mesh cell center (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-04 17:27:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c72718463761fc0cd1",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/453b0ba0/",
  "ticket_num": 334,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-10-04 16:16:13"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(esmf core team\\), but very useful for anyone using conservative interpolation\r\n\r\nIn certain cases, the current polygon intersection algorithm being used in the conservative interpolation can have problems if source and destination cells align closely along an edge. Numerical problems in this case can lead to small gaps between neighboring cells and a degradation of conservative accuracy. I have an algorithm picked out which should fix the problem. The time is to implement it and put it in.  ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Improved polygon intersect. for conservative (3)",
  "discussion_thread": {
    "_id": "19dcd1fb",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-04 20:00:10",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c72718463761fc0cde",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/19dcd1fb/",
  "ticket_num": 335,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-10-04 20:00:10"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Jim Edwards from NCAR\r\n\r\nI have a feature request - I think that ESMF needs a tool similar to netcdf's nc-config program:\r\n\r\nUsage: nc-config \\[OPTION\\]\r\n\r\nAvailable values for OPTION include:\r\n\r\n\\--help        display this help message and exit\r\n\\--all         display all options\r\n\\--cc          C compiler\r\n\\--cxx         C++ compiler\r\n\\--fc          Fortran compiler\r\n\\--cflags      pre-processor and compiler flags\r\n\\--fflags      flags needed to compile a Fortran program\r\n\\--has-dap     whether OPeNDAP is enabled in this build\r\n\\--has-nc2     whether NetCDF-2 API is enabled\r\n\\--has-nc4     whether NetCDF-4/HDF-5 is enabled in this build\r\n\\--has-hdf5    whether HDF5 is used in build \\(always the same as --has-nc4\\)\r\n\\--has-hdf4    whether HDF4 was used in build\r\n\\--has-pnetcdf whether parallel-netcdf \\(a.k.a. pnetcdf\\) was used in build\r\n\\--has-f77     whether Fortran 77 API is enabled in this build\r\n\\--has-f90     whether Fortran 90 API is enabled in this build\r\n\\--has-c++     whether C++ API is enabled in this build\r\n\\--has-szlib   whether szlib is included in build\r\n\\--libs        library linking information for netcdf\r\n\\--flibs       libraries needed to link a Fortran program\r\n\\--prefix      Install prefix\r\n\\--includedir  Include directory\r\n\\--version     Library version\r\n\r\n\r\nthis gives information about what libraries and supporting tools were used in this netcdf build, and what flags were used to build it.   You can use it directly in a make file as in\r\n\r\nLIBS += $\\(shell nc-config --libs\\)\r\n\r\nSo right now I'm getting an error 20111013 105657.779674 ERROR    PET0 ESMF\\_Grid.F90:4794 ESMF\\_GridCreateFrmFile Library needed by ESMF not present - Internal subroutine call returned Error\r\n\r\nI think that this is because NETCDF was not included in the build - or is it PIO?   There are 1/2 dozen builds on bluefire, do any have what I need?   I don't know how to tell.\r\n\r\n\r\n\r\n",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "ESMF needs tool like netcdf's nc-config program",
  "discussion_thread": {
    "_id": "4914855d",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-13 19:40:27",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c82718463761fc0ce6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4914855d/",
  "ticket_num": 336,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-10-13 19:40:27"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Michael Duda from NCAR\r\n\r\nHi, Bob.\r\n\r\nFirst, let me thank you again for all of your help with ESMF regridding\\!\r\nI apologize to come back to you with another question so soon, but I\r\nthink this one may only require a 'yes' or 'no' answer.\r\n\r\nI've successfully generated remapping weights from an MPAS ocean-basin\r\nmesh \\(with no cells over land\\) to a global mesh using the 'conserve'\r\nmethod, with the grid files in either ESMF or SCRIP format. However,\r\nwhen I try to generate weights using the 'bilinear' method, the\r\nESMF\\_RegridWeightGen utility stops with an error message when the grid\r\nfiles are in SCRIP format, but it runs to completion with no error\r\nmessages when the grid files are in ESMF format. The error message I'm\r\nseeing when using SCRIP-format files is:\r\n\r\n20111013 120030.823494 INFO     PET0 Running with ESMF Version 5.2.0rp1 beta snapshot\r\n20111013 120038.347568 ERROR    PET0 Arguments are incompatible  - can't triangulate a polygon with less than 3 sides\r\n20111013 120038.347592 ERROR    PET0 ESMF\\_Mesh.F90:1413 ESMF\\_MeshCreateFromUnstruct\\(\\) Arguments are incompatible - Internal subroutine call returned Error\r\n20111013 120038.347602 ERROR    PET0 ESMF\\_Mesh.F90:1545 ESMF\\_MeshCreateFromScrip\\(\\) Arguments are incompatible - Internal subroutine call returned Error\r\n20111013 120038.347609 ERROR    PET0 ESMF\\_Mesh.F90:1065 ESMF\\_MeshCreateFromFile\\(\\) Arguments are incompatible - Internal subroutine call returned Error\r\n\r\nI'm using the beta snapshot of the ESMF\\_RegridWeightGen on bluefire in\r\n/contrib/esmf-5.2.0rp1bs4-64/bin/ESMF\\_RegridWeightGen.\r\n\r\nSo, my question is: is it the case that we must use the ESMF grid format\r\nwhen generating bilinear weights from a regional to a global mesh? I'm\r\nultimately planning to work with some CESM grid files that are in SCRIP\r\nformat \\(the grids I've tested with were generated by me so that I could\r\ncontrol the format\\), so I could write a converter between SCRIP grids\r\nand ESMF grids; would this be the best approach if we need to use the\r\nESMF format for bilinear weights?\r\n\r\nIf you'd like, I can pass the two grid files \\(ocean basin and global\\)\r\nthat I've been experimenting with, too; just let me know.\r\n\r\nThanks, again, for all of your help\\!\r\n\r\nMichael\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Bilinear on centers in ESMF format",
  "discussion_thread": {
    "_id": "361f920f",
    "posts": [
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> \n- **summary**: Bilinear weights with ESMF_RegridWeightGen (SCRIP format) --> Bilinear on centers in ESMF format",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-08-21 17:39:06",
        "slug": "400f",
        "subject": "#337 Bilinear on centers in ESMF format"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-08-21 17:39:06",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c82718463761fc0ced",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/361f920f/",
  "ticket_num": 337,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-10-13 19:48:09"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "WHO:  Affects people who are trying to use CF conventions consistently \\(Bert Jagers, Rich Signell, etc.\\)\r\n\r\nWe need to support the UGRID specification and hopefully phase out the ESMF unstructured format.\r\n\r\n\r\n\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "Add UGRID support to offline regrid",
  "discussion_thread": {
    "_id": "b69ee79e",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2011-10-14 04:18:18",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c92718463761fc0cfa",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b69ee79e/",
  "ticket_num": 338,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-10-14 04:18:18"
},{
  "status": "open",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "The ESMF CIM/Citation Attribute package contains a URL attribute.  However, there is no place defined in the CIM \\(as of 1.5/1.7\\) for this to be output to.  Currently \\(post ESMF 5.2.0r\\) this is concatenated to the Citation LongTitle attribute and output to the CIM XML file under &lt;citation&gt;&lt;gmd:collectiveTitle&gt;; the ESG harvester picks it up from there.  Allyn suggested subclassing the gmd:CI\\_CitationType, which is the GMD standard for holding citation info, which the CIM uses.  A proposal to GMD to add a Citation URL could also be done, although it would likely take longer.  See e-mail thread.\r\n\r\nInitially assigning to Sylvia on behalf of Allyn until he can be assigned to directly \\(needs to be added to the list\\).  Once Allyn enhances the CIM to hold a Citation URL, then the ticket can be reassigned to me \\(or whomever will modify ESMF AttributeWrite\\(\\) code\\), to make the corresponding output modifications.  This will also depend on the ESG harvester making corresponding changes.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "ksaint",
  "assigned_to_id": "4f18caf91be1ce4f1d0007f2",
  "private": false,
  "summary": "CIM: Provide place in CIM for Citation URL",
  "discussion_thread": {
    "_id": "7738c759",
    "posts": [
      {
        "text": "In looking for the attribute ticket assigned to me, I came across this one and am going to reassign it to Kathy to look into.  I don't know if allyn actually modified the CIM to hold this attribute, but since attribute clean seems to be a priority at the moment, it would be worth allowing Kathy and Allyn to discuss.",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2012-10-10 19:46:23",
        "slug": "07c0",
        "subject": "#339 CIM: Provide place in CIM for Citation URL"
      },
      {
        "text": "- **assigned_to**: murphysj --> ksaint",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2012-10-10 19:46:23",
        "slug": "0ec9",
        "subject": "#339 CIM: Provide place in CIM for Citation URL"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-10-10 19:46:23",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31c92718463761fc0d02",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7738c759/",
  "ticket_num": 339,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2011-10-20 16:05:12"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Chaing Chen  from SAIC\r\n\r\nDear Sir,\r\n\r\nI am planning to incorporate ESMF\\_FieldBundleRegrid in our NOGAPS-HYCOM-NUOPC system. I am hoping that we can work together to bring ESMF\\_FieldBundleRegrid function to a next level. The following is a wish list that I would like to submit for you to consider. Thanks.\r\n\r\n1\\. A return of a large value or flag for dest grid when src grid does not have a coverage for the dest grid \\(grid domain mismatch\\).\r\n\r\n2\\. A function to deal with the land/sea mismatch issue. I am willing to share my thoughts regarding to this issue.\r\n\r\n3\\. A return of a large value or flag for dest grid when there is no solution to resolve land/sea mismatch issue.\r\n\r\n\r\nJames\r\n\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "ESMF_FieldBundleRegrid wish  request",
  "discussion_thread": {
    "_id": "d027c90e",
    "posts": [
      {
        "text": "This relates also to Tim Campbell's \\#3497087.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-07-19 16:31:36",
        "slug": "fc8e",
        "subject": "#340 ESMF_FieldBundleRegrid wish  request"
      },
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-07-19 16:31:36",
        "slug": "ad1f",
        "subject": "#340 ESMF_FieldBundleRegrid wish  request"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-07-19 16:31:36",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ca2718463761fc0d14",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d027c90e/",
  "ticket_num": 340,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-01-11 15:47:20"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Arlindo da Silva from NASA\r\n\r\nHi Cecilia, Gerhard:\r\n\r\nIs there such a thing?\r\n\r\nfrom esmf import ESMF\r\n\r\ne = ESMF\\(layout=\\(4,8\\)\\)\r\nimport, export = e.State\\('import'\\), e.State\\('export'\\)\r\nclock = e.clock\\(datetime.now\\(\\),dt=timedelta\\(seconds=30\\*60\\)\\)\r\n\r\natm = e.GridComp\\('atmosphere',import,export,clock\\)\\)\r\n\r\netc.\r\n\r\nyou get the idea.  Do you know whether there is any concerted effort for a comprehensive python bindings for the ESMF?\r\n\r\nArlindo\r\n",
  "labels": [
    "Language Interface"
  ],
  "assigned_to": "cdeluca",
  "assigned_to_id": "4f568833b9363c6a5a000769",
  "private": false,
  "summary": "PyESMF - Design of Python API to ESMF",
  "discussion_thread": {
    "_id": "b33ffb1f",
    "posts": [
      {
        "text": "- **labels**: 667262 --> Language Interface\n- **milestone**: 495011 --> \n- **summary**: PyESMF --> PyESMF - Design of Python API to ESMF",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-02-02 16:51:30",
        "slug": "9f6e",
        "subject": "#341 PyESMF - Design of Python API to ESMF"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-02-02 16:51:30",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31cb2718463761fc0d26",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/b33ffb1f/",
  "ticket_num": 341,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-01-18 18:45:48"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Li Yan from Climate Modelling and Global Change team, CERFACS\r\n\r\nHi Bob,\r\n\r\nIf we want to measure the elapsed time of producing a weight file, if there is a measure of the time included in ESMF and if we could turn it on?\r\n\r\n\r\np.s. last time, you and Peggy told us there are some concave cells in t799 grid. That's the reason. The t799.clo\\[:,:,:\\] with k=3 has wrong values; and after correcting, ESMF runs fluently. Thanks.\r\n\r\nbest regards,\r\nLi Yan\r\n\\----------\r\nClimate Modelling and Global Change team,\r\nCERFACS,\r\n42 Av. Coriolis 31057 Toulouse\r\nyan@cerfacs.fr",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": " time measure ",
  "discussion_thread": {
    "_id": "7244af37",
    "posts": [
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-01-24 17:13:45",
        "slug": "7056",
        "subject": "#342  time measure "
      },
      {
        "text": "Hi Bob,\r\n\r\nIt is not urgent to add the built timing for me. It works with uncommenting the existing calls. Thanks, Bob. I think you can close this ticket as well. :\\)\r\n\r\nbest,\r\nLi",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-01-25 20:02:10",
        "slug": "0594",
        "subject": "#342  time measure "
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-01-25 20:02:10",
        "slug": "9ebd",
        "subject": "#342  time measure "
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-01-25 20:02:10",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31cc2718463761fc0d32",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7244af37/",
  "ticket_num": 342,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-01-23 13:07:48"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Eric Hutton and Scott Peckham of CSDMS at CU\r\n\r\nThey would like the ability to regrid using a cloud of points as a source. This could be handled like something like nearest neighbor regridding \\(3103729\\). They suggest using inverse distance weighting. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Regridding with cloud of points as source (8) ",
  "discussion_thread": {
    "_id": "bbd8859d",
    "posts": [
      {
        "text": "- **summary**: Regridding with cloud of points as source --> LONG: Regridding with cloud of points as source (8) ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-01-28 00:09:28",
        "slug": "6df5",
        "subject": "#343 LONG: Regridding with cloud of points as source (8) "
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-01-28 00:09:28",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31cc2718463761fc0d49",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/bbd8859d/",
  "ticket_num": 343,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-01-28 00:08:48"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Valentine Anantharaj from ORNL/OLCF/NCCS\r\n\r\nWhile at the ORNL/OLCF Titan workshop I talked to Valentine. He was looking for a way to use the standard ESMF regression tests on a standard ESMF installation. E.g. he installs ESMF on jaguar into /sw and would like to run the regression tests on that installation, accessible through a module load command. I think that should be possible with a little bit of work in common.mk and a dedicated ESMF\\_ environment variable to turn on/off this mode.\r\n\r\n\\*gjt\\*",
  "labels": [
    "Build/Install"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Use regression testing on ESMF installation",
  "discussion_thread": {
    "_id": "e61454c8",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-02-06 22:31:34",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31cd2718463761fc0d56",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e61454c8/",
  "ticket_num": 344,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2012-02-06 22:31:34"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bill Sacks of CESM\r\n\r\nAdd the ability to write \\(and if necessary read\\) files in netcdf4 large file format.  ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "Add netcdf4 large file support to ESMF_RegridWeightGen",
  "discussion_thread": {
    "_id": "82eacbc9",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-02-10 17:34:38",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31cd2718463761fc0d5d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/82eacbc9/",
  "ticket_num": 345,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-02-10 17:34:38"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Li Yan from CERFACS\r\n\r\nHi, ESMF team,\r\n\r\nWhen I use different grids to do remapping by ESMF, sometimes the grid will contain degenerate or concave elements. \r\nHow could I efficiently find out these degenerate elements?\r\n\r\nThanks,\r\nLi Yan\r\n\\---------------------------------------------------------------------------------\r\nClimate Modelling and Global Change team,\r\nCERFACS, \r\n42 Av. Coriolis 31057 Toulouse \r\nyan@cerfacs.fr\r\n\\---------------------------------------------------------------------------------\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "efficient way to check degenerate elements",
  "discussion_thread": {
    "_id": "c0709810",
    "posts": [
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-02-16 16:57:54",
        "slug": "bdd4",
        "subject": "#346 efficient way to check degenerate elements"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-02-16 17:01:32",
        "slug": "247c",
        "subject": "#346 efficient way to check degenerate elements"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-02-16 17:01:32",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ce2718463761fc0d65",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c0709810/",
  "ticket_num": 346,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-02-14 18:13:12"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  Arlindo da Silva\r\n\r\nArlindo would like to have an adjoint for regrid operations.\r\n\r\n\r\n\r\nI would like to add a little more detail on adjoints.\r\n\r\nAdjoints have not been mentioned by anyone in a CRB meeting for years.\r\nCould you please be more specific about what you are envisioning?  Are\r\nthere specific operations you would like adjoints for?  How would they\r\nappear in the API?\r\nThere is so much indirection in ESMF I don't think it will work very\r\nwell with a TAF-style automatic adjoint generator.\r\n\r\nBecause we are only talking about the regridding operation, TAF may be overkill. Now, adjoints are only defined for a linear operation. If we have a non-linear regridding operation, than first we have to linearize it.  Let y be a loc stream, x a gridded field and h\\(.\\) a regrid operation, possibly non-linear,\r\ny = h\\(x\\)\r\nIf h\\(.\\) is non-linear than we can linearize it:\r\nh\\(x\\_0+dx\\) ~ h\\(x\\_0\\) + H . dx\r\nwhere H = \\{\\partial h \\over x\\}\\_\\{x=x\\_0\\}; the adjoint operator is simply the H'=transpose\\(H\\). From an API point-of-view, you have\r\ndy = H\\(dx;x\\_0\\)\r\nmeaning that when h\\(.\\) is non-linear you must specify a gridded linearization point x\\_0 to define H. Once the operator H is constructed, the operator H' can be built using standard \"recipes\". In summary, we need to implement these operations\r\ny = h\\(x\\)\r\ndy = H\\(dx;x\\)\r\ndx = H'\\(dy;x\\)\r\nThese operations are the building block of most data assimilation algorithms. The exception is \"ensemble methods\" that only require y=h\\(x\\).\r\nI would start with a simple linear interpolation to fix ideas. In this case, H\\(dx\\) = h\\(dx\\).\r\nDid I answer your question?\r\nArlindo",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Adjoint for regrid operation ",
  "discussion_thread": {
    "_id": "8b31062a",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-02-23 18:35:46",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31cf2718463761fc0d77",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/8b31062a/",
  "ticket_num": 347,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-02-23 18:35:46"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Brian Kauffman from NCAR\r\n\r\nBob,\r\n\r\nis there a nearest neighbor option for ESMF\\_RegridWeightGen, or if not, can one be added?  I guessing it would be easy to add.\r\n\r\nMaybe more than you need to know: this would be very useful to CESM as a first step in the process of making our runoff mapping files, which are different than typical mapping in that they don't try to preserve \\(all\\) the spatial patterns found on the source grids, and hence having more than one matrix element associating a source point to a destination point makes the problem more complicated \\(and expensive, in terms of memory and computations\\) than it needs to be.\r\n\r\nthanks,\r\n-Brian\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: ESMF_RegridWeightGen nearest neighbor option (5)",
  "discussion_thread": {
    "_id": "e5dbf9d6",
    "posts": [
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-03-08 16:35:51",
        "slug": "ebac",
        "subject": "#348 LONG: ESMF_RegridWeightGen nearest neighbor option (5)"
      },
      {
        "text": "- **milestone**:  --> Add Code Capability\n- **summary**: ESMF_RegridWeightGen nearest neighbor option? --> LONG: ESMF_RegridWeightGen nearest neighbor option (5)",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-03-08 16:38:04",
        "slug": "813d",
        "subject": "#348 LONG: ESMF_RegridWeightGen nearest neighbor option (5)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-03-08 16:38:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31cf2718463761fc0d7f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e5dbf9d6/",
  "ticket_num": 348,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-03-01 19:37:37"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Peggy Li, JPL and Tim Campbell, NRL\r\n\r\nPeggy and Tim both would like to see support for dynamic masking of srcArray elements during ASMM execution. There are several options for the user API to this feature, and there are also a few possible behaviors that could be supported. Some of the details are discussed on the email traffic. Options include also renormalization for conservation that Peggy suggested.\r\n\r\nImplementation of this feature requires rework of some of the ASMM implementation code, down inside of XXE.\r\n\r\n\\*gjt\\*",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "LONG: missing value option for srcArray in ASMM (4)",
  "discussion_thread": {
    "_id": "ddba1e1f",
    "posts": [
      {
        "text": "see also similar \\#3531936\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-06-21 16:14:02",
        "slug": "704e",
        "subject": "#349 LONG: missing value option for srcArray in ASMM (4)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-03-05 17:56:32",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d02718463761fc0d91",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/ddba1e1f/",
  "ticket_num": 349,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-03-05 17:56:32"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Tony Craig, Mariana V. from CESM\r\n\r\nOutput some basic diagnostics from ESMF\\_RegridWeightGen. At least min,max weight. Could also do the maximum sum of weights for a given destination cell, etc. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Add diagnostics from ESMF_RegridWeightGen",
  "discussion_thread": {
    "_id": "c2623c26",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-03-06 21:01:32",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d12718463761fc0d9d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c2623c26/",
  "ticket_num": 350,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-03-06 21:01:32"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Dan Kokron from the Global Modeling and Assimilation Office, Code 610.1 NASA Goddard Space Flight Center\r\n\r\nI am playing with the masking feature of ESMF regridding in\r\nesmf-5.2.0.rp1.  My input and output grids are global and regular\r\nLatLon.  My source field is sea-ice fraction with values in the range\r\n\\[0-1\\] over oceans, and missing\\_value -9999.f over land.\r\n\r\nI am setting the srcGrid ESMF\\_GRIDITEM\\_MASK to 0 where the source field\r\nis -9999.f and passing srcMaskValues = \\(/0/\\) to ESMF\\_FieldRegridStore.\r\n\r\ncall ESMF\\_GridAddItem\\(srcgrid, staggerloc=ESMF\\_STAGGERLOC\\_CENTER, &\r\nitemflag=ESMF\\_GRIDITEM\\_MASK, rc=rc\\)\r\ncall ESMF\\_GridGetItem\\(srcgrid, localDE=0,staggerLoc=ESMF\\_STAGGERLOC\\_CENTER, &\r\nitemflag=ESMF\\_GRIDITEM\\_MASK, farrayPtr=maskSrc, rc=rc\\)\r\nmaskSrc=1\r\ndo j=lb2\\(2\\),ub2\\(2\\)\r\ndo i=lb2\\(1\\),ub2\\(1\\)\r\nif\\(f90ptr1\\(i,j\\) == mask\\_val\\) maskSrc\\(i,j\\)=0\r\nenddo\r\nenddo\r\n\r\nI am not setting ESMF\\_GRIDITEM\\_MASK in the dstGrid or passing\r\ndstMaskValues to ESMF\\_FieldRegridStore\r\n\r\nI had to set unmappedAction = ESMF\\_UNMAPPEDACTION\\_IGNORE to get the code\r\nto run\r\n\r\nThe resulting destination field has values in the range \\[0-1\\]\r\neverywhere.\r\n\r\nIs this the expected result?\r\nIs there a way to mask out the land in the destination field without\r\nfirst regridding the srcMask?\r\n\r\n\\-- \r\nDan Kokron\r\nGlobal Modeling and Assimilation Office, Code 610.1\r\nNASA Goddard Space Flight Center\r\nGreenbelt, MD 20771 USA\r\nDaniel.S.Kokron@nasa.gov\r\nPhone: \\(301\\) 614-5192\r\nFax:   \\(301\\) 614-5304\r\n\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Exclude weights for the partially covered dest grid cells.",
  "discussion_thread": {
    "_id": "0b5fb330",
    "posts": [
      {
        "text": "Please close this ticket.\r\n\r\nOn Fri, 2012-03-23 at 16:23 -0500, Robert Oehmke wrote:\r\nHi Dan,\r\n\r\nGreat\\! I'm glad that'll do what you need. May I close this ticket? \r\n\r\nThanks,\r\n\r\n\\- Bob\r\n",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-03-23 22:33:24",
        "slug": "8674",
        "subject": "#351 Exclude weights for the partially covered dest grid cells."
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-03-23 22:33:24",
        "slug": "80f1",
        "subject": "#351 Exclude weights for the partially covered dest grid cells."
      },
      {
        "text": "- **status**: closed --> open",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2012-04-02 21:56:08",
        "slug": "30f2",
        "subject": "#351 Exclude weights for the partially covered dest grid cells."
      },
      {
        "text": "Dan sent an follow-up email on 4/2:\r\n\r\n'd like to reopen this ticket.\r\n\r\nAttached is a graphic to help illustrate what I am seeing when\r\nregridding a 576x351 global LatLon field to a global 360x180 using the\r\nconservative option.  The green grid lines with green values are the\r\ninput cells.  The red grid lines with red values are the output cells.\r\nThe solid red color indicates the non-masked input region while the\r\nsolid black indicates the masked input region.\r\n\r\nI am using ESMF\\_REGION\\_SELECT and initializing the output memory to the\r\ninput mask value \\(-9999.\\).  The input field is sea surface temperature\r\nin degrees Kelvin.\r\n\r\nIt appears that if any part of a non-masked input cell overlaps any part\r\nof an output cell, the output cell will contain a non-mask value.  I\r\ndraw your attention to the cell centered at 177.5E by 78.5S with a red\r\nvalue of 13.1310.\r\n\r\nIs there a way to ensure that output cells that overlap ANY masked area\r\nget excluded from the computation?\r\n\r\nDan\r\n\\----------\r\nPeggy suggested him to exclude the partially covered destination grid cell by checking the fraction returned by the conservative regridstore call.   He was able to achieve what he wants to do by using this extra post-processing step.  But, he also suggested that if he use the fraction field to create the destination mask and run ESMF\\_FieldRegridStore\\(\\) again, the resulting weights will not include the weights for the partially covered grid cells.  \r\n\r\nTherefore, it sounds reasonable to add an option to the ESMF\\_FieldRegridStore\\(\\) to exclude the weights for the grid that is partially covered by the source grid \\(fraction &lt; 1\\).  As a result, we will turn this ticket into a feature request.",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2012-04-04 16:42:14",
        "slug": "0bbf",
        "subject": "#351 Exclude weights for the partially covered dest grid cells."
      },
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 155253 --> \n- **summary**: regrid with masking --> Exclude weights for the partially covered dest grid cells.",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2012-04-04 16:42:14",
        "slug": "899a",
        "subject": "#351 Exclude weights for the partially covered dest grid cells."
      },
      {
        "text": "A masking figure mentioned in Dan's email",
        "attachments": [
          {
            "url": "http://sourceforge.net/p/esmf/feature-requests/_discuss/thread/0b5fb330/50e8/attachment/masking.png",
            "bytes": 8111
          }
        ],
        "author": "peggyli",
        "timestamp": "2012-04-04 16:43:55",
        "slug": "50e8",
        "subject": "#351 Exclude weights for the partially covered dest grid cells."
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-04-04 16:42:14",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d12718463761fc0da5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0b5fb330/",
  "ticket_num": 351,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-03-22 17:18:58"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Dan Kokron from NASA\r\n\r\nWhat is the status/plans for creating the adjoint of the conservative\r\nregridding feature?\r\n\r\nDan",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "adjoint of regridding",
  "discussion_thread": {
    "_id": "fe26fa99",
    "posts": [
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-04-12 15:44:06",
        "slug": "aad5",
        "subject": "#352 adjoint of regridding"
      },
      {
        "text": "Also see feature request 3492279",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-04-12 15:46:51",
        "slug": "fd3f",
        "subject": "#352 adjoint of regridding"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-04-12 15:44:06",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d22718463761fc0dd4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/fe26fa99/",
  "ticket_num": 352,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-04-04 20:01:11"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: Alex Pletzer from TechX\r\n\r\nThey want the ability to get a Field that holds the masked values of a Field built on a Grid or Mesh.  ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Get mask Field from a Field built on Grid or Mesh",
  "discussion_thread": {
    "_id": "d39956f8",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-05-09 20:59:38",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d32718463761fc0de6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d39956f8/",
  "ticket_num": 353,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-05-09 20:59:38"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Dave Kindig from Tech X Corp.\r\n\r\nRyan,\r\nI think there is a bug at lines 306-309 ESMP\\_API.py. Doing a-b creates negative grid.sizecenter. I think it should be b-a.\r\nI am trying to create a simple 3D example for uv-cdat. But it keeps failing with:\r\n\r\nTraceback \\(most recent call last\\):\r\nFile \"testESMP\\_3D\\_Bilinear.py\", line 37, in test\\_4x3x2\\_esmf\r\nesmf.EsmfStructGrid\\(srcGrid, self.theVolume\\)\r\nFile \"/home/research/kindig/projects/cdat/install/lib/python2.7/site-packages/regrid2/esmf.py\", line 101, in \\_\\_init\\_\\_\r\nptr = ESMP.ESMP\\_GridGetCoordPtr\\(grid.grid, i+1, staggerloc\\)\r\nFile \"/home/research/kindig/projects/cdat/install/lib/python2.7/site-packages/ESMP/src/ESMP\\_API.py\", line 384, in ESMP\\_GridGetCoordPtr\r\n\\_NP.dtype\\(\\_NP.float64\\).itemsize\\*size\\)\r\nValueError: size must be zero or positive\r\n\r\nI back traced to ESMP\\_GridCreateNoPeriDimwhere grid.sizecenter\\(corner\\) are set in  lines:242, 243.\r\n\r\nBut in GridAddCoord you are recalculating them \\(lines 306-309\\): But the sign is negative \\(a-b\\) instead of \\(b-a\\) and while it is working for 2D for reasons which I don't understand, 3D is failing. Is it  possible to just eliminate those lines?\r\n\r\nif staggerloc == ESMP\\_STAGGERLOC\\_CENTER:\r\ngrid.sizecenter = reduce\\(mul, \\[a-b for a, b in zip\\(lbound,ubound\\)\\]\\)\r\nelif staggerloc == ESMP\\_STAGGERLOC\\_CORNER:\r\ngrid.sizecorner = reduce\\(mul, \\[a-b for a, b in zip\\(lbound,ubound\\)\\]\\)\r\n\r\nBy eliminating those lines, I have run successfully.\r\n\r\nCiao,\r\nDave\r\n\r\n\r\nDave Kindig\r\nResearch Assistant - TechX Corp \\(www.txcorp.com\\)\r\n303-444-2386\r\n",
  "labels": [],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "ESMP: 3D Grids",
  "discussion_thread": {
    "_id": "a5e5b2be",
    "posts": [
      {
        "text": "- **labels**: 3112089 --> \n- **milestone**: 356870 --> \n- **summary**: bug in ESMF_GridAddCoord --> ESMP: 3D Grids",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2012-06-21 16:27:13",
        "slug": "3a26",
        "subject": "#354 ESMP: 3D Grids"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-06-21 16:27:13",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d42718463761fc0dee",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a5e5b2be/",
  "ticket_num": 354,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-05-18 16:36:21"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Mark Taylor from Sandia National Labs.\r\n\r\nHi Bob,\r\n\r\nI\u2019m back with yet another ESMF regridding issue.  The details are below.  I was wondering if could take a look at this?\r\n\r\nChristoph Erath \\(CC\u2019d above\\) is testing new tracer advection scheme based on CSLAM, which has tracers on cell centers \\(instead of verticies\\), This makes for much nicer grid template files.  \\(plot attached\\).\r\n\r\nWhen mapping from this new grid to a equi-angle lat/lon grid, the conservative mapping algorithm runs fine,\r\nBut the bilinear and patch based options crash::\r\n\r\nOn bluefire: \r\n/contrib/esmf-5.2.0rp1-64-O-mpiuni-netcdf4.1.3/bin/ESMF\\_RegridWeightGen\r\nTo map between:\r\n/ptmp/taylorm/grids/ne15nc4\\_scrip.nc\r\nand a traditional lat/lon grid:\r\n/ptmp/taylorm/grids/lat\\_lon\\_901x1800\\_SCRIP.nc\r\n\r\nI get this error:\r\n\r\n20120522 153939.864 INFO     PET0 Running with ESMF Version 5.2.0rp1\r\n20120522 153940.252 ERROR    PET0 ESMCI\\_Mesh\\_F.C:1581 c\\_esmc\\_meshdeserialize\\(\\) Arguments are incompatible  - can't triangulate a polygon with less than 3 sides\r\n20120522 153940.252 ERROR    PET0 ESMF\\_Mesh.F90:1419 ESMF\\_MeshCreateFromUnstruct\\(\\) Arguments are incompatible - Internal subroutine call returned Error\r\n20120522 153940.252 ERROR    PET0 ESMF\\_Mesh.F90:1549 ESMF\\_MeshCreateFromScrip\\(\\) Arguments are incompatible - Internal subroutine call returned Error\r\n20120522 153940.252 ERROR    PET0 ESMF\\_Mesh.F90:1071 ESMF\\_MeshCreateFromFile\\(\\) Arguments are incompatible - Internal subroutine call returned Error\r\n\r\nI also tried 5.3.0 and got a similar error:  \u201cA cell with less than 3 edges were found\u201d\r\n\r\nThanks,\r\nMark\r\n\r\n\r\n\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\r\nEsmf\\_support mailing list\r\nEsmf\\_support@list.woc.noaa.gov\r\nhttps://list.woc.noaa.gov/cgi-bin/mailman/listinfo/esmf\\_support",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "need tolerance for unstruct SCRIP grid for nonconserv regrid",
  "discussion_thread": {
    "_id": "c6468ad3",
    "posts": [
      {
        "text": "We will add a command line argument \\(something like nonconservativeSCRIPtolerance\\) in the ESMF\\_RegridWeightGen to allow users to input a small tolerance to be used to determine whether the corner vertices are identical or not.",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2012-06-21 16:25:52",
        "slug": "20c3",
        "subject": "#355 need tolerance for unstruct SCRIP grid for nonconserv regrid"
      },
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2012-06-21 16:25:52",
        "slug": "6775",
        "subject": "#355 need tolerance for unstruct SCRIP grid for nonconserv regrid"
      },
      {
        "text": "- **summary**: cell centered grid mapping problem --> need tolerance for unstruct SCRIP grid for nonconserv regrid",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2012-06-21 16:28:49",
        "slug": "77da",
        "subject": "#355 need tolerance for unstruct SCRIP grid for nonconserv regrid"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-06-21 16:28:49",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d52718463761fc0dfb",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c6468ad3/",
  "ticket_num": 355,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-05-25 19:38:08"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "Who: Balaji from GFDL\r\nWhen exchanging flux from nested Grids to the other side of the exchange grid, the area covered by the finer resolution interior Grid \\(A1\\) needs to be excluded from the lower resolution exterior Grid \\(A2\\). Therefore, a spatial operator that can subtract the A1 from A2 is useful to compute the exchange Grid at the flux exchange boundary layer. \r\n\r\nIf both A1 and A2 are logically rectilinear and if the cell edges align perfectly, the difference between A1 and A2 can be calculated by masking the surface area covered in A1 from A2. If A1 and A2 overlap, then a spatial operator that calculates the Grid/Mesh difference between A1 and A2 is needed. The XGrid class implementation already provides this functionality. Need additional APIs to bring this function to the user to enable XGrid creation from nested Grids.",
  "labels": [
    "XGrid"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "Mesh difference operator in Exchange Grid (2)",
  "discussion_thread": {
    "_id": "a76d2843",
    "posts": [
      {
        "text": "- **labels**: 1213637 --> XGrid\n- **summary**: Mesh difference operator in Exchange Grid --> Mesh difference operator in Exchange Grid (2)",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2012-05-29 18:32:09",
        "slug": "4037",
        "subject": "#356 Mesh difference operator in Exchange Grid (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-05-29 18:32:09",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d62718463761fc0e12",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a76d2843/",
  "ticket_num": 356,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-05-29 18:16:55"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "Who: Balaji from GFDL\r\n\r\nAs an example, land grid cells can contain multiple vegetation types, the fraction of each vegetation type is attached to each land cell as tiled data points. These vegetation type fractions can be regarded as a flux density type of function. When performing flux exchange, these fractions are also remapped from land Grid to exchange Grid. In order to save memory and computing time, when a land cell has no vegetation tile data associated with it, the land cell are compacted or ignored for flux exchange purpose. The land title also changes dynamically during model run time, thus the optimization also needs to be done dynamically.\r\n\r\nIn the context of ESMF Exchange Grid, land cell without vegetation data can be masked out. XGrid will need to be generated dynamically to optimize the flux calculation.",
  "labels": [
    "XGrid"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "Dynamic tile optimization with Exchange Grid (2)",
  "discussion_thread": {
    "_id": "2877bc96",
    "posts": [
      {
        "text": "- **summary**: Dynamic tile optimization with Exchange Grid --> Dynamic tile optimization with Exchange Grid (2)",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2012-05-29 18:33:26",
        "slug": "9827",
        "subject": "#357 Dynamic tile optimization with Exchange Grid (2)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-05-29 18:33:26",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d72718463761fc0e1f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/2877bc96/",
  "ticket_num": 357,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-05-29 18:27:45"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "Who: Balaji from GFDL\r\n\r\nWhen computing an XGrid and the weights/indices internally, allow user supplied area for renormalization. This reduces the error caused by inconsistency between user supplied area and internally computed area in XGrid. This is similar to direct regridding between one pair of Grids.",
  "labels": [
    "XGrid"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "User supplied area renormalization when creating XGrid (1)",
  "discussion_thread": {
    "_id": "d759eede",
    "posts": [
      {
        "text": "- **summary**: User supplied area renormalization when creating XGrid --> User supplied area renormalization when creating XGrid (1)",
        "attachments": [],
        "author": "feiliu",
        "timestamp": "2012-05-29 18:32:56",
        "slug": "c77f",
        "subject": "#358 User supplied area renormalization when creating XGrid (1)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-05-29 18:32:56",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d72718463761fc0e2c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d759eede/",
  "ticket_num": 358,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-05-29 18:31:39"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "Who: Balaji from GFDL\r\n\r\nGFDL's flux exchange calculation is 2nd order conservative, this means that the destination point flux density interpolation is truncated at the 2nd order derivative terms. ESMF XGrid needs to provide same 2nd order accuracy for scientific research purpose in GFDL models. It's important to avoid overshooting result due to sharp gradient at destination point. ",
  "labels": [
    "XGrid"
  ],
  "assigned_to": "feiliu",
  "assigned_to_id": "4fec892e1be1ce74e0000017",
  "private": false,
  "summary": "2nd order flux conservation in XGrid (3)",
  "discussion_thread": {
    "_id": "81e3d6fd",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-05-29 18:37:58",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d82718463761fc0e39",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/81e3d6fd/",
  "ticket_num": 359,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-05-29 18:37:58"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Dave Kindig from Tech X corp.\r\n\r\nRyan, Does ESMF have a missing value argument? That is, instead of \r\nlooking at a mask, does ESMF treat missing values differently that \r\nmasked values?\r\n\r\n\\-- \r\nCiao,\r\nDave",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "missing values",
  "discussion_thread": {
    "_id": "9889b401",
    "posts": [
      {
        "text": "- **assigned_to**: rokuingh --> oehmke",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-06-14 15:55:33",
        "slug": "4c57",
        "subject": "#360 missing values"
      },
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-06-21 16:11:51",
        "slug": "c331",
        "subject": "#360 missing values"
      },
      {
        "text": "See feature request 3497087",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-06-21 16:12:29",
        "slug": "dff8",
        "subject": "#360 missing values"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-06-21 16:11:51",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d82718463761fc0e41",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/9889b401/",
  "ticket_num": 360,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-06-04 15:37:32"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Daniel Kokron from NASA Ames \r\n\r\nCan you point me to an example that uses ESMF halo operations from within an C++ application?\r\n\r\nDaniel Kokron\r\nNASA Ames \\(ARC-TN\\)\r\nSciCon group\r\n301-286-3959",
  "labels": [
    "Field"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "HALO for C++ user app",
  "discussion_thread": {
    "_id": "f24aa21a",
    "posts": [
      {
        "text": "- **labels**: 643199 --> 667262",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2012-06-20 15:33:33",
        "slug": "4a50",
        "subject": "#361 HALO for C++ user app"
      },
      {
        "text": "- **milestone**:  --> 495011",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2012-06-20 15:34:05",
        "slug": "e07b",
        "subject": "#361 HALO for C++ user app"
      },
      {
        "text": "- **assigned_to**: oehmke --> theurich",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-06-20 17:23:17",
        "slug": "2316",
        "subject": "#361 HALO for C++ user app"
      },
      {
        "text": "- **labels**: 667262 --> Field\n- **milestone**: 495011 --> \n- **summary**: interoperability with C++ --> HALO for C++ user app",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-06-21 15:57:39",
        "slug": "8d2f",
        "subject": "#361 HALO for C++ user app"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-06-21 15:57:39",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31d92718463761fc0e58",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f24aa21a/",
  "ticket_num": 361,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-06-20 15:32:21"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Alexander Pletzer from TechX Corp.\r\n\r\nHi Ryan,\r\n\r\nFrom our discussion last week I was under the impression that the regridder will not fill in any value for any masked cell. However, the unit test below shows that the top/right and bottom left cell values are set to zero \\(should be -100\\).\r\n\r\nIs this the expected behavior?\r\n\r\n\r\nAlso, when I change\r\n\r\ncoordSys = ESMP.ESMP\\_COORDSYS\\_SPH\\_DEG\r\n\r\nthen I get:\r\n\r\n\r\n\\[14:27\\]\\[pletzer@idefix:~/modave/cdat\\_tests\\]$ python t.py\r\n\r\nE\r\n======================================================================\r\nERROR: test0b\\_ESMP\\_conserve \\(\\_\\_main\\_\\_.Test\\)\r\n\\----------------------------------------------------------------------\r\nTraceback \\(most recent call last\\):\r\nFile \"t.py\", line 122, in test0b\\_ESMP\\_conserve\r\nunmappedaction = ESMP.ESMP\\_UNMAPPEDACTION\\_IGNORE\\)\r\nFile \"/home/pletzer/uvcdat/cdat/install/lib/python2.7/site-packages/ESMP/src/ESMP\\_API.py\", line 1105, in ESMP\\_FieldRegridStore\r\nraise NameError\\('ESMC\\_FieldRegridStore\\(\\) failed with rc = '+str\\(rc\\)\\)\r\nNameError: ESMC\\_FieldRegridStore\\(\\) failed with rc = 506\r\n\r\n\\----------------------------------------------------------------------\r\nRan 1 test in 0.014s\r\n\r\n\r\n\\--Alex\r\n\r\n\r\n",
  "labels": [],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "ESMP: regridding overwrites masked values with zeros",
  "discussion_thread": {
    "_id": "0f65a580",
    "posts": [
      {
        "text": "- **labels**: 3112089 --> \n- **milestone**: 356870 --> \n- **summary**: conservative regridding overwrites masked values with zeros --> ESMP: regridding overwrites masked values with zeros",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2012-06-21 15:51:16",
        "slug": "2d4b",
        "subject": "#362 ESMP: regridding overwrites masked values with zeros"
      },
      {
        "text": "Closed on 07/10/2012 due to user request.",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2012-07-10 16:07:18",
        "slug": "15c2",
        "subject": "#362 ESMP: regridding overwrites masked values with zeros"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2012-07-10 16:07:18",
        "slug": "08b2",
        "subject": "#362 ESMP: regridding overwrites masked values with zeros"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-07-10 16:07:18",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31da2718463761fc0e74",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0f65a580/",
  "ticket_num": 362,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-06-20 15:39:38"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tim Tautges from the Argonne National Laboratory\r\n\r\n\r\nOk, Cecelia and I found each other \\(thanks Dennis\\!\\) and agreed to exchange some questions first, with the possibility of meeting tomorrow morning sometime too if possible.  A few of my specific questions are:\r\n\r\n\\- do you represent grids as 2d faces plus 1d variables on those faces/vertices for the vertical dimension, or do you represent a full 3d grid?  Or, do you do different things depending on the grid type?\r\n\r\n\\- for locating one mesh in another, do you do that in 2d on the 2d faces, or fully 3d?\r\n\r\nSome of the other questions I have depend on the answers to those, so I'll stop there.\r\n\r\nFor a \\(really\\) brief description of the basic method I'm using, it's described in http://www.mcs.anl.gov/~tautges/downloads/scalablecoupling2.pdf, though we've come a lot farther in terms of scalability since what's described there.\r\n\r\n\\- tim\r\n\r\n\r\n\r\nOn 06/20/2012 11:05 AM, Tautges wrote:\r\nThanks Dennis, I got a phone call but didnt recognize the number and I'm in the sewg session \\(Cecelia I think youre here\r\ntoo\\). I suggest we get together for lunch or during a long break. Maybe we can huddle during the 10:35 break to decide?\r\n\r\n\r\n\\- tim\r\n\r\n\\(Sent from an Androd that dosnt autocorect as wel as an ipone\\)\r\n\r\n\r\n\\-------- Original message --------\r\nSubject: Fwd: moab discussion\r\nFrom: Dennis Shea &lt;shea@ucar.edu&gt;\r\nTo: Tim Tautges &lt;tautges@mcs.anl.gov&gt;\r\nCC: Robert Jacob &lt;jacob@mcs.anl.gov&gt;\r\n\r\n\r\nTim, FYI ...\r\n\r\nCecelia is attending the same session u r right now.\r\nHopefully Bob is here in Breck today.\r\n\r\nD\r\n\r\n\\-------- Original Message --------\r\nSubject: moab discussion\r\nDate: Wed, 20 Jun 2012 09:41:52 -0600\r\nFrom: Cecelia DeLuca &lt;cecelia.deluca@noaa.gov&gt;\r\nTo: Robert Oehmke &lt;Robert.Oehmke@noaa.gov&gt;\r\nCC: ESMF Support &lt;esmf\\_support@list.woc.noaa.gov&gt;, Dennis Shea\r\n&lt;shea@ucar.edu&gt;\r\n\r\nHi Bob,\r\n\r\nDennis Shea just found me at Breck and said one of the MOAB developers\r\nwants to talk to you. He is Tim Taucges. His number is 608-354-1459.\r\nI think we probably want some other people to participate too.\r\n\r\nSo we have it, Dennis's number is 608-354-1459.\r\n\r\nCecelia\r\n\r\n\\--\r\n===================================================================\r\nCecelia DeLuca\r\nNESII/CIRES/NOAA Earth System Research Laboratory\r\n325 Broadway, Boulder 80305-337\r\nEmail: cecelia.deluca@noaa.gov\r\nPhone: 303-497-3604\r\n\r\n\r\n\\-- \r\n================================================================\r\n\"You will keep in perfect peace him whose mind is\r\nsteadfast, because he trusts in you.\"               Isaiah 26:3\r\n\r\nTim Tautges            Argonne National Laboratory\r\n\\(tautges@mcs.anl.gov\\)      \\(telecommuting from UW-Madison\\)\r\nphone \\(gvoice\\): \\(608\\) 354-1459      1500 Engineering Dr.\r\nfax: \\(608\\) 263-4499      Madison, WI 53706\r\n\r\n",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "moab discussion",
  "discussion_thread": {
    "_id": "76c84a2f",
    "posts": [
      {
        "text": "- **labels**: 1019236 --> Grid - New\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-09-27 16:25:32",
        "slug": "57a9",
        "subject": "#363 moab discussion"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-09-27 16:25:32",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31db2718463761fc0e8b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/76c84a2f/",
  "ticket_num": 363,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-06-20 19:52:46"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "Who: Balaji from GFDL\r\n\r\nTalking with Balaji from GFDL, he indicated that GFDL exchange grid can operate in a mode that BFB reproducing is guaranteed. To support this, the ESMF SMM execution engine need to support dst base routing.\r\n\r\nSee ticket \\#2903248 for relevant discussion on this topic.",
  "labels": [
    "Array - New"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "BFB requirement in Exchange Grid",
  "discussion_thread": {
    "_id": "7848cc72",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-06-28 16:02:09",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31dc2718463761fc0e98",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/7848cc72/",
  "ticket_num": 364,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-06-28 16:02:09"
},{
  "status": "open",
  "reported_by_id": "5048c2deb9363c1e4f0e247b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "peggyli",
  "description": "It will be useful to generate a dual mesh object out of an ESMF\\_Mesh object to support non-conservative regridding.  With this new feature, we can do the dual mesh generation in parallel and we can expand ESMF\\_RegridWeightGen to support the bilinear and patch interpolation for the unstructured grids in UGRID format.",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "Generate dual ESMF_Mesh object",
  "discussion_thread": {
    "_id": "a57e9595",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-07-11 17:30:05",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31dc2718463761fc0e9f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/a57e9595/",
  "ticket_num": 365,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-07-11 17:30:05"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "Who: Fei Liu from ESMF\r\n\r\nWhile working on a XGrid system test, I need to use nested states to encapsulate flux fields from multiple components that runs concurrently. The problem involves nested state usage, state reconcile, and concurrency. We need to come up with a design solution to solve this problem.\r\n",
  "labels": [
    "State"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Reconcile nested state in a concurrent multi-component model",
  "discussion_thread": {
    "_id": "e04807c1",
    "posts": [
      {
        "text": "Moving to Feature Requests per 8/9/12 ticket meeting.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2012-08-09 16:16:13",
        "slug": "0a31",
        "subject": "#366 Reconcile nested state in a concurrent multi-component model"
      },
      {
        "text": "- **labels**: 588651 --> State\n- **milestone**: 155253 --> \n- **summary**: Nested state in a concurrent multi-component model --> Reconcile nested state in a concurrent multi-component model",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2012-08-09 16:16:43",
        "slug": "e626",
        "subject": "#366 Reconcile nested state in a concurrent multi-component model"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-08-09 16:16:43",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31dd2718463761fc0ea7",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e04807c1/",
  "ticket_num": 366,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-07-19 20:59:17"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Mary Haley from NCAR\r\n\r\n\r\n\r\nGood morning,\r\n\r\nKate Hedstrom, an NCL user, was trying to use the NCL ESMF regridding software on \"curtain\" data. Here's her email:\r\n\r\n\r\n\\-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nHi all,\r\n\r\nWe are trying to redo some mapping software to use ESMF within NCL. The mapping of a global grid to a regional grid worked,\r\nbut the mapping of a global grid to a \"curtain\" at the edge of the regional   grid failed. Turning on verbose mode, it tells me to\r\nlook in a PET0 file containing things like:\r\n\r\n20120719 141701.465 ERROR    PET0 ESMF\\_FieldRegrid.F90:1522 ESMF\\_FieldRegridGetI\r\nwts Invalid argument - - can't currently regrid a grid that contains a DE of width less than 2\r\n20120719 141701.465 ERROR    PET0 ESMF\\_FieldRegrid.F90:727 ESMF\\_FieldRegridStore\r\nNX Invalid argument - Internal subroutine call returned Error\r\n\r\nIs it true that mapping to a curtain is not supported? How about to a point? Will this be supported in future?\r\n\r\nKate\r\n\r\n\\-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nIs this something that ESMF supports?  I've asked Kate \\(CC'ed here\\) if she can provide her scripts and data,  but I \r\nwanted to see if there was any insight on this.\r\n\r\nThanks,\r\n\r\n\\--Mary\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "question about point and \"curtain\" data",
  "discussion_thread": {
    "_id": "bb173f3a",
    "posts": [
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-09-27 16:23:04",
        "slug": "d0bd",
        "subject": "#367 question about point and \"curtain\" data"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-09-27 16:23:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31dd2718463761fc0eb9",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/bb173f3a/",
  "ticket_num": 367,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-07-20 15:39:53"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Jim Boyle from the Lawrence Livermore National Laboratory\r\n\r\nI have a SCRIP grid descriptor file that I obtained from Mark Taylor at Los Alamos.\r\nIt describes a regionally refined unstructured grid \\( CAM SE\\). \r\nThe ESMF\\_RegridWeightGen fails on this file. It errors out claiming that some of the cells have less than 3 sides.\r\n\r\nMark says that this is a problem of precision, that in generating the file some of the edges do not match to machine precision but are in fact equal.\r\nMark says that this was addressed by adding a precision tolerance option to the ESMF\\_RegridWeightGen utility.\r\n\r\nI downloaded and built the CVS head esmf \\(5.3.1 beta \\) yesterday but this option was not yet in this code.\r\n\r\nMy question is this - Is such an option being considered? If so when might is show up in the head?\r\n\r\nThanks for any information.\r\n\r\n\\--Jim Boyle",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "Support concave cells in non-conserv remapping ",
  "discussion_thread": {
    "_id": "45229c20",
    "posts": [
      {
        "text": "8/2/2012:  It turns out that Jim's grid is different from Mark Taylor's grid.  See the description below in an email to Jim on 7/28.  We change this ticket into a support request.\r\n\\--------------------------------------\r\nJim, your grid does not have the precision problem.  It has a different\r\nproblem.  You have some concave cells where the vertices at the concave\r\nedges are shared only by two cells.  In the attached plot, it shows the\r\nfirst 10 cells in your grid. The two black dots are the vertices only\r\nshared by two cells.\r\n\r\nWhen we do a regrid using the non-conservative interpolation \\(bilinear or\r\npatch\\),  a \"dual\" mesh was generated by creating a cell for each corner\r\nvertex.  To do that, I first find all the cells that share a given vertex,\r\nthen I use the center coordinates of those cells to form a new cell for\r\nthis shared corner vertex.  In your case, the vertex between cell \\#1 and\r\n\\#2 is shared only by two cells, thus the new \"dual\" cell has only two\r\ncorner vertices and is degenerated.\r\n\r\nIn general, ESMF does not handle concave cells.  The reason that your grid\r\nworks in the conservative remapping is because that your concave cells\r\nhave more than 4 edges.  Since we only support triangles and quads for a\r\n2D mesh, we actually break your cells into triangles internally.  Thus,\r\nthe concave cell problem no longer exist in the ESMF representation.\r\nHowever, it breaks the code that generates a dual mesh from the original\r\nmesh.  \r\n\r\nI don't have a quick solution to your problem at this point.  I have to\r\ndiscuss this with Bob and see what is the best way to support this kind of\r\nmesh.  \r\n\r\nI will get back to you with more updates....\r\n\r\nPeggy\r\n\\---------------------",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2012-08-02 15:57:45",
        "slug": "ff4d",
        "subject": "#368 Support concave cells in non-conserv remapping "
      },
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> \n- **summary**: ESMF_RegridWeightGen tolerance option? --> Support concave cells in non-conserv remapping ",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2012-08-02 15:57:45",
        "slug": "b6c7",
        "subject": "#368 Support concave cells in non-conserv remapping "
      },
      {
        "text": "Bob suggested a solution to ignore the corner vertices that have less than 3 edges when generating the dual mesh from the original grid.  A fix was put in and it worked with Jim's grid.  A snapshot  ESMF\\_5\\_3\\_1\\_beta\\_snapshot\\_17 was made on 8/8/2012.  Jim Boyle tested it the new code and it worked.\r\n\r\nThe ticket is closed.\r\n",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2012-08-09 16:31:35",
        "slug": "1c09",
        "subject": "#368 Support concave cells in non-conserv remapping "
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2012-08-09 16:31:35",
        "slug": "e21e",
        "subject": "#368 Support concave cells in non-conserv remapping "
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-08-09 16:31:35",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31de2718463761fc0ec6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/45229c20/",
  "ticket_num": 368,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-07-20 16:24:58"
},{
  "status": "open",
  "reported_by_id": "5048c2deb9363c1e4f0e247b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "peggyli",
  "description": "It will be nice to provide an utility program to convert an unstructured SCRIP grid file to UGRID format and encourage the SCRIP users \\(e.g. Mark Taylor\\) to switch to UGRID format.",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "peggyli",
  "assigned_to_id": "5048c2deb9363c1e4f0e247b",
  "private": false,
  "summary": "Convert SCRIP unstruct grid to UGRID",
  "discussion_thread": {
    "_id": "be3d68ea",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-07-25 17:37:11",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31df2718463761fc0ee2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/be3d68ea/",
  "ticket_num": 369,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-07-25 17:37:11"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Arlindo da Silva from NASA\r\n\r\n\r\nGerhard, Cecelia:\r\n\r\nI am about to write a parser for ESMF states \\(based on some other parser I have\\), and I'd like to make sure I am not re-inventing the wheel. The use case is very simple,\r\n\r\ntype\\(ESMF\\_Field\\)  :: fResult\r\ntype\\(ESMF\\_State\\) :: sNamespace\r\ncharacter\\(len=ESMF\\_STRLEN\\) :: expression\r\n\r\nfResult = MAPL\\_StateEval\\(sNamespace, expression, rc\\)\r\n\r\nwhere \"s\\_namespace\" is a previously populated ESMF state. For example,\r\n\r\nspeed = MAPL\\_StateEval\\(sNamespace, 'sqrt\\(u\\*\\*2 + v\\*\\*2\\)', rc \\)\r\n\r\nwhere 'u' and 'v' are fields on the namespace, and of course, the arrays will need to be conformant for the operation to make sense.\r\n\r\nIs this something that you guys already have? This could be called ESMF\\_StateEval\\(\\), but for now it would be easier for me to write this using existing MAPL utilities, so I'll be calling it MAPL\\_StateEval\\(\\).\r\n\r\nCheers\\!\r\n\r\nArllindo\r\n\r\n\\-- \r\nArlindo M. da Silva, Jr.\r\nNASA/Goddard Space Flight Center\r\nGlobal Modeling and Assimilation Office\r\nCode 610.1            Greenbelt, MD 20771\r\n\\(301\\) 614-6174  arlindo.dasilva@nasa.gov\r\n\r\n",
  "labels": [
    "State"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "ESMF_State parser",
  "discussion_thread": {
    "_id": "4f1d0bbd",
    "posts": [
      {
        "text": "Arlindo has someone in his group working on this.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-09-27 16:02:04",
        "slug": "b1fe",
        "subject": "#370 ESMF_State parser"
      },
      {
        "text": "- **labels**: 588651 --> State\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-09-27 16:02:05",
        "slug": "6ddb",
        "subject": "#370 ESMF_State parser"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-09-27 16:02:05",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31df2718463761fc0eea",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4f1d0bbd/",
  "ticket_num": 370,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-08-21 16:55:31"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Arlindo da Silva from NASA\r\n\r\nDear Core Team,\r\n\r\nWith ESMF 5, the internal order of the FieldBundle elements no longer respect the order of creating, so when accessing a field by index returns something in alphabetical order. As Atanas has mentioned to you, such change in behavior is very disruptive for us but apparently you guys had very compelling optimization related reasons for doing so --- we can't argue with that. Therefore, I'd like to request additional functionality to restore this lost capability.\r\n\r\nThere are several ways of doing this, for example the  introduction of an iterator that would return fields in the FieldBundle in the order in which they were created, for example.\r\n\r\ntype\\(ESMF\\_Field\\) :: fBundle\r\ntype\\(ESMF\\_Field\\), pointer :: field\r\n\r\ncall ESMF\\_FieldBundleIteratorReset\\(fBundle\\)  ----  reset the iterator to oldest item\r\nfield = ESMF\\_FieldBundleIteratorNext\\(fBundle\\)     --- returns the next guy or NULL\r\n\r\nAnother way is to keep an internal index mapping your  alphabetical order to the order of creation. This way, in the current API one could have an optional parameter asking to return the fields by order of creation. This is probably the easiest to implement and more transparent solution.\r\n\r\nThanks,\r\n\r\nArlindo\r\n\r\n\\-- \r\nArlindo M. da Silva, Jr.\r\nNASA/Goddard Space Flight Center\r\nGlobal Modeling and Assimilation Office\r\nCode 610.1            Greenbelt, MD 20771\r\n\\(301\\) 614-6174  arlindo.dasilva@nasa.gov",
  "labels": [
    "Container"
  ],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Access to Fields in FieldBundles using \"old index order\" (3)",
  "discussion_thread": {
    "_id": "3d69c311",
    "posts": [
      {
        "text": "This should be doable, but probably on the order of 3 weeks, i.e. CRB task.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-08-21 23:35:57",
        "slug": "a88f",
        "subject": "#371 Access to Fields in FieldBundles using \"old index order\" (3)"
      },
      {
        "text": "- **assigned_to**: feiliu --> theurich\n- **summary**: Feature request: linked list for FieldBundles --> Access to Fields in FieldBundles using \"old index order\" (3)",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-08-21 23:35:57",
        "slug": "3767",
        "subject": "#371 Access to Fields in FieldBundles using \"old index order\" (3)"
      },
      {
        "text": "This is in the making. Will go out with 6.1.0.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-09-27 15:58:45",
        "slug": "8e1c",
        "subject": "#371 Access to Fields in FieldBundles using \"old index order\" (3)"
      },
      {
        "text": "- **labels**: 588643 --> 904963\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-09-27 15:58:45",
        "slug": "e9cd",
        "subject": "#371 Access to Fields in FieldBundles using \"old index order\" (3)"
      },
      {
        "text": "- **labels**: 904963 --> Container",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2012-09-27 15:59:26",
        "slug": "c5a4",
        "subject": "#371 Access to Fields in FieldBundles using \"old index order\" (3)"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-09-27 15:59:26",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e02718463761fc0efb",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/3d69c311/",
  "ticket_num": 371,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-08-21 21:18:00"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "From: Alex Pletzer \\(pletzer@txcorp.com\\)\r\n\r\nNeed a capability to turn off the ESMF logs during ESMF\\_Initialize.  Since Alex needs it to be available from python, the capability must also be available from the C API.",
  "labels": [
    "LogErr"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Add switch to ESMF_Initialize to allow turning logging off",
  "discussion_thread": {
    "_id": "cd3cd6cc",
    "posts": [
      {
        "text": "Fix summary",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2012-08-29 20:51:34",
        "slug": "4001",
        "subject": "#372 Add switch to ESMF_Initialize to allow turning logging off"
      },
      {
        "text": "- **summary**: Add switch to ESMF_Initialize to allow turning logging out --> Add switch to ESMF_Initialize to allow turning logging off",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2012-08-29 20:51:34",
        "slug": "da5b",
        "subject": "#372 Add switch to ESMF_Initialize to allow turning logging off"
      },
      {
        "text": "See support request \\#3562491 from Alex for the request at the python level.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2012-08-30 16:18:07",
        "slug": "b17c",
        "subject": "#372 Add switch to ESMF_Initialize to allow turning logging off"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-08-29 20:51:34",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e22718463761fc0f1b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/cd3cd6cc/",
  "ticket_num": 372,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-08-29 20:50:57"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: ESMF Core Team\r\n\r\nDuring today's technical we discussed various ideas around ESMF Log. One interesting idea was to have an optional argument to ESMF\\_Finalize\\(\\) that would allow the user to indicate that they wanted the Log files to be deleted on close. This is basically routing through the Fortran CLOSE\\(\\) feature available in the STATUS= DELETE argument option. The practical use case for this would be where the application does an ESMF\\_Finalize\\(ABORT\\) when hitting a problem, and thus the Log files get flushed and closed, and \\_not\\_ removed. However, if the application runs successfully to the end, without error, then ESMF\\_Finalize\\(with LOG\\_DELETE\\) option would remove the Log files. Such an application would only leave Log files around if there were issues during the run.\r\n\r\n\\*gjt\\*",
  "labels": [
    "LogErr"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Ability to delete Log files during ESMF_Finalize()",
  "discussion_thread": {
    "_id": "68ab489d",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-08-29 22:52:49",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e32718463761fc0f32",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/68ab489d/",
  "ticket_num": 373,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-08-29 22:52:49"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Tim Campbell\r\n\r\nReturn a list of the destination points which can't be regridded. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Return list of unmapped destination points from RegridStore",
  "discussion_thread": {
    "_id": "e1ed9032",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-08-31 16:55:56",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e32718463761fc0f3a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/e1ed9032/",
  "ticket_num": 374,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-08-31 16:55:56"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core developer\\) useful for CESM online regridding and NUOPC\r\n\r\nAdd the capability to create a copy of a Mesh in another component than the original Mesh was created in. The source and destination components may be disjoint. The user should be able to specify the distribution in the destination component, but a good default distribution should also be available if they don't want to specify the distribution. A degenerate case of this capability should basically be a copy/redist in the same component.  ",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG: Mesh copy to another component (aka Mesh redist) (4)",
  "discussion_thread": {
    "_id": "8ba5621f",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-09-05 21:44:15",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e42718463761fc0f42",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/8ba5621f/",
  "ticket_num": 375,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-09-05 21:44:15"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "Detelina Ivanova - LLNL\r\n\r\nI found that the conservative method worked for the CESM output:\r\nf=cdms2.open\\(\"/cmip5\\_gdo2/data/cmip5/output1/NSF-DOE-NCAR/CESM1-CAM5-1-FV2/historical/mon/seaIce/OImon/r1i1p1/sit/1/sit\\_OImon\\_CESM1-CAM5-1-FV2\\_historical\\_r1i1p1\\_185001-200512.nc\"\\)\r\n&gt;&gt;&gt; s=f\\(\"sit\"\\)\r\n&gt;&gt;&gt; s.shape\r\n\\(1872, 384, 320\\)\r\n&gt;&gt;&gt; s2=s\\[0\\].regrid\\(cdms2.createGaussianGrid\\(64,128\\),regridTool='emsf',regridMethod='conserve'\\)\r\n&gt;&gt;&gt; s2.shape\r\n\\(64, 128\\)\r\n\r\nThe one we look with you was from the MPI model\r\n\r\nf=cdms2.open\\(\"/cmip5\\_gdo2/data/cmip5/output1/MPI-M/MPI-ESM-P/historical/mon/seaIce/OImon/r1i1p1/sit/1/sit\\_OImon\\_MPI-ESM-P\\_historical\\_r1i1p1\\_185001-200512.nc\"\\)\r\n&gt;&gt;&gt; s=f\\(\"sit\"\\)\r\n&gt;&gt;&gt; s.shape\r\n\\(1872, 220, 256\\)\r\n&gt;&gt;&gt; s2=s\\[0\\].regrid\\(cdms2.createGaussianGrid\\(64,128\\),regridTool='emsf',regridMethod='conserve'\\)\r\nTraceback \\(most recent call last\\):\r\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\r\nFile \"/usr/local/uvcdat/2012-09-19/lib/python2.7/site-packages/cdms2/avariable.py\", line 1091, in regrid\r\n\\*\\*keywords\\)\r\nFile \"/usr/local/uvcdat/2012-09-19/lib/python2.7/site-packages/cdms2/mvCdmsRegrid.py\", line 223, in \\_\\_init\\_\\_\r\nself.regridObj.computeWeights\\(\\*\\*args\\)\r\nFile \"/usr/local/uvcdat/2012-09-19/lib/python2.7/site-packages/regrid2/mvGenericRegrid.py\", line 142, in computeWeights\r\nself.tool.computeWeights\\(\\*\\*args\\)\r\nFile \"/usr/local/uvcdat/2012-09-19/lib/python2.7/site-packages/regrid2/mvESMFRegrid.py\", line 232, in computeWeights\r\nunMappedAction = self.unMappedAction\\)\r\nFile \"/usr/local/uvcdat/2012-09-19/lib/python2.7/site-packages/regrid2/esmf.py\", line 522, in \\_\\_init\\_\\_\r\nunmappedaction = unMappedAction\\)\r\nFile \"/usr/local/uvcdat/2012-09-19/lib/python2.7/site-packages/ESMP/src/ESMP\\_API.py\", line 1162, in ESMP\\_FieldRegridStore\r\nraise NameError\\('ESMC\\_FieldRegridStore\\(\\) failed with rc = '+str\\(rc\\)+'.  '+errmsg\\)\r\nNameError: ESMC\\_FieldRegridStore\\(\\) failed with rc = 506.  Please check the log files \\(named \"PET\\*.ESMF\\_LogFile\"\\).\r\n\r\nProbably, its worth checking all of the CMIP5 models before sending complains:\\)",
  "labels": [],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "esmp regridding problem in uvcdat",
  "discussion_thread": {
    "_id": "177594b6",
    "posts": [
      {
        "text": "Reassigned to Bob until the new flag is added..",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2012-10-25 15:57:51",
        "slug": "b3d8",
        "subject": "#376 esmp regridding problem in uvcdat"
      },
      {
        "text": "- **labels**: 3112089 --> \n- **milestone**: 356870 --> \n- **assigned_to**: rokuingh --> oehmke",
        "attachments": [],
        "author": "rokuingh",
        "timestamp": "2012-10-25 15:57:51",
        "slug": "0168",
        "subject": "#376 esmp regridding problem in uvcdat"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-10-25 15:57:51",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e52718463761fc0f4a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/177594b6/",
  "ticket_num": 376,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-10-02 15:57:43"
},{
  "status": "open",
  "reported_by_id": "4f2ac3f60594ca64c2000485",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "rokuingh",
  "description": "WHO: esmf internal/Kathy Saint/Brian Eaton\r\n\r\nThis is being opened as a basis for discussion on a desired new Attribute capability.  The Attribute packages already have two specifiers \\(convention and purpose\\) and a third in the case where there are multiple attributes with the same name, and there may need to be more in the future.  We would like to add a call which can retrieve a local handle to an Attribute package so that the specifiers do not need to be used for every Attribute call related to a specific package.",
  "labels": [
    "Attribute"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "Attribute: add local handles for Attpacks",
  "discussion_thread": {
    "_id": "c19bf7a4",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-10-11 19:30:47",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e52718463761fc0f5d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/c19bf7a4/",
  "ticket_num": 377,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-10-11 19:30:47"
},{
  "status": "open",
  "reported_by_id": "519d0176e88f3d628adf1fb7",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "jcjacob",
  "description": "Add python regrid test program taking control file similar to the one used in offline regrid checker \\(ESMF\\_RegridWeightGenCheck\\).  Create regrid\\_test directory similar to python/ESMP/test.\r\n",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "jcjacob",
  "assigned_to_id": "519d0176e88f3d628adf1fb7",
  "private": false,
  "summary": "Python regrid checker",
  "discussion_thread": {
    "_id": "4d6046e8",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-10-31 17:28:47",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e62718463761fc0f65",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4d6046e8/",
  "ticket_num": 378,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-10-31 17:28:47"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\)\r\n\r\nSometimes it would be useful to turn on debug output from ESMF. For example, dump meshes during an ESMF\\_FieldRegridStore\\(\\) call. An idea for this is to use environment variables. E.g. ESMF\\_RUNTIME\\_REGRID\\_DEBUG... that the  developer could set \\(or ask a user to set\\).  One potential problem is that reading the environment could be too slow to do at the beginning of a time sensitive method \\(e.g. ESMF\\_FieldRegridStore\\(\\)\\) A solution to this is to read the env, inside ESMF\\_Initialize\\(\\) and then have a structure which kept track of the state for other methods to read. These flags are viewed as as an aid to user support, but not something that we would want to have users depend on because that would limit their flexibility \\(i.e. they would be aimed to help developers to help users, so we would want developers to be able to modify them in whatever way is most useful\\). Where they are documented it should be made clear that there is no guarantee of consistent behavior. ",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Runtime Debug switches",
  "discussion_thread": {
    "_id": "f8d02802",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-10-31 21:42:00",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e62718463761fc0f6d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f8d02802/",
  "ticket_num": 379,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2012-10-31 21:42:00"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(esmf core team\\)\r\n\r\nWe have been running into the problem of how to refer to our geometry structures \\(Grid, Mesh, Locstrean, XGrid\\) generically. An example of this is when talking about what a Field can be built on we have to supply the list instead of just pointing to a section. A suggestion is to reorganize the reference manual to put all the geometry structures under one section \\(e.g. Geometry Structures\\). In addition, if we added an API section at the top this would give us a place to put methods which potentially act between different geometries. \\(e.g. ESMF\\_Geom...\\(\\)\\)  To continue the trend we could also reorganize the rest of infrastructure to something like: Geometry \\(Grids, Meshes...\\), Data objects with Geometry \\(Fields, FieldBundles\\), Index Space \\(Distgrids\\), Data objects with Index Space \\(Arrays, ArrayBundles\\)",
  "labels": [
    "General Documentation"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Add Geometry section to ref. doc?",
  "discussion_thread": {
    "_id": "93c0e643",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-10-31 21:59:58",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e72718463761fc0f75",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/93c0e643/",
  "ticket_num": 380,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2012-10-31 21:59:58"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Mary Haley from NCAR\r\n\r\nHi again\r\n\r\n\\[We are seeing a lot of usage of the ESMF regridding routines in NCL, and hence are getting quite a few more questions.\\]\r\n\r\nA user is wondering if there's a way to turn off the creation of the PET0.RegridWeightGen.Log files that gets created when you run ESMF\\_RegridWeightGen?\r\n\r\nI looked around in the documentation and googled this, but didn't see anything.\r\n\r\nThanks,\r\n\r\n\\--Mary",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Creation of PET0.RegridWeightGen.Log file",
  "discussion_thread": {
    "_id": "2b541b1f",
    "posts": [
      {
        "text": "User \\(Mary H.\\) says this is low priority for them, because they can have a script remove log files. ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-11-14 20:18:35",
        "slug": "5e13",
        "subject": "#381 Creation of PET0.RegridWeightGen.Log file"
      },
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> \n- **priority**: 5 --> 4",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-11-14 20:18:35",
        "slug": "0388",
        "subject": "#381 Creation of PET0.RegridWeightGen.Log file"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-11-14 20:18:35",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e72718463761fc0f7d",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/2b541b1f/",
  "ticket_num": 381,
  "custom_fields": {
    "_priority": "4"
  },
  "created_date": "2012-11-14 16:40:16"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tom Roche no affiliation given\r\n\r\nsummary: Does ESMF support 3D regridding from an unprojected space\r\ndefined using spherical coordinates plus levels \\(e.g., lon, lat, lev\\)\r\nto a projected space using Cartesian coordinates \\(e.g., col, row, lev\\),\r\ngiven a well-defined projection \\(e.g., given a PROJ.4 string\\)?\r\n\r\ndetails:\r\n\r\nI am not yet an ESMF user \\(though I am, as a student, quite interested\r\nin Earth systems modeling frameworks generally/long-term\\), hence I'm\r\nomitting\r\n\r\nhttp://www.earthsystemmodeling.org/users/\r\nSupport requests should include:\r\n\\* the ESMF version\r\n\\* computing platform information \\(platform, \\[OS\\], compiler\\)\r\n\\* the name of the scientific application you are working with\r\n\r\nI'm hoping this question will be easy to answer \\(and that the answer\r\nwill be \"yes\" :-\\) and will thus be granted high-priority: can one regrid\r\n\r\n\\* from an unprojected 3D grid with horizontal spherical coordinates plus\r\nvertical levels \\(e.g., with netCDF data variables defined using\r\ndimensions=lon, lat, lev\\)\r\n\r\n\\* to a projected 3D grid with horizontal Cartesian coordinates plus\r\nvertical levels \\(e.g., with netCDF data variables defined using\r\ndimensions=col, row, lev\\)\r\n\r\ngiven a well-defined projection? E.g., for 12-km Lambert Conformal Conic\r\nover North America, the PROJ.4 coordinate reference system=\r\n\r\n+proj=lcc +lat\\_1=33 +lat\\_2=45 +lat\\_0=40 +lon\\_0=-97 +a=6370000 +b=6370000\r\n\r\nI'm asking because, at\r\n\r\nhttp://www.earthsystemmodeling.org/esmf\\_releases/non\\_public/last/regridding\\_status.html\r\nList of Tables\r\nSupported Grid Pairs for Different Regridding Methods\r\n\r\nI don't see anything that says that one cannot regrid from spherical to\r\nCartesian, but the \"supported grid pairs\" are all Cartesian-Cartesian\r\nand spherical-spherical. Perhaps I cannot take a hint :-\\) Apologies if\r\nthis is \"obviously\" impossible: I am currently not very spatially adept.\r\n\r\nAlso, FWIW, I am currently only interested in performing integrated\r\nregridding with logically rectangular grids.\r\n\r\nTIA, Tom Roche &lt;Tom\\_Roche@pobox.com&gt;",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "3D regridding from spherical to Cartesian",
  "discussion_thread": {
    "_id": "797a3c15",
    "posts": [
      {
        "text": "- **labels**: 667262 --> Regrid\n- **milestone**: 495011 --> ",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2012-11-21 21:38:02",
        "slug": "b92a",
        "subject": "#382 3D regridding from spherical to Cartesian"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-11-21 21:38:02",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e82718463761fc0f8f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/797a3c15/",
  "ticket_num": 382,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-11-15 16:22:30"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke and others \\(of core team\\)\r\n\r\nEqual tolerances are used in several places in the system \\(Mesh creation from SCRIP file, regridding, Mesh clipping\\) it would be good to have a consistent way to handle them in ESMF. ",
  "labels": [
    "Multiple Categories"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Have a common way to handle equal tolerances",
  "discussion_thread": {
    "_id": "860b79a4",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-11-28 21:43:44",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31e92718463761fc0f9c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/860b79a4/",
  "ticket_num": 383,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-11-28 21:43:44"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\) \r\n\r\nThe idea is to add a way to represent different staggers to the CF GRIDSPEC convention. The first step of this is to get a modification to the convention accepted by CF. Eventually support for this will need to be added to our Grid create from file routines. ",
  "labels": [
    "Grid - New"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Add stagger representation to GRIDSPEC file format",
  "discussion_thread": {
    "_id": "0747176d",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-11-28 22:15:39",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ea2718463761fc0fa4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/0747176d/",
  "ticket_num": 384,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2012-11-28 22:15:39"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Tim Cambell of NRL\r\n\r\nBranched from ticket 3563784\r\n\r\nHi Bob,\r\n\r\nAccording to the reference documentation \\(Section 23.4\\) is already restricted to the Fields referencing the same Grid, Mesh, LocStream, or XGrid.  Is this still true?\r\n\r\nNow, I introduce another discussion topic...\r\n\r\nI've been thinking more about the kind of information that would be useful to have returned from RegridStore.  Instead of just a sequential list of unmapped destination points, it seems more useful to have an Array returned that provides information about the remapping \"status\" for each destination point.\r\n\r\nI suggest an optional argument called remapStatus of type ESMF\\_Array.  The Array remapStatus \\(created by FieldRegridStore\\) is the same as the Array associated with the destination field, except that the type would be ESMF\\_TYPEKIND\\_I4.  Upon return from FieldRegridStore, every value of remapStatus will be set to one of the following \\(meaning in parentheses\\):\r\n\r\nESMF\\_REMAP\\_STATUS\\_NOT\\_SET\t\\(I'm not sure if this is needed\\)\r\nESMF\\_REMAP\\_STATUS\\_MASKED\\_DST\t\\(destination point was masked\\)\r\nESMF\\_REMAP\\_STATUS\\_MASKED\\_SRC\t\\(destination point mapped from masked source cell\\)\r\nESMF\\_REMAP\\_STATUS\\_NOT\\_IN\\_SRC\t\\(destination point was not mapped from any source cell\\)\r\nESMF\\_REMAP\\_STATUS\\_VALID\\_SRC\t\\(destination point was mapped from unmasked source cell\\)\r\n\r\nIf no srcMaskValues argument was provided to FieldRegridStore, then all unmapped destination points will be assigned a status of ESMF\\_REMAP\\_STATUS\\_NOT\\_IN\\_SRC.  The remapStatus Array can be used on the destination side to query the results of the remapping and make decisions on how to handle unmapped points.\r\n\r\nIt just occurred to me that maybe the remapStatus array would be even more useful if it was associated with the underlying Grid.  What I mean is have it be an ESMF\\_GRIDITEM \\(ESMF\\_GRIDITEM\\_REMAP\\_STATUS\\) that FieldRegridStore adds to the underlying destination Grid.  If this is done, then it would be available for query within the importing Component.\r\n\r\nWhat are your thoughts on this?\r\n\r\n-Tim",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Add per location status output to FieldRegridStore",
  "discussion_thread": {
    "_id": "4a113524",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2012-12-14 21:38:37",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ea2718463761fc0fac",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/4a113524/",
  "ticket_num": 385,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2012-12-14 21:38:37"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "Who: Bob Oehmke \\(core developer\\)\r\n\r\nThis would be an external demo whose purpose is to demonstrate how to use ESMF\\_RegridWeightGen. Because of this, it would be much simpler and straightforward than ESMF\\_RegridWeightGenCheck. Maybe just consisting of a heavily commented script file showing how to run the application in various ways along with a set of grid files. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "rokuingh",
  "assigned_to_id": "4f2ac3f60594ca64c2000485",
  "private": false,
  "summary": "Develop RegridWeightGen tutorial",
  "discussion_thread": {
    "_id": "f0479e0e",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2013-02-06 17:38:37",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31eb2718463761fc0fb4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/f0479e0e/",
  "ticket_num": 386,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Other Capability"
  },
  "created_date": "2013-02-06 17:38:37"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\)\r\n\r\nTake all of the release specific information \\(e.g. files tested\\) out of the RegridWeightGenCheck external demos page. Move it to the regrid status page, and point from the RegridWeightGenCheck external demos page to there. ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "Simplify RegridWeightGenCheck doc",
  "discussion_thread": {
    "_id": "d9d56ed4",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2013-02-13 18:41:33",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31eb2718463761fc0fbc",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/d9d56ed4/",
  "ticket_num": 387,
  "custom_fields": {
    "_priority": "5",
    "_milestone": "Add Code Capability"
  },
  "created_date": "2013-02-13 18:41:33"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Hartmut Kapitza from  the Institut fuer Kuestenforschung\r\n\r\nDear Support-Members of ESMF,\r\n\r\nI encounter problems using ESMF\\_FieldRegridStore in my test case.\r\n\r\nLet me first describe my setting: I have two gridded components, one atmosphere \\(40x40 grid points resolution 2 degrees\\), one ocean \\(40x40 grid points resolution 1 degree\\), and a coupler component interpolating a field from the atmosphere into the ocean. Both gridded components have the same center. The coordinates for both grids are defined in SCRIP-file format.\r\n\r\nWhen I create both grids from the corresponding file with a regular distribution \\(regDecomp=\\(/2,2/\\)\\), everything works fine.\r\n\r\nNow I want to change the layout of the ocean component by defining a distgrid and creating the grid using the interface described in Section 27.6.14. The distgrid is created like described in Section 31.3.3 with the following definition of deBlockList:\r\n\r\ndeBlockList\\(:,1,1\\) = \\(/ 1, 1/\\) \\! minindex 1st de-block\r\ndeBlockList\\(:,2,1\\) = \\(/15,20/\\) \\! maxindex\r\ndeBlockList\\(:,1,2\\) = \\(/16, 1/\\) \\! minindex 2nd de-block\r\ndeBlockList\\(:,2,2\\) = \\(/40,12/\\) \\! maxindex\r\ndeBlockList\\(:,1,3\\) = \\(/ 1,21/\\) \\! minindex 3rd de-block\r\ndeBlockList\\(:,2,3\\) = \\(/15,40/\\) \\! maxindex\r\ndeBlockList\\(:,1,4\\) = \\(/16,13/\\) \\! minindex 4th de-block\r\ndeBlockList\\(:,2,4\\) = \\(/40,40/\\) \\! maxindex\r\n\r\nThe idea of this kind of layout is the fact that in ocean models some subdomains may contain land points which do not take part in the computation. Therefore, for load balancing reasons some of the subdomains may be considerably larger than others, and the distribution may be highly irregular.\r\n\r\nNow the program crashes during initialization of the coupler when trying to precalculate the regridding. The log file shows:\r\n\r\n.... snip\r\n\r\n20130313 154032.038 INFO     PET0 Running with ESMF Version 5.2.0rp2\r\n20130313 154032.038 INFO     PET2 ESMF Remtc\\_Driver start\r\n20130313 154032.038 INFO     PET2 ToplevelComponent created\r\n20130313 154032.038 INFO     PET2 Parent Gridded Component Initialize routine called\r\n20130313 154032.038 INFO     PET2 ocean\\_init called\r\n20130313 154032.043 INFO     PET2 atmos\\_init called\r\n20130313 154032.045 INFO     PET2 aocpl\\_init called\r\n20130313 154032.057 ERROR    PET2 ESMCI\\_Regrid\\_F.C:273 c\\_esmc\\_regrid\\_create\\(\\) Internal error: Unknown error Condition \\{\\_srcmesh.spatial\\_dim\\(\\) == \\_dstmesh.spatial\\_dim\\(\\)\\} failed at /mnt/data2/kapitza/download/esmf/esmf/src/Infrastructure/Mesh/src/ESMCI\\_GeomRendezvous.C, line:128\r\n20130313 154032.057 ERROR    PET2 ESMF\\_Regrid.F90:383 ESMF\\_RegridStore Internal error: Unknown error - Internal subroutine call returned Error\r\n20130313 154032.057 ERROR    PET2 ESMF\\_FieldRegrid.F90:791 ESMF\\_FieldRegridStoreNX Internal error: Unknown error - Internal subroutine call returned Error\r\n\r\nAny ideas how to deal with this problem?\r\n\r\nThanks for your help.\r\n\r\nSincerely\r\nHartmut Kapitza\r\n\r\n\r\n\\-- \r\n\\----------------------------------------------------------------\r\nDr. Hartmut Kapitza              Tel.: +49 \\(0\\)4152 87-1846\r\nInstitut fuer Kuestenforschung   Fax.: +49 \\(0\\)4152 87-2818\r\nE-mail: hartmut.kapitza@hzg.de\r\n\\----------------------------------------------------------------\r\n\r\nHelmholtz-Zentrum Geesthacht Zentrum f\u00fcr Material- und K\u00fcstenforschung GmbH Max-Planck-Stra\u00dfe 1 I 21502 Geesthacht I Deutschland/Germany \r\nGesch\u00e4ftsf\u00fchrer/Board of Management: Prof. Dr. Wolfgang Kaysser, Dipl.-Ing. Michael Gan\u00df Vorsitzender des Aufsichtsrates/Chairman of the Supervisory Board: MinDirig Wilfried Kraus Amtsgericht L\u00fcbeck HRB 285 GE \\(Register Court\\) Internet: http://www.hzg.de ",
  "labels": [
    "Regrid"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "FieldRegridStore fails for grid created from distgrid",
  "discussion_thread": {
    "_id": "bb32f3e3",
    "posts": [
      {
        "text": "- **milestone**: 356870 --> \n- **labels**: 667262 --> Regrid",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2013-04-04 16:30:58",
        "slug": "3792",
        "subject": "#388 FieldRegridStore fails for grid created from distgrid"
      },
      {
        "text": "This ties in with Peggy's task for 6.3.0 \"Add new API to support grid creation from file with user specified distribution\"",
        "attachments": [],
        "author": "oehmke",
        "timestamp": "2013-04-04 16:32:23",
        "slug": "6bc9",
        "subject": "#388 FieldRegridStore fails for grid created from distgrid"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2013-04-04 16:30:58",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ec2718463761fc0fc4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/bb32f3e3/",
  "ticket_num": 388,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2013-03-14 15:44:23"
},{
  "status": "open",
  "reported_by_id": "5047c467b9363c23f32bff2b",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "oehmke",
  "description": "WHO: Bob Oehmke \\(core team\\), Rupert Ford of University of Manchester brought this up as something they'd need for the new MetOffice system in ticket 3567780\r\n\r\nAdd the ability to do halo communication on a Field built on a Mesh. See also 285980 which discusses including halo points in a Field built on a Mesh.",
  "labels": [
    "Mesh"
  ],
  "assigned_to": "oehmke",
  "assigned_to_id": "5047c467b9363c23f32bff2b",
  "private": false,
  "summary": "LONG:  Halo comm. in a Field build on a Mesh (4)",
  "discussion_thread": {
    "_id": "18edfe4c",
    "posts": [],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2013-03-19 21:45:24",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ed2718463761fc0fd6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/18edfe4c/",
  "ticket_num": 389,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2013-03-19 21:45:24"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tim Campbell from the Naval Research Laboratory\r\n\r\nIt would be useful to have a portable method for checking and creating directories from within a Fortran program. I don't see that Fortran provides this capability.  Maybe this is something that ESMF could provide as part of UtilIO?\r\n-Tim",
  "labels": [
    "I/O"
  ],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "managing directories",
  "discussion_thread": {
    "_id": "9e9301f3",
    "posts": [
      {
        "text": "Walter will write up a proposed API for review at the next API call.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2013-03-28 16:22:21",
        "slug": "22d0",
        "subject": "#390 managing directories"
      },
      {
        "text": "An initial MkDir and RmDir capability is included in 6.2.0.  Need to revisit after the 6.2.0 release for a parentsFlag on both MkDir and RmDir.  Also need a RmDir option to ignore remove requests without error when files exist in the directory - preventing removal.\r\n\r\nMoving to Feature Requests.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2013-04-11 16:52:40",
        "slug": "e1f5",
        "subject": "#390 managing directories"
      },
      {
        "text": "- **milestone**: 495011 --> \n- **labels**: 588650 --> I/O",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2013-04-11 16:52:40",
        "slug": "b17b",
        "subject": "#390 managing directories"
      }
    ],
    "discussion_id": "519d30012718463761fbddf8",
    "subject": ""
  },
  "mod_date": "2013-04-11 16:52:40",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d31ee2718463761fc0fde",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/feature-requests/_discuss/thread/9e9301f3/",
  "ticket_num": 390,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2013-03-21 16:01:48"
}],
"tracker_config":{
  "_id": "519d30012718463761fbddf6",
  "options": {
    "ordinal": 12,
    "import_id": "tracker/421188",
    "mount_point": "feature-requests",
    "TicketMonitoringType": "AllTicketChanges",
    "TicketHelpNew": "",
    "EnableVoting": false,
    "TicketHelpSearch": "",
    "TicketMonitoringEmail": "esmf_support@list.woc.noaa.gov",
    "mount_label": "Feature Requests"
  }
},
"milestones":[
  {
    "due_date": null,
    "complete": false,
    "name": "Add Code Capability",
    "closed": 86,
    "total": 258,
    "description": "Add Code Capability"
  },
  {
    "due_date": null,
    "complete": false,
    "name": "Add Other Capability",
    "closed": 4,
    "total": 25,
    "description": "Add Other Capability"
  },
  {
    "due_date": null,
    "complete": false,
    "name": "Port to New Platform",
    "closed": 20,
    "total": 25,
    "description": "Port to New Platform"
  }
],
"custom_fields":[
  {
    "milestones": [
      {
        "due_date": null,
        "description": "Add Code Capability",
        "name": "Add Code Capability",
        "complete": false
      },
      {
        "due_date": null,
        "description": "Add Other Capability",
        "name": "Add Other Capability",
        "complete": false
      },
      {
        "due_date": null,
        "description": "Port to New Platform",
        "name": "Port to New Platform",
        "complete": false
      }
    ],
    "type": "milestone",
    "name": "_milestone",
    "label": "Group"
  },
  {
    "type": "select",
    "label": "Priority",
    "show_in_search": true,
    "options": "1 2 3 4 *5 6 7 8 9",
    "name": "_priority"
  }
],
"open_status_names":"open unread accepted pending",
"closed_status_names":"closed wont-fix",
"saved_bins":[
  {
    "sort": "",
    "_id": "5230e483c431433f58c57e2d",
    "terms": "*:*",
    "summary": "All"
  }
]}