{"tickets": [{
  "status": "closed-fixed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "Subject: \\[CCS \\#23151\\] MPI bug on Cay XT3, jaguar\r\nFrom: \"Don Frederick via RT\" &lt;help@nccs.gov&gt;\r\nReply-To: help@nccs.gov\r\nX-RT-Loop-Prevention: CCS\r\nRT-Ticket: CCS \\#23151\r\nManaged-by: RT 3.4.5 \\(http://www.bestpractical.com/rt/\\)\r\nRT-Originator: frederickdm@ornl.gov\r\nTo: peggy.li@jpl.nasa.gov\r\nX-RT-Original-Encoding: utf-8\r\nDate: Mon, 30 Oct 2006 15:45:09 -0500 \\(EST\\)\r\nX-JPL-spam-score: 0.00%\r\n\r\n\r\nHello: I've been able to duplicate the behavior you\r\nencountered and have\r\nalso run this on another system to verify proper\r\noperation. I'm checking\r\ninto this further.\r\n\r\n-DonF\r\n\r\n\\[peggy.li@jpl.nasa.gov - Wed Oct 25 20:34:16 2006\\]:\r\n\r\nHi, I would like to report a MPI bug on Cray XT3.  \r\nThe bug is in MPI\\_WTime\\(\\) call for both Fortran and C++.\r\n\r\nHere is what goes wrong.  If MPI\\_WTime\\(\\) happens to\r\nreturn a value that is 1 microsecond less than a whole\r\nsecond \\(i.e., x.999999\\), the following MPI\\_WTime\\(\\) will\r\nreturn a wrong value by skipping a whole second \\(i.e.\r\n\\(x+1\\).999999\\).  Enclosed is a test program that will\r\ndemonstrate the problem.  To compile:\r\n\r\n% ftn -o BarrierTest BarrierTest.F90\r\n\r\nYou can run it using 4 processors\r\n\r\n% yod -sz 4 BarrierTest\r\n\r\nThe program call MPI\\_WTime\\(\\) in a do while loop to\r\nmimic a sleep\\(delay\\_time=1 sec\\) function.  It will call\r\nthe do loop four times and you will see that some loops\r\nwill terminate before delay\\_time=1 second is reached. \r\nI print out the return values of the last two\r\nMPI\\_WTime\\(\\) calls before it exits the do loop.  The one\r\nthat failed to delay for 1 seconds always have the\r\nvalue ended with\r\n.999999.\r\n\r\nLet me know if it is not clear or you cannot reproduce\r\nthe problem I have.  I can be reached at \\(818\\)354-1341.\r\nThank you for your attention.\r\n\r\nPeggy Li\r\n\r\n\r\n\r\n",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "VENDOR_FX:MPI_Wtime() skip on Cray XT3, jaguar",
  "discussion_thread": {
    "_id": "8887843e",
    "posts": [
      {
        "text": "- **summary**: MPI bug on Cay XT3, jaguar --> MPI bug on Cray XT3, jaguar",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2006-11-02 16:30:50",
        "slug": "bca3",
        "subject": "#1 VENDOR_FX:MPI_Wtime() skip on Cray XT3, jaguar"
      },
      {
        "text": "- **summary**: MPI bug on Cray XT3, jaguar --> MPI_Wtime() skip on Cray XT3, jaguar",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-02 17:24:58",
        "slug": "b8f1",
        "subject": "#1 VENDOR_FX:MPI_Wtime() skip on Cray XT3, jaguar"
      },
      {
        "text": "Logged In: YES \nuser\\_id=934020\nOriginator: NO\n\nDate: 19-feb-2007 06:48:18 -0800\r\nFrom: \"Don Frederick via RT\" &lt;help@nccs.gov&gt;\r\nReply-To: &lt;help@nccs.gov&gt;\r\nTo: &lt;peggy.li@jpl.nasa.gov&gt;\r\nCc: &lt;willis@cray.com&gt;\r\nSubject: \\[CCS \\#23151\\] MPI bug on Cay XT3, jaguar\r\n\r\n\r\nHello Peggy: I have this problem entered into the Cray problem reporting\r\nsystem as SPR \\#737665, but no estimate on when it will be fixed. I\r\napologize for the delay in getting a response on this. I will be\r\ncontacting Cray about an estimated time to a fix.\r\n\r\n-Don Frederick\r\nNCCS User Assistance",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-02-20 04:30:19",
        "slug": "2cf3",
        "subject": "#1 VENDOR_FX:MPI_Wtime() skip on Cray XT3, jaguar"
      },
      {
        "text": "- **summary**: MPI_Wtime() skip on Cray XT3, jaguar --> VENDOR_FX:MPI_Wtime() skip on Cray XT3, jaguar",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-04-12 23:20:03",
        "slug": "c557",
        "subject": "#1 VENDOR_FX:MPI_Wtime() skip on Cray XT3, jaguar"
      },
      {
        "text": "- **milestone**: 656936 --> \n- **labels**: 589363 --> \n- **assigned_to**: peggyli --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-07 21:01:24",
        "slug": "6d92",
        "subject": "#1 VENDOR_FX:MPI_Wtime() skip on Cray XT3, jaguar"
      },
      {
        "text": "Logged In: YES \nuser\\_id=934020\nOriginator: NO\n\nThe problem is fixed in the latest MPT \\(version xt-mpt/1.5.52\\) on jaguar.  Here is the confirmed message from Don Frederick of NCCS, ORNL.  \r\n\r\nSubject: \\[CCS \\#23151\\] MPI bug on Cray XT3, jaguar \r\nFrom: \"Don Frederick via RT\" &lt;help@nccs.gov&gt;\r\nTo: peggy.li@jpl.nasa.gov\r\nCc: willis@cray.com\r\n\r\nHello Peggy:\r\n\r\nSorry for the delay.\r\n\r\nYes, I now believe it is fixed. I tried running your test case, and got:\r\n\r\ntiming precision is:    9.9999999999999995E-007\r\ntiming precision is:    9.9999999999999995E-007\r\ntiming precision is:    9.9999999999999995E-007\r\ntiming precision is:    9.9999999999999995E-007\r\nPet=            3 before Barrier    1216756087.524611     \r\nPet=            0 before delay:    1216756087.524616     \r\nPet=            1 before Barrier    1216756087.524612     \r\nPet=            2 before Barrier    1216756087.524616     \r\nPet=            0 the last MPI\\_Wtime returns:    1216756088.524620      \r\n1216756088.524619      Total MPI\\_WTIME calls:      2169256\r\nPet=            0 before Barrier    1216756088.524640     \r\nPet=            0 after Barrier    1216756088.524651     \r\nPet=            3 after Barrier    1216756088.524651     \r\nPet=            1 after Barrier    1216756088.524651     \r\nPet=            2 after Barrier    1216756088.524862     \r\nPet=            0 before Barrier    1216756088.524984     \r\nPet=            3 before Barrier    1216756088.524984     \r\nPet=            1 before delay:    1216756088.524984     \r\nPet=            2 before Barrier    1216756088.524984     \r\nPet=            1 the last MPI\\_Wtime returns:    1216756089.524988      \r\n1216756089.524987      Total MPI\\_WTIME calls:      2169286\r\nPet=            1 before Barrier    1216756089.525007     \r\nPet=            1 after Barrier    1216756089.525017     \r\nPet=            3 after Barrier    1216756089.525017     \r\nPet=            0 after Barrier    1216756089.525222     \r\nPet=            2 after Barrier    1216756089.525222     \r\nPet=            3 before Barrier    1216756089.525450     \r\nPet=            1 before Barrier    1216756089.525450     \r\nPet=            0 before Barrier    1216756089.525451     \r\nPet=            2 before delay:    1216756089.525451     \r\nPet=            2 the last MPI\\_Wtime returns:    1216756090.525455      \r\n1216756090.525454      Total MPI\\_WTIME calls:      2167091\r\nPet=            2 before Barrier    1216756090.525687     \r\nPet=            3 after Barrier    1216756090.525806     \r\nPet=            1 after Barrier    1216756090.525807     \r\nPet=            0 after Barrier    1216756090.525808     \r\nPet=            2 after Barrier    1216756090.525807     \r\nPet=            3 before delay:    1216756090.526138     \r\nPet=            0 before Barrier    1216756090.526139     \r\nPet=            1 before Barrier    1216756090.526138     \r\nPet=            2 before Barrier    1216756090.526138     \r\nPet=            3 the last MPI\\_Wtime returns:    1216756091.526143      \r\n1216756091.526142      Total MPI\\_WTIME calls:      2168371\r\nPet=            3 before Barrier    1216756091.526163     \r\nPet=            3 after Barrier    1216756091.526174     \r\nPet=            0 after Barrier    1216756091.526174     \r\nPet=            1 after Barrier    1216756091.526176     \r\nPet=            2 after Barrier    1216756091.526406     \r\nApplication 1096651 resources: utime 0, stime 0\r\n\r\nIs this output satisfactory?\r\n\r\n-DonF\r\njaguar10&lt;123&gt;  \r\n",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2008-07-22 20:34:13",
        "slug": "6619",
        "subject": "#1 VENDOR_FX:MPI_Wtime() skip on Cray XT3, jaguar"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1596389\nOriginator: NO\n\nClosing this on behalf of Peggy who was unable to do it for some reason:\r\n\r\nSubject: \\[CCS \\#23151\\] MPI bug on Cray XT3, jaguar\r\nFrom: \"Don Frederick via RT\" &lt;help@nccs.gov&gt;\r\nReply-To: help@nccs.gov\r\nX-RT-Loop-Prevention: CCS\r\nRT-Ticket: CCS \\#23151\r\nManaged-by: RT 3.4.5 \\(http://www.bestpractical.com/rt/\\)\r\nRT-Originator: frederickdm@ornl.gov\r\nTo: peggy.li@jpl.nasa.gov\r\nCc: willis@cray.com\r\nX-RT-Original-Encoding: utf-8\r\nDate: Tue, 22 Jul 2008 15:53:44 -0400 \\(EDT\\)\r\nX-JPL-spam-score: 0.00%\r\n\r\n\r\nHello Peggy:\r\n\r\nSorry for the delay.\r\n\r\nYes, I now believe it is fixed. I tried running your test case, and got:\r\n\r\ntiming precision is:    9.9999999999999995E-007\r\ntiming precision is:    9.9999999999999995E-007\r\ntiming precision is:    9.9999999999999995E-007\r\ntiming precision is:    9.9999999999999995E-007\r\nPet=            3 before Barrier    1216756087.524611     Pet=            0 before delay:    1216756087.524616     Pet=            1 before Barrier    1216756087.524612     Pet=            2 before Barrier    1216756087.524616     Pet=            0 the last MPI\\_Wtime returns:    1216756088.524620         1216756088.524619      Total MPI\\_WTIME calls:      2169256\r\nPet=            0 before Barrier    1216756088.524640     Pet=            0 after Barrier    1216756088.524651     Pet=            3 after Barrier    1216756088.524651     Pet=            1 after Barrier    1216756088.524651     Pet=            2 after Barrier    1216756088.524862     Pet=            0 before Barrier    1216756088.524984     Pet=            3 before Barrier    1216756088.524984     Pet=            1 before delay:    1216756088.524984     Pet=            2 before Barrier    1216756088.524984     Pet=            1 the last MPI\\_Wtime returns:    1216756089.524988         1216756089.524987      Total MPI\\_WTIME calls:      2169286\r\nPet=            1 before Barrier    1216756089.525007     Pet=            1 after Barrier    1216756089.525017     Pet=            3 after Barrier    1216756089.525017     Pet=            0 after Barrier    1216756089.525222     Pet=            2 after Barrier    1216756089.525222     Pet=            3 before Barrier    1216756089.525450     Pet=            1 before Barrier    1216756089.525450     Pet=            0 before Barrier    1216756089.525451     Pet=            2 before delay:    1216756089.525451     Pet=            2 the last MPI\\_Wtime returns:    1216756090.525455         1216756090.525454      Total MPI\\_WTIME calls:      2167091\r\nPet=            2 before Barrier    1216756090.525687     Pet=            3 after Barrier    1216756090.525806     Pet=            1 after Barrier    1216756090.525807     Pet=            0 after Barrier    1216756090.525808     Pet=            2 after Barrier    1216756090.525807     Pet=            3 before delay:    1216756090.526138     Pet=            0 before Barrier    1216756090.526139     Pet=            1 before Barrier    1216756090.526138     Pet=            2 before Barrier    1216756090.526138     Pet=            3 the last MPI\\_Wtime returns:    1216756091.526143         1216756091.526142      Total MPI\\_WTIME calls:      2168371\r\nPet=            3 before Barrier    1216756091.526163     Pet=            3 after Barrier    1216756091.526174     Pet=            0 after Barrier    1216756091.526174     Pet=            1 after Barrier    1216756091.526176     Pet=            2 after Barrier    1216756091.526406    Application 1096651 resources: utime 0, stime 0\r\n\r\nIs this output satisfactory?\r\n\r\n-DonF\r\njaguar10&lt;123&gt; \r\n\\[peggy.li@jpl.nasa.gov - Tue Jul 22 12:00:59 2008\\]:\r\n\r\nHi,  Don, this has been a very old bug report.  Can you confirm if it\r\nis fixed in the new MPT release on jaguar?  Thank you very much.\r\n\r\nPeggy Li\r\n\\--------------\r\n&gt;\r\n&gt;Hello Peggy - no estimate, yet. I'll let you know as soon as I hear\r\n&gt; &gt;something from Cray about this.\r\n&gt;\r\n&gt;-DonF\r\n&gt;Donald Frederick\r\n&gt;National Center for Computational Sciences\r\n&gt;User Assistance\r\n&gt;Oak Ridge National Laboratory\r\n&gt;\r\n&gt;&gt;  \\[peggy.li@jpl.nasa.gov - Tue Oct 31 15:01:46 2006\\]:\r\n&gt;&gt;\r\n&gt;&gt;  &gt;\r\n&gt;&gt;  Don, it is not a show stopper.  How long do you expect to have it\r\nfixed?\r\n&gt;&gt;\r\n&gt;&gt;  Thanks.\r\n&gt;&gt;  peggy\r\n&gt;&gt;  ---------------\r\n&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;  &gt;\r\n&gt;&gt;  &gt;I'd like to know how serious this bug is for your application -\r\ndo you\r\n&gt;&gt;  &gt;have an easily implemented work-around? Or does this stop your\r\nprogress?\r\n&gt;&gt;  &gt;\r\n&gt;&gt;  &gt;Donald Frederick\r\n&gt;&gt;  &gt;National Center for Computational Sciences\r\n&gt;&gt;  &gt;User Assistance\r\n&gt;&gt;  &gt;Oak Ridge National Laboratory\r\n&gt;&gt;  &gt;http://info.nccs.gov/resources/general/uac\r\n&gt;&gt;  &gt;&gt;  \\[peggy.li@jpl.nasa.gov - Wed Oct 25 20:34:16 2006\\]:\r\n&gt;&gt;  &gt;&gt;\r\n&gt;&gt;  &gt;&gt;  Hi, I would like to report a MPI bug on Cray XT3.   The bug is\r\nin\r\n&gt;&gt;  &gt;&gt;  MPI\\_WTime\\(\\) call for both Fortran and C++.\r\n&gt;&gt;  &gt;&gt;\r\n&gt;&gt;  &gt;&gt;  Here is what goes wrong.  If MPI\\_WTime\\(\\) happens to return a\r\nvalue\r\n&gt;&gt;  &gt;&gt;  that is 1 microsecond less than a whole second \\(i.e.,\r\nx.999999\\), the\r\n&gt;&gt;  &gt;&gt;  following MPI\\_WTime\\(\\) will return a wrong value by skipping a\r\nwhole\r\n&gt;&gt;  &gt;&gt;  second \\(i.e. \\(x+1\\).999999\\).  Enclosed is a test program that\r\nwill\r\n&gt;&gt;  &gt;&gt;  demonstrate the problem.  To compile:\r\n&gt;&gt;  &gt;&gt;\r\n&gt;&gt;  &gt;&gt;  % ftn -o BarrierTest BarrierTest.F90\r\n&gt;&gt;  &gt;&gt;\r\n&gt;&gt;  &gt;&gt;  You can run it using 4 processors\r\n&gt;&gt;  &gt;&gt;\r\n&gt;&gt;  &gt;&gt;  % yod -sz 4 BarrierTest\r\n&gt;&gt;  &gt;&gt;\r\n&gt;&gt;  &gt;&gt;  The program call MPI\\_WTime\\(\\) in a do while loop to mimic a\r\n&gt;&gt;  &gt;&gt;  sleep\\(delay\\_time=1 sec\\) function.  It will call the do loop\r\nfour\r\n&gt;&gt;  &gt;&gt;  times and you will see that some loops will terminate before\r\n&gt;&gt;  &gt;&gt;  delay\\_time=1 second is reached.  I print out the return values\r\nof the\r\n&gt;&gt;  &gt;&gt;  last two MPI\\_WTime\\(\\) calls before it exits the do loop.  The\r\none that\r\n&gt;&gt;  &gt;&gt;  failed to delay for 1 seconds always have the value ended with\r\n&gt;&gt;  &gt;&gt;  .999999.\r\n&gt;&gt;  &gt;&gt;\r\n&gt;&gt;  &gt;&gt;  Let me know if it is not clear or you cannot reproduce the\r\nproblem I\r\n&gt;&gt;  &gt;&gt;  have.  I can be reached at \\(818\\)354-1341.  Thank you for your\r\n&gt;&gt;  &gt;&gt;  attention.\r\n&gt;&gt;  &gt;&gt;\r\n&gt;&gt;  &gt;&gt;  Peggy Li\r\n&gt;&gt;  &gt;&gt;\r\n&gt;&gt;  &gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;\r\n\r\n\r\n\r\n\\--\r\nDonald Frederick\r\nNational Center for Computational Sciences\r\nUser Assistance\r\nOak Ridge National Laboratory\r\nhttp://info.nccs.gov/resources/general/uac\r\n\r\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\r\n",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-07-23 17:30:30",
        "slug": "59cc",
        "subject": "#1 VENDOR_FX:MPI_Wtime() skip on Cray XT3, jaguar"
      },
      {
        "text": "- **status**: open --> closed-fixed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-07-23 17:30:30",
        "slug": "b099",
        "subject": "#1 VENDOR_FX:MPI_Wtime() skip on Cray XT3, jaguar"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2008-07-23 17:30:30",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d32af2718463761fc1fce",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/8887843e/",
  "ticket_num": 1,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2006-11-02 16:30:07"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "Email from Peggy Li to Peter Johnson from Cray\r\n\r\nPete, It looks like that Cray has recently upgraded its\r\ncompiler on gold.  It caused the ESMF fail to compile.\r\nWe got the following compiler error:\r\n\r\nftn -h ssp -dy -c -O2 -em\r\n-J/users/n11973/share/esmf/mod/modO/Unicos.default.64.mpi.default\r\n-I/users/n11973/share/esmf/build\\_config/Unicos.default.default\r\n-I/users/n11973/share/esmf/src/include -f free -N 255\r\n-F -M1549 -DESMF\\_NO\\_IOCODE -DS64=1\r\n-DESMF\\_NO\\_INTEGER\\_1\\_BYTE -DESMF\\_NO\\_INTEGER\\_2\\_BYTE\r\n/users/n11973/share/esmf/src/Infrastructure/VM/interface/ESMF\\_VM.F90\r\n\r\nsubroutine f\\_ESMF\\_VMGlobalGet\\(localPet, petCount\\)\r\n^                                    \r\nftn-1282 ftn: ERROR F\\_ESMF\\_VMGLOBALGET, File =\r\n/users/n11973/share/esmf/src/Infrastructure/VM/interface/ESMF\\_VM.F90,\r\nLine = 6070, Column = 12\r\n\"F\\_ESMF\\_VMGLOBALGET\" is defined as a SUBROUTINE at\r\nline 37\r\n\\(/users/n11973/share/esmf/src/Infrastructure/VM/interface/ESMF\\_VM.F90\\)\r\nand as a SUBROUTINE in this program unit.\r\n\r\nsubroutine f\\_ESMF\\_VMAbort\\(\\)\r\n^               ftn-1282 ftn: ERROR\r\nF\\_ESMF\\_VMABORT, File =\r\n/users/n11973/share/esmf/src/Infrastructure/VM/interface/ESMF\\_VM.F90,\r\nLine = 6080, Column = 12\r\n\"F\\_ESMF\\_VMABORT\" is defined as a SUBROUTINE at line\r\n37\r\n\\(/users/n11973/share/esmf/src/Infrastructure/VM/interface/ESMF\\_VM.F90\\)\r\nand as a SUBROUTINE in this program unit.\r\n\\--------------------------\r\n\r\nDo I  need to load a new module?  My current module\r\nlist is:\r\n\r\nCurrently Loaded Modulefiles:\r\n1\\) cpkg/current                    9\\)\r\nsystem-base/prepend 17\\) cftn\r\n2\\) all/prepend                    10\\) homebin\r\n18\\) mpt\r\n3\\) system-bin/prepend             11\\)\r\nlocal.new 19\\) CC\r\n4\\) system-manpages/prepend        12\\) ucb 20\\)\r\nlibsci\r\n5\\) system-x11/prepend             13\\) dial\r\n21\\) craylibs\r\n6\\) system-gnome/prepend           14\\) X11 22\\)\r\nPrgEnv.55\r\n7\\) system-kde/prepend             15\\) cal   \r\n8\\)\r\nsystem-windowmanager/prepend   16\\) craytools          \r\n\r\n\\-------------------------\r\nAlso, is there any document describing the difference\r\nof the compilers?  In addition, /opt/PE/bin/ar is still\r\nnot working, any update?\r\n\r\nThank you very much for your help\\!\r\n\r\npeggy\r\n\\---------------\r\n\r\n\r\n\r\nPete,\r\n\r\nPrgEnv.56.newest does not exist.  I loaded\r\nPrgEnv.55.newest, then i cannot find cal, craytools,\r\ncftn, CC, libsci and craylibs.  So, it does not work. \r\nGerhard said that he has seem similar problem before\r\nwith the Cray compiler.   Can you file a bug report\r\nplease?  In the meantime, is there a way to use the\r\nolder compilers instead?\r\n\r\nThanks,\r\npeggy\r\n\r\n\r\n\r\nHi,\r\n\r\nThe problem seems to be that the compiler incorrectly\r\nthinks that a subroutine is defined twice, while what\r\nreally is happening is that there is an external\r\nsubroutine inside a .F90 file and an explicit interface\r\nblock exists for this subroutine in a module that is\r\n\"use\"ed by the module also contained in this file. We\r\ncould probably write a small reproduce to demonstrate\r\nthe issue.\r\n\r\n-Gerhard\r\n\r\n\r\nGerhard,\r\n\r\nA small test case would be very helpful.  Thank you,\r\nPeter\r\n\r\n\\-- \r\n\\----\r\nPeter Johnsen      Cray, Inc.\r\nMeteorologist, Applications Engineering\r\n651-605-9173       pjj@cray.com\r\n\r\n\r\n",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "VENDOR_FX:Cray ftn issue w explicit interface blocks on X1",
  "discussion_thread": {
    "_id": "edba7124",
    "posts": [
      {
        "text": "- **summary**:  ftn and compiler errors --> Cray ftn and compiler errors on X1",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-02 16:57:08",
        "slug": "ea29",
        "subject": "#2 VENDOR_FX:Cray ftn issue w explicit interface blocks on X1"
      },
      {
        "text": "- **summary**: Cray ftn and compiler errors on X1 --> Cray ftn issue with explicit interface blocks on X1",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2006-11-02 17:24:05",
        "slug": "9187",
        "subject": "#2 VENDOR_FX:Cray ftn issue w explicit interface blocks on X1"
      },
      {
        "text": "Logged In: YES \nuser\\_id=934020\nOriginator: NO\n\nGerhard moved the interface block in the LogErr module into the routines where they are called to make the code compile with 5.5.0.6.  And Pete told us that the Cray Compiler Engineer will put in fix into 5.5 and 5.6 in a few weeks.  Following is the trace of the emails:\r\n\r\n\\---11/20/2006, from Peggy ------\r\nTo: Peter Johnsen &lt;pjj@cray.com&gt;\r\nFrom: P Peggy Li &lt;Peggy.Li@jpl.nasa.gov&gt;\r\nCc: esmf\\_support@ucar.edu\r\nSubject: \\[esmf\\_support\\] Re: ESMF bug 1589387 -- Cray ftn issue\r\n\r\nPete,\r\n\r\nI tried what you suggested and it did not work.  I took a close look at the code and I think I understand why it failed to compile.\r\n\r\nIn $ESMF\\_DIR/src/Infrastructure/Util/src/ESMF\\_LogErr.F90, there are two interface blocks that define\r\nf\\_ESMF\\_VMGlobalGet\\(\\) and f\\_ESMF\\_VMAbort\\(\\).   In $ESMF\\_DIR/src/Infrastructure/VM/interface/ESMF\\_VM.F90, ESMF\\_LogErr module was used in this file.  And at the end of the file \\(outside the ESMF\\_VMmod\\), the two subroutines f\\_ESMF\\_VMGlobalGet\\(\\) and f\\_ESMF\\_VMAbort\\(\\) were actually defined.   So, the compiler thought that these two functions are already defined in ESMF\\_LogErr module and produced an error.\r\n\r\nAccording to F90 book, an interface block is used to define a subroutine defined somewhere else in the calling module.  Therefore, the functions declared there should not be considered as  external subroutines defined in ESMF\\_ErrLog.   So,   the compiler should not signal it as an error.\r\n\r\nI am not sure if we separate the two functions out from ESMF\\_VM.F90 into another file without \"use ESMF\\_ErrLog\" can get rid of the compiler error.\r\n\r\nOh, I did make a tar file and put it in my home directory on gold: /users/n11973/esmf.tar\r\n\r\npeggy\r\n\r\n\\-------------11/20/2006 from Gerhard ---------\r\n\r\nFrom: Gerhard Theurich &lt;theurich@sourcespring.net&gt;\r\nTo: P Peggy Li &lt;Peggy.Li@jpl.nasa.gov&gt;\r\nCC: Peter Johnsen &lt;pjj@cray.com&gt;, esmf\\_support@ucar.edu\r\nSubject: Re: \\[esmf\\_support\\] Re: ESMF bug 1589387 -- Cray ftn issue\r\n\r\nPeggy and Pete,\r\n\r\nI did make some modifications on the HEAD of the development trunk of ESMF to get things compiled with ftn 5.5.0.6 again. I simply moved the two interface blocks that previously were located in the declaration section of the LogErr module into the declaration section of the two routines in LogErr that actually needed these explicit interfaces. This made ftn 5.5.0.6 happy again because now the two routines don't have explicit interfaces via use association in program units that use the LogErr module.\r\n\r\nHowever, this is really only a work-around for what appears to be a bug in ftn version 5.5.0.6. As Peggy stated it seems as if ftn 5.5.0.6 incorrectly assumes the external subroutines are defined \\_inside\\_ the VM module just because they are contained in the same source file. However, they are outside the module definition and thus should not be in the same namespace\\!\r\n\r\nThis namespace bug in ftn may become a real concern to us soon in another area of the code where a work-around will be more difficult and inconvenient.\r\n\r\n-Gerhard\r\n\r\n\\-------11/21/2006 from Pete Johnson -------\r\nFrom: Peter Johnsen &lt;pjj@cray.com&gt;\r\nTo: Gerhard Theurich &lt;theurich...snip...Peggy Li &lt;Peggy.Li@jpl.nasa.gov&gt;\r\nCC: esmf\\_support@ucar.edu, Bill Long &lt;longb@cray.com&gt;\r\nSubject: Re: \\[esmf\\_support\\] Re: ESMF bug 1589387 -- Cray ftn issue\r\n\r\nYou can also avoid this problem with the following USE statement\r\nin ESMF\\_VM.F90.\r\n\r\nuse ESMF\\_LogErrMod, only : ESMF\\_LogMsgFoundError, ESMF\\_LOG\\_ERROR\r\n\r\nPerhaps this is more acceptable.\r\n\r\nPete\r\n\\--------- 11/21/2006 from Gerhard --------\r\n\r\nFrom: Gerhard Theurich &lt;theurich@sourcespring.net&gt;\r\nTo: Peter Johnsen &lt;pjj@cray.com&gt;\r\nCC: P Peggy Li &lt;Peggy.Li@jpl.nasa...snip...Bill Long &lt;longb@cray.com&gt;\r\nSubject: Re: \\[esmf\\_support\\] Re: ESMF bug 1589387 -- Cray ftn issue\r\n\r\nHi Pete,\r\n\r\nThanks. That is another work-around for the namespace problem in ftn 5.5.0.6, that will avoid the conflict between the LogErr/VM files. However, besides being inconvenient in more complex cases to figure out which symbols to import explicitly, it is also not going to work portably in situations we may encounter pretty soon. We may start implementing code that needs to overload a generic interface with external routines. The module that defines such a generic interface will need to be \"use\"ed in all other modules \\(thus the need to use external routines in order to prevent circular module dependencies forbidden in F90\\). The reason for \"use\"ing this module in all other modules is to import this very interface. However on ftn 5.5.0.6 I suspect this will not work because of the namespace problem which will flag conflicts whenever the generic interface is imported into any module which happens to be in the same source file that defines an external routine that is used to overload the generic interface. Sure, we could put the external routines in separate files to avoid this conflict, but this means we'd double the number of Fortran files just because of a compiler bug on a single platform :-\\(. Besides, from a code structure standpoint, it is much cleaner to keep the external routines together in the same file as the modules for which they provide external entrance points.\r\n\r\nDo you have a feeling of when we can expect an ftn update that addresses the namespace problem? Seems that earlier versions of the compiler had less trouble with it \\(although I've seen related namespace issues with earlier ftn versions as well\\). Is there a bug tracking ticket open with Cray about this? Thanks,\r\n\r\n-Gerhard\r\n\r\n\\--------11/21/2006 from Pete -----------\r\n\r\nFrom: Peter Johnsen &lt;pjj@cray.com&gt;\r\nTo: Gerhard Theurich &lt;theurich...snip...Peggy Li &lt;Peggy.Li@jpl.nasa.gov&gt;\r\nCC: esmf\\_support@ucar.edu, Bill Long &lt;longb@cray.com&gt;\r\nSubject: Re: \\[esmf\\_support\\] Re: ESMF bug 1589387 -- Cray ftn issue\r\n\r\nGerhard, Peggy,\r\n\r\nYou've convinced the compiler engineers\\!  They have a fix that\r\nwill go in 55 and 56 in a few weeks.  It may require that you use\r\na USE qualifier on the module use statements in the subroutines like:\r\n\r\nsubroutine f\\_ESMF\\_VMAbort\\(\\)\r\nuse ESMF\\_VMMod,only:ESMF\\_VMAbort\r\ncall ESMF\\_VMAbort\\(\\)\r\nend subroutine f\\_ESMF\\_VMAbort\\(\\)\r\n\r\n\r\nPeter Johnsen      Cray, Inc.\r\n\\----------------------",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2006-11-22 16:59:59",
        "slug": "bcdf",
        "subject": "#2 VENDOR_FX:Cray ftn issue w explicit interface blocks on X1"
      },
      {
        "text": "- **summary**: Cray ftn issue with explicit interface blocks on X1 --> VENDOR_FX:Cray ftn issue w explicit interface blocks on X1",
        "attachments": [],
        "author": "peggyli",
        "timestamp": "2007-04-12 23:19:45",
        "slug": "97b2",
        "subject": "#2 VENDOR_FX:Cray ftn issue w explicit interface blocks on X1"
      },
      {
        "text": "- **labels**: 589363 --> \n- **milestone**: 656936 --> \n- **assigned_to**: peggyli --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-07 21:01:11",
        "slug": "93fe",
        "subject": "#2 VENDOR_FX:Cray ftn issue w explicit interface blocks on X1"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2007-12-07 21:01:11",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d32b32718463761fc1ffe",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/edba7124/",
  "ticket_num": 2,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2006-11-02 16:43:07"
},{
  "status": "open",
  "reported_by_id": "4d794255b9363c57d70002fc",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "murphysj",
  "description": "Gerhard,\r\n\r\nDo you know if PGI or Cray is looking into the internal error problem  on Cray XT3/4?\r\n\r\n\"/usr/local/usp/BEI/esmf/Src/3.0.2/src/Infrastructure/VM/src/ ESMC\\_VMKernel.C\", line 4358: warning:\r\nexpression has no effect\r\npthread\\_mutex\\_unlock\\(ipSetupMutex\\);\r\n^\r\n\r\nPGCC-S-0000-Internal compiler error. unexpected edg alignment % d       16 \\(\\)\r\nPGCC/x86 Linux/x86-64 6.2-5: compilation completed with severe errors\r\ngmake\\[7\\]: \\*\\*\\* \\[/usr/local/usp/BEI/esmf/Src/3.0.2/lib/libO/Unicos.pgi. 64.mpi.default/libesmf.a\\(ESMC\\_VMKernel.o\\)\\] Error 2\r\n\r\n~Tim\r\n\r\nHi Tim,\r\nTo my knowledge PGI and Cray have not been made aware of the issue. I am CC'ing both Peter Johnsen \\(from Cray\\) and Dave Norton \\(from PGI\\) on this email to start the dialog.\r\nThe status of my investigation this far is that in trying to compile ESMF 2.2.2r, 3.0.1 and 3.0.2 we have found that:\r\n\\- On Cray XT3/4 with PGI 6.2-5 compilation fails with internal compiler error while trying to compiler ESMF file ESMC\\_VMKernel.C \\(confirmed on at least two independent machines\\). \\[other versions of PGI work fine\\]\r\n\\- On an ia32 Linux system with PGI 6.2-5 compilation succeeds.\r\nI don't have access to PGI 6.2-5 on a x86\\_64 Linux system, so I cannot determine whether the issue comes in as the combination of x86\\_64 and PGI 6.2-5 or if the problem is caused by Cray specific aspects, i.e. PGI 6.2-5 on XT3/4.\r\nThanks Peter and Dave for any help you may be able to offer,\r\n-Gerhard\r\n\r\n",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "PGI 6.2 issue on Cray XT3/4",
  "discussion_thread": {
    "_id": "8dc0195e",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=562208\nOriginator: NO\n\nThis is noted as a known bug.",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-08-13 20:52:35",
        "slug": "1612",
        "subject": "#3 PGI 6.2 issue on Cray XT3/4"
      },
      {
        "text": "- **labels**: 880647 --> 473027\n- **milestone**: 367128 --> 287002",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-08-13 20:52:35",
        "slug": "8fb2",
        "subject": "#3 PGI 6.2 issue on Cray XT3/4"
      },
      {
        "text": "- **milestone**: 287002 --> 166456",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2007-08-13 20:55:52",
        "slug": "acbe",
        "subject": "#3 PGI 6.2 issue on Cray XT3/4"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-29 21:05:30",
        "slug": "b4a5",
        "subject": "#3 PGI 6.2 issue on Cray XT3/4"
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nWe are still supporting PGI 6.2.\\* and this problem still exists.\r\nreporting something as a known bug does \\*NOT\\* mean we can close\r\nthe ticket.  This should remain open until, for example, we only\r\nsupport PGI 7+.\r\n\r\n\\-- Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-08-29 21:27:14",
        "slug": "d0b2",
        "subject": "#3 PGI 6.2 issue on Cray XT3/4"
      },
      {
        "text": "- **milestone**: 166456 --> 166455\n- **status**: closed --> open",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-08-29 21:27:15",
        "slug": "99e4",
        "subject": "#3 PGI 6.2 issue on Cray XT3/4"
      },
      {
        "text": "- **summary**:  Internal error problem  on Cray XT3/4 --> PGI 6.2 issue on Cray XT3/4",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2007-08-29 21:54:39",
        "slug": "ee75",
        "subject": "#3 PGI 6.2 issue on Cray XT3/4"
      },
      {
        "text": "- **assigned_to**: theurich --> nobody\n- **milestone**: 166455 --> \n- **labels**: 473027 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-07 18:30:10",
        "slug": "3fbc",
        "subject": "#3 PGI 6.2 issue on Cray XT3/4"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2007-12-07 18:30:10",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d32b82718463761fc201f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/8dc0195e/",
  "ticket_num": 3,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2007-06-08 22:02:27"
},{
  "status": "open-duplicate",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "This bug reported on release ESMF\\_3\\_0\\_2 as a known bug:\r\n\r\nESMF fails to build on Cray XT3/XT4 with PGI 6.2.5 with an internal compiler error.\r\n\r\n",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "Cray XT3/4 PGI 6.2.5 fails build with internal compile error",
  "discussion_thread": {
    "_id": "a7861f04",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nDuplicate with vendor bug 1733822.",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-14 17:38:23",
        "slug": "76bf",
        "subject": "#4 Cray XT3/4 PGI 6.2.5 fails build with internal compile error"
      },
      {
        "text": "- **labels**: 473023 --> \n- **milestone**: 166455 --> \n- **status**: open --> open-duplicate",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-14 17:38:23",
        "slug": "efc1",
        "subject": "#4 Cray XT3/4 PGI 6.2.5 fails build with internal compile error"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2007-12-14 17:38:23",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d32c02718463761fc204e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/a7861f04/",
  "ticket_num": 4,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2007-06-11 17:12:00"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Gerhard Theurich\r\n\r\nAfter the Columbia compiler/mpt/OS upgrade all ESMF releases we tested are failing in -g mode\\! I was able to isolate the problem in a little non-ESMF test program and will file a bug with NAS/SGI/Intel. This ticket will be used to track communications and updates on the status of this issue.\r\n\r\nOn the ESMF side of things I put a work-around patch into State and \"old\" Grid on the ESMF\\_2\\_2\\_2branch and for State on the HEAD of the trunk \\(currently ESMF\\_3\\_1\\_0\\_beta\\_snapshot phase\\). We should be able to pull the patch out from the trunk again after this issue is fixed by the vendor.\r\n\r\n\\*gjt\\*\r\n",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "COLUMBIA_BUG: bug in Intel Fortran compiler with OS upgrade",
  "discussion_thread": {
    "_id": "548bb48e",
    "posts": [
      {
        "text": "- **labels**: 473027 --> \n- **milestone**: 656936 --> \n- **assigned_to**: theurich --> nobody",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2007-12-07 18:26:50",
        "slug": "4251",
        "subject": "#5 COLUMBIA_BUG: bug in Intel Fortran compiler with OS upgrade"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2007-12-07 18:26:50",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d32c52718463761fc205f",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/548bb48e/",
  "ticket_num": 5,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2007-10-03 15:44:50"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "Since Walter's changed in ESMF\\_StringUTest.F90 to use &lt;iostream&gt; instead of &lt;stdio.h&gt; execution of this unit test crashes on the Cray X1. It looks like an initialization issue, but we are already using the CC linker front end for linking. We will need to get in contact with Cray compiler people to sort things out.\r\n\r\nFollowing is the last email exchange on the topic:\r\n\r\n\\*gjt\\*\r\n\r\n\r\nGerhard,\r\n\r\nI think it is time to send an email to pjj@cray.com.  Maybe he has some\r\nsuggestions.  I probably still know a few other folks within the\r\ncompiler/library group there, but lets start with Pete.\r\n\r\nWalter\r\n\r\n\\-----Original Message-----\r\nFrom: Gerhard Theurich \\[mailto:theurich@sourcespring.net\\] \r\nSent: Thursday, January 24, 2008 2:17 PM\r\nTo: Walter Spector\r\nCc: esmf\\_core Core\r\nSubject: Re: \\[Esmf\\_core\\] Re: ESMF\\_StringUTest.F90 failure on SN702\r\n\r\nWell, I just checked into it and found that we've been using the CC\r\nlinker front \r\nend for a very long time on X1. So it's not just that  :-\\( . Any more good\r\nideas?\r\n-Gerhard\r\n\r\nGerhard Theurich wrote:\r\n\r\n&gt;&gt; Walter,\r\n&gt;&gt; \r\n&gt;&gt; Good point\\! I think we just need to switch over to\r\n&gt;&gt; ESMF\\_F90LINKERDEFAULT = CC\r\n&gt;&gt; like we do for the MIPSPro compilers on IRIX64 \\(for the same reason\\).\r\n\r\nI \r\n\r\n&gt;&gt; will try this as soon as Phoenix comes back this morning \\(I cannot\r\n\r\nreach \r\n\r\n&gt;&gt; ORNL right now...\\). I'll let you know what I find. Thanks,\r\n&gt;&gt; \r\n&gt;&gt; -Gerhard\r\n&gt;&gt; \r\n&gt;&gt; Walter Spector wrote:\r\n&gt;&gt; \r\n&gt;\r\n&gt;&gt;&gt;&gt; Gerhard,\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; I think what is happening, and this seems fairly obvious from the\r\n\r\ntrace\r\n\r\n&gt;&gt;&gt;&gt; that Silverio posted, is that since we have a Fortran main program\r\n&gt;&gt;&gt;&gt; calling C++ routines, some STL initialization is not getting done.\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; Check out chapter 13.4 in the \"Cray C and C++ Reference Manual\":\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;     http://docs.cray.com/books/S-2179-60/\\#toc\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; In it, they make a few brief comments about Fortran-&gt;C/C++ and\r\n&gt;&gt;&gt;&gt; C/C++-&gt;Fortran calls.  In the case of Fortran calling C++, they\r\n\r\nreally\r\n\r\n&gt;&gt;&gt;&gt; seem to ultimately want a C++ main program and use CC to link the\r\n&gt;&gt;&gt;&gt; application...\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; Perhaps there is a routine we can call to get things initialized\r\n&gt;&gt;&gt;&gt; correctly?  \\(Like Intels \"for\\_rtl\\_init\\_\" - which is sometimes needed\r\n\r\nfor\r\n\r\n&gt;&gt;&gt;&gt; C programs that call Fortran routines.\\)\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; If Cray uses static initializers in their libraries, then they may\r\n\r\nneed\r\n\r\n&gt;&gt;&gt;&gt; linker arguments to build in calls to -init/-fini routines.  Perhaps\r\n&gt;&gt;&gt;&gt; this is why chapter 13.4 recommends using CC to link mixed\r\n\r\nFortran/C++\r\n\r\n&gt;&gt;&gt;&gt; apps?\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; So does this answer my question of a couple of weeks ago, when I\r\n\r\nasked\r\n\r\n&gt;&gt;&gt;&gt; about using more STL stuff in ESMF?  Note that if the X1 has a\r\n\r\nserious\r\n\r\n&gt;&gt;&gt;&gt; restriction here, it concerns more than ESMF\\_StringUTest.  There is\r\n&gt;&gt;&gt;&gt; &lt;iostream&gt; style I/O in a number of the C++ routines in\r\n&gt;&gt;&gt;&gt; Infrastructure...\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; Walter\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; -----Original Message-----\r\n&gt;&gt;&gt;&gt; From: Gerhard Theurich \\[mailto:theurich@sourcespring.net\\] Sent: \r\n&gt;&gt;&gt;&gt; Wednesday, January 23, 2008 12:56 PM\r\n&gt;&gt;&gt;&gt; To: Silverio Vasquez; Cecelia DeLuca\r\n&gt;&gt;&gt;&gt; Cc: Walter Spector; esmf\\_core Core\r\n&gt;&gt;&gt;&gt; Subject: Re: ESMF\\_StringUTest.F90 failure on SN702\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; Silverio, Cecelia and Walter,\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; 1\\) This looks identical to what I remember getting on Phoenix when I\r\n&gt;&gt;&gt;&gt; tested it there the other day.\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; 2\\) Our access to Phoenix is scheduled to terminate on 01/28/08, i.e.\r\n&gt;&gt;&gt;&gt; Monday of next week. Silverio will still have SN702 access I guess, \r\n&gt;&gt;&gt;&gt; but I will not\r\n&gt;&gt;&gt;&gt; have access to any X1 after that date \\(I cannot get an SN702\r\n\r\naccount\\).\r\n\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; I bring this up because it may mean that we will need to drop support\r\n&gt;&gt;&gt;&gt; for Cray/X1 with 222rp3 and 310r unless we can fix things within the\r\n\r\nnext\r\n\r\n&gt;&gt;&gt;&gt; couple of days. Even if we do get things working again for 222rp3 and\r\n\r\n\r\n&gt;&gt;&gt;&gt; 310r, it\r\n&gt;&gt;&gt;&gt; will still be a difficult situation to support X1 without access to \r\n&gt;&gt;&gt;&gt; Phoenix. The\r\n&gt;&gt;&gt;&gt; Cray X1 has turned out to be one of the platforms that need a lot of \r\n&gt;&gt;&gt;&gt; TLC and\r\n&gt;&gt;&gt;&gt; special attention with almost anything we change in our code. With \r\n&gt;&gt;&gt;&gt; that track\r\n&gt;&gt;&gt;&gt; record I doubt that we can support it for much longer if all we have \r\n&gt;&gt;&gt;&gt; is SN702\r\n&gt;&gt;&gt;&gt; access to run the regression tests.\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; I know some of the new code on the trunk also has issues on the X1\r\n\r\nand\r\n\r\n&gt;&gt;&gt;&gt; we were thinking of dropping support anyway. If that is the decision,\r\n\r\n\r\n&gt;&gt;&gt;&gt; then I\r\n&gt;&gt;&gt;&gt; guess all is fine. Just that I am afraid of the day that suddenly we \r\n&gt;&gt;&gt;&gt; will need to\r\n&gt;&gt;&gt;&gt; support X1 again for some critical code that wants to run there and\r\n\r\nwe \r\n\r\n&gt;&gt;&gt;&gt; are in no\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; position of quickly fixing it then. It seems easier to nurse X1 along\r\n\r\nas\r\n\r\n&gt;&gt;&gt;&gt; long as we can than to abandon it now and just to revive it again in \r\n&gt;&gt;&gt;&gt; the future.\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; Just wondering...\r\n&gt;&gt;&gt;&gt; -Gerhard\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; Silverio Vasquez wrote:\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt; Gerhard and Walter,\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt; The unit test is failing on the following test:\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt;  \r\n&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n\r\n\\!-----------------------------------------------------------------------\r\n\r\n&gt;&gt;&gt;&gt; -\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt;    \\!NEX\\_UTest\r\n&gt;&gt;&gt;&gt;&gt;&gt;    write\\(failMsg,\\*\\) \"Failure calling c\\_strings with fstr\"\r\n&gt;&gt;&gt;&gt;&gt;&gt;    write\\(name, \\*\\) \"Calling c\\_strings with fstr\"\r\n&gt;&gt;&gt;&gt;&gt;&gt;    call c\\_strings\\(f90ints, f90string2, f90string3, i1, i2, fstr, i3,\r\n\r\n\r\n&gt;&gt;&gt;&gt;&gt;&gt; i4, rc\\)\r\n&gt;&gt;&gt;&gt;&gt;&gt;    call ESMF\\_Test\\(\\(rc .eq. ESMF\\_SUCCESS\\), name, failMsg, result, \r\n&gt;&gt;&gt;&gt;&gt;&gt; ESMF\\_SRCLINE\\)\r\n&gt;&gt;&gt;&gt;&gt;&gt;   \r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt; This is the stdout file:\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt; Traceback for process 186884\\(ssp mode\\) apid 186884.0 on node 0\r\n&gt;&gt;&gt;&gt;&gt;&gt; Process received signal 11 \\(SIGSEGV\\)\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n\r\n\\_\\_CPR123\\_\\_\\_\\_ls\\_\\_tm\\_\\_30\\_Q2\\_3std20char\\_traits\\_\\_tm\\_\\_2\\_c\\_\\_3stdFRQ2\\_3std25bas\r\n\r\n&gt;&gt;&gt;&gt; ic\\_ostre/opt/ctl/CC/5.5.0.9/include/ostream+???\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt;   \\(???\\) at ostream\r\n&gt;&gt;&gt;&gt;&gt;&gt;                c\\_strings\\_+0x00F0 \\(0x1004AF0\\) at ESMC\\_StringSubr.C:48\r\n&gt;&gt;&gt;&gt;&gt;&gt;               stringtest\\_+0x0874 \\(0x1022374\\) at\r\n&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; ESMF\\_StringUTest.F90:77\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt; Fault: Attempt to dereference null pointer: 0x18\r\n&gt;&gt;&gt;&gt;&gt;&gt;  Beginning Test, file ESMF\\_StringUTest.F90, line 35\r\n&gt;&gt;&gt;&gt;&gt;&gt;  NUMBER\\_OF\\_PROCESSORS 2\r\n&gt;&gt;&gt;&gt;&gt;&gt; -- entering f90ints subroutine\r\n&gt;&gt;&gt;&gt;&gt;&gt;  ints= 102,  204,  409,  819\r\n&gt;&gt;&gt;&gt;&gt;&gt;  rc= 0\r\n&gt;&gt;&gt;&gt;&gt;&gt; -- exiting f90ints subroutine\r\n&gt;&gt;&gt;&gt;&gt;&gt;  PASS  Calling f90ints\\(\\) directly from F90, ESMF\\_StringUTest.F90,\r\n&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt; line 57\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt; -- entering f90string2 subroutine\r\n&gt;&gt;&gt;&gt;&gt;&gt;  ints= 102,  204,  409,  819\r\n&gt;&gt;&gt;&gt;&gt;&gt;  strlen = 60\r\n&gt;&gt;&gt;&gt;&gt;&gt;  fstr=0123456789abcdefghijklmnopqrstuvwxyz\r\n&gt;&gt;&gt;&gt;&gt;&gt; -- leaving f90string2 subroutine\r\n&gt;&gt;&gt;&gt;&gt;&gt;  PASS  Calling f90string2\\(\\) directly from F90, ESMF\\_StringUTest.F90,\r\n\r\n\r\n&gt;&gt;&gt;&gt;&gt;&gt; line 64\r\n&gt;&gt;&gt;&gt;&gt;&gt; -- entering f90string3 subroutine\r\n&gt;&gt;&gt;&gt;&gt;&gt;  ints= 102,  204,  409,  819\r\n&gt;&gt;&gt;&gt;&gt;&gt;  strlen = 120\r\n&gt;&gt;&gt;&gt;&gt;&gt;  fstr=abcdefghijklmnopqrstuvwxyz0123456789\r\n&gt;&gt;&gt;&gt;&gt;&gt;  strlen2 = 60\r\n&gt;&gt;&gt;&gt;&gt;&gt;  fstr2=0123456789abcdefghijklmnopqrstuvwxyz\r\n&gt;&gt;&gt;&gt;&gt;&gt; -- leaving f90string3 subroutine\r\n&gt;&gt;&gt;&gt;&gt;&gt;  PASS  Calling f90string3\\(\\) directly from F90, ESMF\\_StringUTest.F90,\r\n\r\n\r\n&gt;&gt;&gt;&gt;&gt;&gt; line 71\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n\r\n/ptmp/n11970/script\\_dirs/branch\\_builds/esmf/scripts/mpirun.unicos\\[16\\]:\r\n\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt; 186884 Memory fault\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt; The cstrings file has a print statement below which it never gets\r\n\r\nto:\r\n\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt; void FTN\\(c\\_strings\\)\\(FUNC f90cb, FUNC2 f90cb2, FUNC3 f90cb3,\r\n&gt;&gt;&gt;&gt;&gt;&gt;                    int \\*i1, int \\*i2, char \\*fstr,\r\n&gt;&gt;&gt;&gt;&gt;&gt;                    int \\*i3, int \\*i4, int \\*rc, ESMCI\\_FortranStrLenArg\r\n\r\n\r\n&gt;&gt;&gt;&gt;&gt;&gt; slen\\) \\{\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt;      int ni1, ni2, ni3, ni4;\r\n&gt;&gt;&gt;&gt;&gt;&gt;      int clen, clen2;\r\n&gt;&gt;&gt;&gt;&gt;&gt;      static char \\*newstr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n&gt;&gt;&gt;&gt;&gt;&gt;      static char \\*newstr2 = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n&gt;&gt;&gt;&gt;&gt;&gt;      char tbuf\\[8192\\];\r\n&gt;&gt;&gt;&gt;&gt;&gt;      int result = ESMF\\_SUCCESS;\r\n&gt;&gt;&gt;&gt;&gt;&gt;      int local\\_rc;\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt;      cout &lt;&lt; \"\\n\\n-- entering c\\_strings\" &lt;&lt; endl;\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt; --Silverio\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;&gt;&gt;&gt;\r\n&gt;\r\n&gt;&gt; \\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\r\n&gt;&gt; Esmf\\_core mailing list\r\n&gt;&gt; Esmf\\_core@ucar.edu\r\n&gt;&gt; http://mailman.ucar.edu/mailman/listinfo/esmf\\_cor\r\n\r\ne\r\n",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "X1 problem with <iostream>",
  "discussion_thread": {
    "_id": "9e9caa61",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2008-01-30 18:44:38",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d32c62718463761fc206b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/9e9caa61/",
  "ticket_num": 6,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-01-30 18:44:38"
},{
  "status": "closed-works-for-me",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "I tried to compile the HEAD of the ESMF\\_3\\_1\\_0branch with the latest GCC/gfortran snapshot \\(4.3-20080125\\) and get an ICE in ESMF\\_VM.F90. This file compiles fine in previous versions of GCC/gfortran that I tested, e.g. 4.1.1, 4.1.2, 4.2.2.\r\n\r\nThis is on an x86\\_64 system. I did not test on ia32 or ia64.\r\n\r\nThe log of the ESMF build attempt is attached to this ticket.\r\n\r\nMy understanding is that Walter will file a bug with GCC on this, hoping that this issue may get resolved before the GCC 4.3.0 release comes out.\r\n\r\nThere are more problems with ESMF and GCC/gfortran that I experienced with earlier versions of GCC/gfortran and I will report them in a separate SF ticket. I was trying out the 4.3 snapshot in hopes that some of the earlier problems were fixed. However, the ICE is a regression on the GCC/gfortran part and thus this ticket.\r\n\r\n\\*gjt\\*",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Internal Compiler Error with latest GCC 4.3 snap gfortran",
  "discussion_thread": {
    "_id": "cebedb41",
    "posts": [
      {
        "text": "",
        "attachments": [
          {
            "url": "http://sourceforge.net/p/esmf/vendor-bugs/_discuss/thread/cebedb41/ada3/attachment/log.gmake",
            "bytes": 49840
          }
        ],
        "author": "theurich",
        "timestamp": "2008-01-30 19:45:19",
        "slug": "ada3",
        "subject": "#7 Internal Compiler Error with latest GCC 4.3 snap gfortran"
      },
      {
        "text": "- **assigned_to**: nobody --> w6ws",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-01-30 19:47:13",
        "slug": "ad8f",
        "subject": "#7 Internal Compiler Error with latest GCC 4.3 snap gfortran"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nThe current gfortran 4.3.1 which is distributed by the gfortran developers is compiling ESMF 3.1.0r with no problems.  We did have to fix a pointer definition problem in ESMF in order to get the x86\\_64 small memory model to work correctly.  This fix has been included in 3.1.0r.\r\n\r\nPlease note that on Linux, various distributions may build the gcc in their own ways.  For example, the SUSE version may not be exactly the same as a Red Hat version at the same level.  So if there is a future problem with some version of gfortran, we should also try to ascertain which distribution it was built under.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-09 00:36:31",
        "slug": "bca4",
        "subject": "#7 Internal Compiler Error with latest GCC 4.3 snap gfortran"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-09 00:36:31",
        "slug": "88b3",
        "subject": "#7 Internal Compiler Error with latest GCC 4.3 snap gfortran"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: YES\n\nClosing this after I verified that the latest GCC version, 4.3.1, built from source, works 100% clean with ESMF 3.1.0r on my system.\r\n-Gerhard",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-10 22:11:25",
        "slug": "43ef",
        "subject": "#7 Internal Compiler Error with latest GCC 4.3 snap gfortran"
      },
      {
        "text": "- **status**: pending --> closed-works-for-me",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-10 22:11:25",
        "slug": "f8c4",
        "subject": "#7 Internal Compiler Error with latest GCC 4.3 snap gfortran"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2008-07-10 22:11:25",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d32c82718463761fc2072",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/cebedb41/",
  "ticket_num": 7,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-01-30 19:45:16"
},{
  "status": "closed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "Ran totalview on Discover on system test ESMF\\_ArrayRedistSTest.F90\r\n\r\nESMF\\_COMPILER-intel\r\nESMF\\_COMM=intelmpi\r\n\r\nThe leak is at line 74, 168 bytes block 4.1\r\n\r\n\r\n",
  "labels": [],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "MEM: Memory leak with internal write on Discover ",
  "discussion_thread": {
    "_id": "a1e97287",
    "posts": [
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-03-24 18:43:18",
        "slug": "4707",
        "subject": "#8 MEM: Memory leak with internal write on Discover "
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nThis is not a legitimate memory leak. TV indicates lines like this:\r\n\r\nwrite\\(failMsg, \\*\\) \"System Test failure\"\r\nwrite\\(testname, \\*\\) \"System Test ESMF\\_ArrayRedistSTest\"\r\n\r\nas leaking.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-03-25 22:54:10",
        "slug": "d710",
        "subject": "#8 MEM: Memory leak with internal write on Discover "
      },
      {
        "text": "- **status**: open --> closed-rejected",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-03-25 22:54:11",
        "slug": "7191",
        "subject": "#8 MEM: Memory leak with internal write on Discover "
      },
      {
        "text": "Logged In: YES \nuser\\_id=79909\nOriginator: NO\n\nMoving over to vendor bugs. - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 19:51:26",
        "slug": "1f11",
        "subject": "#8 MEM: Memory leak with internal write on Discover "
      },
      {
        "text": "- **summary**: MEM: Memory leak in ESMF_ArrayRedistSTest.F90  --> Memory leak with internal write on Discover \n- **milestone**: 155252 --> \n- **labels**: 643206 --> \n- **status**: closed-rejected --> open-later",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 19:51:26",
        "slug": "e8a6",
        "subject": "#8 MEM: Memory leak with internal write on Discover "
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 19:51:56",
        "slug": "d69f",
        "subject": "#8 MEM: Memory leak with internal write on Discover "
      },
      {
        "text": "- **summary**: Memory leak with internal write on Discover  --> MEM: Memory leak with internal write on Discover ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-07-21 17:30:24",
        "slug": "b86b",
        "subject": "#8 MEM: Memory leak with internal write on Discover "
      },
      {
        "text": "Following our new memory leak guide lines this is \\_not\\_ a leak we keep tracking.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-17 22:56:06",
        "slug": "9127",
        "subject": "#8 MEM: Memory leak with internal write on Discover "
      },
      {
        "text": "- **status**: open-later --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-12-17 22:56:06",
        "slug": "0ecd",
        "subject": "#8 MEM: Memory leak with internal write on Discover "
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-12-17 22:56:06",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d32ce2718463761fc209c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/a1e97287/",
  "ticket_num": 8,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-02-12 18:48:08"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Clay Blankenship from the National Space Science and Technology Center Huntsville, AL\r\n\r\n\r\n\r\nHello,\r\nI am trying to compile the ESMF libraries on an Intel Mac with Absoft Fortran Pro 10.0.7.  The \"make\" command runs successfully, but when I run \"make check\", I get the following:\r\n\r\n\r\nsolstice:~/lib/esmf blankenship$ make check\r\n\r\n\\--------------------------------------------------------------\r\nMake version:\r\nGNU Make 3.80\r\nCopyright \\(C\\) 2002  Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.\r\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A\r\nPARTICULAR PURPOSE.\r\n\r\n\\--------------------------------------------------------------\r\nFortran Compiler version:\r\nAbsoft Pro Fortran 10.0.7\r\nERROR: No input files.\r\n\r\n\\--------------------------------------------------------------\r\nC++ Compiler version:\r\ni686-apple-darwin8-g++-4.0.1 \\(GCC\\) 4.0.1 \\(Apple Computer, Inc. build 5367\\)\r\nCopyright \\(C\\) 2005 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n\\--------------------------------------------------------------\r\nESMF\\_VERSION\\_STRING \"2.2.2rp3\"\r\n\\--------------------------------------------------------------\r\n\r\n\\--------------------------------------------------------------\r\n\\* ESMF environment variables \\*\r\nESMF\\_DIR: /Users/blankenship/lib/esmf\r\nESMF\\_OS:                Darwin\r\nESMF\\_MACHINE:           default\r\nESMF\\_ABI:               32\r\nESMF\\_COMPILER:          absoft\r\nESMF\\_BOPT:              g\r\nESMF\\_COMM:              mpiuni\r\nESMF\\_SITE:              default\r\nESMF\\_EXHAUSTIVE:        OFF\r\nESMF\\_PTHREADS:          ON\r\nESMF\\_TESTWITHTHREADS:   OFF\r\nESMF\\_NO\\_IOCODE:         TRUE\r\nESMF\\_ARRAY\\_LITE:        FALSE\r\nESMF\\_NO\\_INTEGER\\_1\\_BYTE: FALSE\r\nESMF\\_NO\\_INTEGER\\_2\\_BYTE: FALSE\r\n\r\n\\--------------------------------------------------------------\r\n\\* ESMF environment variables pointing to 3rd party software \\*\r\n\r\n\\--------------------------------------------------------------\r\n\\* ESMF environment variables for final installation \\*\r\nESMF\\_INSTALL\\_PREFIX:    ./DEFAULTINSTALLDIR\r\nESMF\\_INSTALL\\_HEADERDIR: include\r\nESMF\\_INSTALL\\_MODDIR:    mod/modg/Darwin.absoft.32.mpiuni.default\r\nESMF\\_INSTALL\\_LIBDIR:    lib/libg/Darwin.absoft.32.mpiuni.default\r\nESMF\\_INSTALL\\_DOCDIR:    doc\r\n\r\n\r\n\\--------------------------------------------------------------\r\n\\* Compilers, Linkers, Flags, and Libraries \\*\r\nLocation of the preprocessor:      /usr/bin/gcc\r\nLocation of the Fortran compiler:  /Applications/Absoft10/bin/f90\r\nLocation of the Fortran linker:    /Applications/Absoft10/bin/f90\r\nLocation of the C++ compiler:      /usr/bin/g++\r\nLocation of the C++ linker:        /usr/bin/g++\r\n\r\nFortran compiler flags:\r\nESMF\\_F90COMPILEOPTS: -g -YEXT\\_NAMES=LCS -YEXT\\_SFX=\\_\r\nESMF\\_F90COMPILEPATHS: -p/Users/blankenship/lib/esmf/mod/modg/Darwin.absoft.32.mpiuni.default -I/Users/blankenship/lib/esmf/src/include\r\nESMF\\_F90COMPILECPPFLAGS:  -DESMF\\_NO\\_IOCODE -DS32=1 -DESMF\\_MPIUNI\r\n\r\nFortran linker flags:\r\nESMF\\_F90LINKOPTS:\r\nESMF\\_F90LINKPATHS: -L/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default\r\nESMF\\_F90LINKRPATHS:\r\nESMF\\_F90LINKLIBS:  -lstdc++\r\nESMF\\_F90ESMFLINKLIBS: -lesmf  -lstdc++\r\n\r\nC++ compiler flags:\r\nESMF\\_CXXCOMPILEOPTS: -g\r\nESMF\\_CXXCOMPILEPATHS: -I/Users/blankenship/lib/esmf/src/include -I/Users/blankenship/lib/esmf/src/Infrastructure/stubs/mpiuni\r\nESMF\\_CXXCOMPILECPPFLAGS: -DESMF\\_NO\\_IOCODE -DS32=1 -D\\_\\_SDIR\\_\\_='' -DESMF\\_MPIUNI\r\n\r\nC++ linker flags:\r\nESMF\\_CXXLINKOPTS:\r\nESMF\\_CXXLINKPATHS: -L/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default -LANG:=f90 -L/Applications/ABSOFT10/lib\r\nESMF\\_CXXLINKRPATHS:\r\nESMF\\_CXXLINKLIBS:  -laf90math -lafio -lamisc -labsoftmain -laf77math -lm -lmv\r\nESMF\\_CXXESMFLINKLIBS: -lesmf  -laf90math -lafio -lamisc -labsoftmain -laf77math -lm -lmv\r\n\r\n\r\n\\--------------------------------------------------------------\r\nCompiling on Wed Mar 19 15:44:31 CDT 2008 on solstice\r\nMachine characteristics: Darwin solstice 8.11.1 Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE\\_I386 i386 i386\r\n==============================================================\r\n\r\nmake clean\\_unit\\_tests clean\\_system\\_tests\r\nrm -rf /Users/blankenship/lib/esmf/test/testg/Darwin.absoft.32.mpiuni.default/\\*UTest\\* /Users/blankenship/lib/esmf/test/testg/Darwin.absoft.32.mpiuni.default/tests.config\r\nrm -rf /Users/blankenship/lib/esmf/test/testg/Darwin.absoft.32.mpiuni.default/\\*STest\\*\r\nMaking directory /Users/blankenship/lib/esmf/test/testg/Darwin.absoft.32.mpiuni.default for test output\r\nsed: /Users/blankenship/lib/esmf/test/testg/Darwin.absoft.32.mpiuni.default/tests.config: No such file or directory\r\nmake config\\_unit\\_tests\r\nmake ACTION=tree\\_build\\_unit\\_tests tree\r\ntree\\_build\\_unit\\_tests in: /Users/blankenship/lib/esmf/src\r\ntree\\_build\\_unit\\_tests in: /Users/blankenship/lib/esmf/src/prologue\r\ntree\\_build\\_unit\\_tests in: /Users/blankenship/lib/esmf/src/prologue/tests\r\ng++ -c -g -I/Users/blankenship/lib/esmf/src/prologue/tests -I/Users/blankenship/lib/esmf/src/prologue/tests/../include  -I/Users/blankenship/lib/esmf/build\\_config/Darwin.absoft.default -I/Users/blankenship/lib/esmf/src/Infrastructure/stubs/pthread -I/Users/blankenship/lib/esmf/src/include -I/Users/blankenship/lib/esmf/src/Infrastructure/stubs/mpiuni -DESMF\\_NO\\_IOCODE -DS32=1 -D\\_\\_SDIR\\_\\_='\"src/prologue/tests\"' -DESMF\\_MPIUNI ESMC\\_StringSubr.C\r\nf90 -c -g -YEXT\\_NAMES=LCS -YEXT\\_SFX=\\_  -I/Users/blankenship/lib/esmf/build\\_config/Darwin.absoft.default -p/Users/blankenship/lib/esmf/mod/modg/Darwin.absoft.32.mpiuni.default -I/Users/blankenship/lib/esmf/src/include   -DESMF\\_NO\\_IOCODE -DS32=1 -DESMF\\_MPIUNI ESMF\\_StringUTest.F90\r\nf90  -L/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default  -o /Users/blankenship/lib/esmf/test/testg/Darwin.absoft.32.mpiuni.default/ESMF\\_StringUTest ESMC\\_StringSubr.o ESMF\\_StringUTest.o -lesmf  -lstdc++\r\n/usr/bin/ld: Undefined symbols:\r\n\\_\\_Unwind\\_Resume\r\n/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default/libesmf.a\\(ESMC\\_FTable\\_F.o\\) reference to undefined \\_\\_Unwind\\_Resume\r\n/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default/libesmf.a\\(ESMC\\_Base\\_F.o\\) reference to undefined \\_\\_Unwind\\_Resume\r\n/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default/libesmf.a\\(ESMC\\_BaseTime\\_F.o\\) reference to undefined \\_\\_Unwind\\_Resume\r\n/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default/libesmf.a\\(ESMC\\_TimeInterval\\_F.o\\) reference to undefined \\_\\_Unwind\\_Resume\r\n/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default/libesmf.a\\(ESMC\\_Time\\_F.o\\) reference to undefined \\_\\_Unwind\\_Resume\r\n/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default/libesmf.a\\(ESMC\\_LocalArray\\_F.o\\) reference to undefined \\_\\_Unwind\\_Resume\r\n/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default/libesmf.a\\(ESMC\\_VM\\_F.o\\) reference to undefined \\_\\_Unwind\\_Resume\r\n/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default/libesmf.a\\(ESMC\\_Array\\_F.o\\) reference to undefined \\_\\_Unwind\\_Resume\r\n/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default/libesmf.a\\(ESMC\\_FTable.o\\) reference to undefined \\_\\_Unwind\\_Resume\r\n/Users/blankenship/lib/esmf/lib/libg/Darwin.absoft.32.mpiuni.default/libesmf.a\\(ESMC\\_Fraction.o\\) reference to undefined \\_\\_Unwind\\_Resume\r\nmore references to undefined symbols ...\r\ncollect2: ld returned 1 exit status\r\nlink failed.\r\nmake\\[5\\]: \\*\\*\\* \\[/Users/blankenship/lib/esmf/test/testg/Darwin.absoft.32.mpiuni.default/ESMF\\_StringUTest\\] Error 1\r\nmake\\[4\\]: \\*\\*\\* \\[tree\\] Error 1\r\nmake\\[3\\]: \\*\\*\\* \\[tree\\] Error 1\r\nmake\\[2\\]: \\*\\*\\* \\[tree\\] Error 1\r\nmake\\[1\\]: \\*\\*\\* \\[build\\_unit\\_tests\\] Error 2\r\nmake: \\*\\*\\* \\[check\\] Error 2\r\n\r\nDo you know what the problem is?\r\n\r\nThanks,\r\nClay Blankenship\r\nUSRA\r\nNational Space Science and Technology Center\r\nHuntsville, AL\r\n\r\n",
  "labels": [],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "Port 222rp3 to Intel Mac w/ Absoft  F (10.0.7) & GCC-NSSCTC",
  "discussion_thread": {
    "_id": "8107a0cb",
    "posts": [
      {
        "text": "- **summary**: Build error --> ESMF 222rp3 on Intel Mac w/ Absoft 10.0.7 at Huntsville",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-03-28 20:11:13",
        "slug": "8ad5",
        "subject": "#9 Port 222rp3 to Intel Mac w/ Absoft  F (10.0.7) & GCC-NSSCTC"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nWe made some progress \\(see Imap folder\\), but there were still some failures on Clay's machine. Notice that IntelMac w/ Absoft is \\_not\\_ a supported platform in 2- and 3- series\\! Then, a period of long silence. Then Clay told us that he switched platforms but would like to get back to IntelMac/Absoft some time in the future. We leave this ticket open, but Bob will handle it now as the NCAR/Darwin support contact.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-14 17:43:49",
        "slug": "4d28",
        "subject": "#9 Port 222rp3 to Intel Mac w/ Absoft  F (10.0.7) & GCC-NSSCTC"
      },
      {
        "text": "- **assigned_to**: theurich --> oehmke",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-14 17:43:49",
        "slug": "d594",
        "subject": "#9 Port 222rp3 to Intel Mac w/ Absoft  F (10.0.7) & GCC-NSSCTC"
      },
      {
        "text": "- **summary**: ESMF 222rp3 on Intel Mac w/ Absoft 10.0.7 at Huntsville --> Port 222rp3 to Intel Mac w/ Absoft  F (10.0.7) & GCC-NSSCTC",
        "attachments": [],
        "author": "murphysj",
        "timestamp": "2008-08-01 15:38:00",
        "slug": "5bdd",
        "subject": "#9 Port 222rp3 to Intel Mac w/ Absoft  F (10.0.7) & GCC-NSSCTC"
      },
      {
        "text": "- **assigned_to**: oehmke --> svasquez",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-03-06 17:31:36",
        "slug": "3579",
        "subject": "#9 Port 222rp3 to Intel Mac w/ Absoft  F (10.0.7) & GCC-NSSCTC"
      },
      {
        "text": "We were waiting for 4.0.0r, which had a compiler bug and the release never ended up working there. As we move to new testing machines we should try to address this compiler bug.  - Cecelia",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-12-18 20:07:07",
        "slug": "0ea7",
        "subject": "#9 Port 222rp3 to Intel Mac w/ Absoft  F (10.0.7) & GCC-NSSCTC"
      },
      {
        "text": "- **labels**: 509038 --> \n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-12-18 20:07:07",
        "slug": "f714",
        "subject": "#9 Port 222rp3 to Intel Mac w/ Absoft  F (10.0.7) & GCC-NSSCTC"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-12-18 20:07:07",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d32d92718463761fc20d0",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/8107a0cb/",
  "ticket_num": 9,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-03-28 15:59:35"
},{
  "status": "pending",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From:  Balaji\r\n\r\nHi\\!\r\n\r\nThe gcc option is -mcmodel medium.  By setting the ESMF\\_ABI environment\r\nvariable to x86\\_64\\_medium, the build procedures should do the right\r\nthing.  Note that this is with the ESMF\\_3\\_1\\_0branch.\r\n\r\nThe note that Cecelia attached was in reference to gfortran 4.3.1.  I\r\nhave also tried the older 4.1.2 gfortran, and got several unit test\r\nfailures.  I So I would definitely steer away from 4.0.3, which might be\r\neven worse\\!\r\n\r\nThe problem that a number of the unit tests are showing with -mcmodel\r\nsmall is that in some derived types, I see a reasonable looking 'this'\r\npointer on the Fortran side, and on the C++ side the same pointer with\r\ntrash in the higher order bits.  When the C++ side dereferences the\r\npointer, the test bombs with a segv.  I see this in a number of the unit\r\ntests, with different derived types.\r\n\r\nWalter\r\n\r\n\\-----Original Message-----\r\nFrom: V. Balaji \\[mailto:V.Balaji@noaa.gov\\] \r\nSent: Friday, May 02, 2008 1:19 PM\r\nTo: Cecelia DeLuca\r\nCc: Walter Spector\r\nSubject: Re: \\[Fwd: RE: \\[Esmf\\_core\\] ESMF\\_3\\_1\\_0branch test results\\]\r\n\r\nHi Walter, you may remember me from Cray/SGI days. Glad to hear you're\r\nworking on ESMF. I'm trying to compile this on gfortran/ia32 and having\r\nthe same compiler error, I think...\r\n\r\nMy version seems to be &lt;4.3...?\r\ntlemcen 4:13pm&gt; gfortran -dumpversion\r\nGNU Fortran 95 \\(GCC 4.0.3 \\(Ubuntu 4.0.3-1ubuntu5\\)\\)\r\n\r\nand I couldn't figure out where to specify mcmodel? It doesn't appear in\r\nthe command line options for gfortran.\r\n\r\nCecelia DeLuca writes:\r\n\r\n\r\n&gt;&gt;\r\n&gt;&gt; Hi,\r\n&gt;&gt; Here is the gfortran compiler version and memory directive that we \r\n&gt;&gt; have been successful with.  I believe some of the earlier compiler \r\n&gt;&gt; versions were problematic.\r\n&gt;&gt;\r\n&gt;&gt; -------- Original Message --------\r\n&gt;&gt; Subject: \tRE: \\[Esmf\\_core\\] ESMF\\_3\\_1\\_0branch test results\r\n&gt;&gt; Date: \tThu, 1 May 2008 15:25:58 -0700\r\n&gt;&gt; From: \tWalter Spector &lt;wws@sgi.com&gt;\r\n&gt;&gt; To: \tSilverio Vasquez &lt;svasquez@ucar.edu&gt;, esmf\\_core Core \r\n&gt;&gt; &lt;Esmf\\_core@ucar.edu&gt;\r\n&gt;&gt; References: \t&lt;E1602A6D-3FE4-4822-A2BC-9E3390E13E5C@ucar.edu&gt; \r\n&gt;&gt; &lt;9BEB932202A05B488722B05D2374A1DA045D32C7@mtv-amer001e--3.americas.sgi\r\n&gt;&gt; .com&gt;\r\n&gt;&gt; &lt;web-16373059@mail.ucar.edu&gt;\r\n&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt; Silverio \\(and all\\),\r\n&gt;&gt;\r\n&gt;&gt; With Gerhards ESMF\\_ArrayBundleEx fix, gfortran 4.3 compiled ESMF is \r\n&gt;&gt; 100% pass on all unit, system, and example tests.  This is with \r\n&gt;&gt; ESMF\\_TESTEXHAUSTIVE too\\!  As mentioned yesterday, the target \r\n&gt;&gt; configuration is x86\\_64 and mcmodel=medium.\r\n&gt;&gt;\r\n&gt;&gt; Still looking into why mcmodel=small isn't working.\r\n&gt;&gt;\r\n&gt;&gt; Walter\r\n&gt;&gt;\r\n&gt;&gt;\r\n&gt;&gt;\r\n\r\n\r\n\\-- V. Balaji Office: +1-609-452-6516 Head, Modeling Systems Group, GFDL Home: +1-212-253-6662 Princeton University Email: v.balaji@noaa.gov ",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "GFORTRAN: Installation of gfortran for Balaji",
  "discussion_thread": {
    "_id": "9ae44f51",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=1762321\nOriginator: NO\n\nHi all\\!\r\n\r\nThanks for the report of success with gfortran 4.3.1\\!  I now have a fully successful gfortran ESMF build on my x86-64 workstation.  We will make the switch from g95 as soon as we finish debugging our current application.\r\n\r\nTo follow up on Walter's comments on older versions of gfortran, I had earlier tried the mcmodel fix with both gfortran 4.1.2 and 4.2.0, and many unit tests failed for both versions.  So, I can confirm that 4.3 is the first version that gives clean tests.\r\n\r\n\\--Tom Wainwright, NOAA Fisheries",
        "attachments": [],
        "author": "twain0435",
        "timestamp": "2008-05-14 16:55:14",
        "slug": "dd42",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nTom,\r\n\r\nI am glad to hear that you now have gfortran working\\!  And thank you for your comments on gfortran 4.2, as I had not tried 4.2 yet.  Additionally, we have found the problem with the default small memory model on x86\\_64.  The fix will be included in our upcoming 3.1.0r release.\r\n\r\nIf you wish to try the default memory model sooner, the fix is a single line change to the ESMC\\_Conf.h file in the build\\_config/Linux.gfortran.default directory.  In the conditional code for the Sx86\\_64\\_small target, specify ESMF\\_IS\\_64BIT\\_MACHINE, rather than ESMF\\_IS\\_32BIT\\_MACHINE.  Then rebuild ESMF from scratch.\r\n\r\nWalter Spector\r\nESMF Core Team\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-05-14 19:18:21",
        "slug": "6e71",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "- **labels**: 509038 --> 904957\n- **milestone**: 155253 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-18 21:23:31",
        "slug": "5c63",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "- **summary**: Problem building on gfortran --> GFORTRAN: Problem building on gfortran\n- **milestone**:  --> 650740",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-06-20 19:03:14",
        "slug": "5af3",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "- **milestone**: 650740 --> \n- **labels**: 904957 --> ",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 20:30:33",
        "slug": "85a7",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "- **summary**: GFORTRAN: Problem building on gfortran --> GFORTRAN: Installation of gfortran for Balaji",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 20:33:19",
        "slug": "5ece",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: NO\n\nPinged Balaji on 7/30/2008.\r\n\r\nWalter\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-30 22:11:49",
        "slug": "a40d",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "Pinged Balaji again.  Also changed to 'pending' status, since the code has been tested, released, and users notified by email.\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-10-08 21:38:42",
        "slug": "9809",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-10-08 21:38:42",
        "slug": "577b",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 14 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2008-10-23 02:21:00",
        "slug": "6a59",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2008-10-23 02:21:00",
        "slug": "5b70",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "back to pending, robot has no clue, changed vendor tracker prefs.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-10-23 15:45:43",
        "slug": "24a7",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-10-23 15:45:43",
        "slug": "ef88",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "This Tracker item was closed automatically by the system. It was\npreviously set to a Pending status, and the original submitter\ndid not respond within 365 days \\(the time period specified by\nthe administrator of this Tracker\\).",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2009-10-24 02:21:13",
        "slug": "20a2",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "- **status**: pending --> closed",
        "attachments": [],
        "author": "sf-robot",
        "timestamp": "2009-10-24 02:21:13",
        "slug": "a206",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "back to pending, robot has not clue,\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-26 17:40:54",
        "slug": "19e6",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      },
      {
        "text": "- **status**: closed --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-26 17:40:54",
        "slug": "e9bb",
        "subject": "#10 GFORTRAN: Installation of gfortran for Balaji"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-10-26 17:40:54",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d32e12718463761fc20fa",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/9ae44f51/",
  "ticket_num": 10,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-05-02 22:53:05"
},{
  "status": "closed-fixed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "Tim Campbell from ADCIRC \r\n\r\n\r\nI'm trying to build 3.1.0r on the IBM system at NAVO.  The ESMF\\_BOPT=g build finishes without issue.  However, the ESMF\\_BOPT=O build hangs while compiling ESMCI\\_DELayout.C.  There is no error message reported.  After awhile the process terminated -- I'm not sure if the termination is due to reaching process time limits on a login node or if it is terminated due to some other internal reason.  Attached is the log file from the build.\r\n\r\n~Tim\r\n",
  "labels": [],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "problem with 3.1.0r build on IBM in OPTLEVEL 3",
  "discussion_thread": {
    "_id": "a005196a",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> oehmke",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2008-06-03 15:01:11",
        "slug": "b637",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "- **assigned_to**: oehmke --> theurich",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-06-04 20:23:47",
        "slug": "fdc8",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "- **priority**: 5 --> 9",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-06-04 20:24:28",
        "slug": "bcb6",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "Logged In: YES \nuser\\_id=340034\nOriginator: NO\n\nTim verified that this only happens with ESMF\\_OPTLEVEL=3. I will need to check into this on one of NCAR's blue machines. Low priority for now.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-06-05 19:15:19",
        "slug": "66f6",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "- **priority**: 9 --> 5",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-06-05 19:15:20",
        "slug": "5d7e",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "- **summary**: problem with 3.1.0r build on IBM --> problem with 3.1.0r build on IBM in OPTLEVEL 3",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-07-17 03:21:51",
        "slug": "6c68",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "- **milestone**: 155253 --> \n- **labels**: 588646 --> 531938",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 15:25:07",
        "slug": "de5c",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "- **milestone**:  --> 166455",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2008-07-18 15:25:55",
        "slug": "ecb3",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "This appears to be an XL C++ compiler bug. We ran into the same issue on frost \\(an IBM Bluegene\\) and reported it to IBM. See ticket \\#2344902 for more details and updates from IBM.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-12-08 17:27:49",
        "slug": "d391",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "- **labels**: 531938 --> \n- **milestone**: 166455 --> ",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-12-08 17:27:49",
        "slug": "f879",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "This issue has been fixed in the latest xlC++ for AIX. Bluefire now runs\r\n\r\nbe1105en% mpCC\\_r -qversion\r\nIBM XL C/C++ for AIX, V10.1\r\nVersion: 10.01.0000.0004\r\n\r\nand both my reproducer code and ESMF\\_4\\_0\\_0r\\_beta\\_snapshot\\_29 compile and run fine with -O3.\r\nNotified Jim Edwards and Tim Campbell.\r\n\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-20 16:15:24",
        "slug": "dbda",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "- **status**: open --> pending",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-20 16:15:25",
        "slug": "8864",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "Tim gave his o.k. to close this ticket.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-21 03:38:12",
        "slug": "2087",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      },
      {
        "text": "- **status**: pending --> closed-fixed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-10-21 03:38:19",
        "slug": "d6da",
        "subject": "#11 problem with 3.1.0r build on IBM in OPTLEVEL 3"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-10-21 03:38:19",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d32f92718463761fc2178",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/a005196a/",
  "ticket_num": 11,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-06-03 14:57:49"
},{
  "status": "closed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "Walter noticed an issue with ESMCI\\_DELayout.C and an experimental Intel compiler.  Walter will isolate the issue and forward to Intel.  Note that this problem does not exist with any released products.",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Intel compiler issue",
  "discussion_thread": {
    "_id": "c70fe342",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: YES\n\nThe problem has to do with how the recursive template processing is done in ESMCI\\_DELayout.  Intel bug report \\#520706 has been submitted by SGI.\r\n\r\nWalter\r\n\r\nNote: A workaround is to turn off compiler optimization.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-08-04 22:55:45",
        "slug": "c50f",
        "subject": "#12 Intel compiler issue"
      },
      {
        "text": "This is still a problem on the released 11.0.061 compiler - both on linux and windows.\r\n\r\nI pinged Intel today to see if they are making any progress on the issue.\r\n\r\nWalter\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-12-06 00:16:54",
        "slug": "3e00",
        "subject": "#12 Intel compiler issue"
      },
      {
        "text": "This is still a problem at 11.0.069.  However as a workaround, use -finline-limit=40.\r\n\r\nAlso a correction: the Intel bug report is \\#510706 \\(not \\#520706.\\)\r\n\r\nWalter",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-01-09 18:14:12",
        "slug": "677d",
        "subject": "#12 Intel compiler issue"
      },
      {
        "text": "Intel reported that this bug has now been fixed as of the 11.0.074 release.  Walter tested both the test case and ESMF with the 11.0.081 release and encountered no problems.\r\n\r\nSince ESMF has successfully worked around the problem, and Intel has closed their Quad, this ticket is now considered closed.\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-04-07 05:34:56",
        "slug": "7cc7",
        "subject": "#12 Intel compiler issue"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-04-07 05:36:28",
        "slug": "c3af",
        "subject": "#12 Intel compiler issue"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-04-07 05:36:28",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33052718463761fc21c5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/c70fe342/",
  "ticket_num": 12,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-07-09 00:07:41"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "The following test case demonstrates a problem with some compilers that are not properly checking intents.  This happens when using an interface block to define a dummy argument for passing subprograms.  The interface of the actual routine being passed is not fully compared to the dummy argument definition.\r\n\r\nCompilers which do not detect the problem include g95 \\(july 22, 2008 version\\), gfortran 4.3.1, and Absoft 9.0a.\r\n\r\nmodule testsub\r\ncontains\r\nsubroutine test\\(sub\\)\r\ninterface\r\nsubroutine sub\\(x\\)\r\ninteger, intent\\(in\\), optional:: x\r\nend subroutine\r\nend interface\r\nprint \\*, \"In test\\(\\), about to call sub\\(\\)\"\r\ncall sub\\(\\)\r\nend subroutine\r\nend module\r\n\r\nmodule sub\r\ncontains\r\nsubroutine subActual\\(x\\)\r\n\\! actual subroutine's argment is different in intent and optional\r\ninteger, intent\\(inout\\):: x\r\nprint \\*, \"In subActual\\(\\):\", x\r\nend subroutine\r\nend module\r\n\r\nprogram interfaceCheck\r\nuse testsub\r\nuse sub\r\n\r\ninteger :: a\r\n\r\ncall test\\(subActual\\)\r\nend program\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Lack of interface checking of intents",
  "discussion_thread": {
    "_id": "328c787f",
    "posts": [
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: YES\n\nEmail sent to Andy V \\(g95 developer\\) on 7/26/2008.\r\n\r\nPR\\# 36947 submitted against gfortran on 7/26/2008.  See http://gcc.gnu.org/wiki/GFortran\\#bugs to view the PR.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-27 04:27:01",
        "slug": "46cd",
        "subject": "#13 Lack of interface checking of intents"
      },
      {
        "text": "Logged In: YES \nuser\\_id=1941748\nOriginator: YES\n\nThis problem was sent to PGI on 7/29/2008 and they verified that their latest compiler also does not find the bug.  Per Dave Borer, they have assigned TPR 15107 to address it.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-07-30 21:47:34",
        "slug": "bcaa",
        "subject": "#13 Lack of interface checking of intents"
      },
      {
        "text": "Tested this with the Intel compiler.  As of Version 11, their compiler detects the mismatch.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-03-19 13:59:26",
        "slug": "e2ea",
        "subject": "#13 Lack of interface checking of intents"
      },
      {
        "text": "The problem has been fixed in gfortran, as of june 2009, in the development version of gfortran 4.5.  Our bugzilla report \\(\\#36947\\) has been closed.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-07-08 15:50:40",
        "slug": "03f9",
        "subject": "#13 Lack of interface checking of intents"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2008-07-27 03:27:19",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d330b2718463761fc21e6",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/328c787f/",
  "ticket_num": 13,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-07-27 03:27:19"
},{
  "status": "closed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "The following demonstrates a problem with current \\(summer/fall 2008\\) snapshots of g95.  It prevents ESMF\\_LocalArrayCreate from compiling:\r\n\r\nsubroutine g95\\_7d\\_bug \\(\\)\r\nreal, pointer :: p\\(:,:,:,:,:,:,:\\)\r\nnullify \\(p\\)\r\nend subroutine\r\n\r\nThe ICE that is reported is:\r\n\r\nInternal error: get\\_dimension\\(\\): Bad array type\r\n\r\nI encountered this with a mid-july 2008 version of g95 \\(both x86-32 linux and cygwin\\), and also a current \\(october 2008\\) version of the linux compiler.  A january 2008 version did not show the ICE.\r\n\r\nReported to Andy V via email on Oct 14, 2008.\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "G95 - ICE when nullifying 7-D array pointers",
  "discussion_thread": {
    "_id": "6bc79aee",
    "posts": [
      {
        "text": "Andy responded that the compiler regression was introduced when he added support for F2008 coarrays.  He has now fixed the bug as of his october 14, 2008 snapshot.\r\n\r\nI have now verified that the latest compiler has compiled and run the entire ESMF trunk test base with zero problems.  \\(Noting that the pointer descriptor has been enlarged, so ESMC\\_Conf.h had to be modified accordingly.\\)  So am closing this ticket.\r\n\r\nI am not sure when the regression was introduced.  However a compiler snapshot from march 2008 worked fine, and one from july 2008 failed - which bounds the problem.\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-10-15 16:02:27",
        "slug": "afdf",
        "subject": "#14 G95 - ICE when nullifying 7-D array pointers"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2008-10-15 16:02:46",
        "slug": "1f43",
        "subject": "#14 G95 - ICE when nullifying 7-D array pointers"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2008-10-15 16:02:46",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d330f2718463761fc2202",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/6bc79aee/",
  "ticket_num": 14,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-10-14 18:50:03"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "The Microsoft version of MPI on Windows CCS 2003 has a couple of problems in the mpi.h and mpif.h header files:\r\n\r\n1.\\) In mpi.h, the \\_\\_int64 data type is used for MPI\\_Offset.  \\(Also MPI\\_Aint for 64-bit ABI.\\)  This is a MS Visual Studio extension, and should use 'long long' instead.  \\(Of course, 'long long' is also an extension in C++, but is far more commonly implemented than \\_\\_int64.\\)\r\n\r\n2.\\) Also, the MS-specific MPIAPI macro, which defines \\_\\_stdcall, is needed in some of our Mesh code \\(in particular in the Zoltan library\\) in order to compile correctly.  Typically this happens where MPI\\_Op\\_create is used to create custom reduction operators.  We need to determine whether it is an ESMF problem \\(by not using a correct MPI macro\\), or a MS problem \\(by them not setting up their macros correctly.\\)\r\n\r\n3.\\) In mpif.h, there is some conditional compilation with uses the Intel-specific \\!DEC$ conditional compilation facility.  This does not work with gfortran.\r\n\r\nWe need to see if these issues have been addressed in MS HPC 2008.\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "MS MPI - mpi.h and mpif.h problems in CCS 2003",
  "discussion_thread": {
    "_id": "42b09500",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2008-11-08 15:56:39",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33112718463761fc2214",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/42b09500/",
  "ticket_num": 15,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-11-08 15:56:39"
},{
  "status": "closed",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "On 11/21/09 the compilers on frost \\(the NCAR/CU IBM bluegene\\) were upgraded to XLC/C++ 9.0 and XLF 11.1. Since this upgrade the ESMF library build is hanging while compiling file ESMCI\\_DELayout.C. I was able to identify two separate issues that cause this problem:\r\n\r\n1\\) Building for bluegene systems requires the use of cross compilers: blrts\\_xlc, blrts\\_xlC, blrts\\_xlf, blrts\\_xlf90. For convenience, IBM also supplies MPI wrappers for these cross compilers: mpxlc, mpxlC, mpxlf, mpxlf90. The ESMF build system uses the MPI wrappers.\r\n\r\nPreviously, i.e. for the XLC/C++ 8.0 installation, the mpxlC script did not specify any special compiler flags, other than MPI related include and linker flags \\(as it should be\\). However, the new mpxlC wrapper for version 9.0 contains setting MPI\\_CXXFLAGS=\" -O3 \" on line 46. It seems inappropriate for an MPI wrapper script to specify any -O level, but -O3 seems especially problematic because, from the mlrts\\_xlC man page: \"\\[t\\]he -O3 specific optimizations have the potential to alter the semantics of a program.\" Further, it is the implicit -O3 flag that leads to the observed complication when compiling the ESMF library with the new mpxlC wrapper. See item \\#2 for details on the -O3 issue wrt ESMF.\r\n\r\n2\\) File ESMCI\\_DELayout.C contains a set of templated recursive functions. Correct implicit template instantiation requires the compiler to resolve the recursive dependencies during compiler time. The blrts\\_xlC correctly instantiates the templated functions through the recursion for optimization level -O0 and -O2, however, blrts\\_xlC starts hanging for -O3 and higher. I observe no difference between XLC/C++ 8.0 and 9.0 in this respect, both start hanging for -O3 and higher when trying to instantiate the recursively used templated function. I am attaching a small reproducer code that demonstrates the issue. Compiling on frost with\r\nblrts\\_xlC -O3 -c templatedRecursion.C\r\nworks, but\r\nblrts\\_xlC -O3 -DBROKEN -c templatedRecursion.C\r\nwill hang in the last 'xlCcode' phase of the compile.\r\nOn the other hand, with lower optimization level even\r\nblrts\\_xlC -O2 -DBROKEN -c templatedRecursion.C\r\nwill compile successfully \\(I inspected the \\*.o file and see that the instantiations were done correctly\\).\r\n\r\nTaking a look at templatedRecursion.C you will see that the -DBROKEN macro activates one more set of types that need to be resolved recursively. It seems that adding this 4th set of types pushes the compiler over an internal limit in -O3 mode.\r\n\r\n\\*gjt\\*",
  "labels": [],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "problems with xlC on frost (bluegene) after compiler upgrade",
  "discussion_thread": {
    "_id": "baab333e",
    "posts": [
      {
        "text": "reproducer code",
        "attachments": [
          {
            "url": "http://sourceforge.net/p/esmf/vendor-bugs/_discuss/thread/baab333e/03d5/attachment/templatedRecursion.C",
            "bytes": 3442
          }
        ],
        "author": "theurich",
        "timestamp": "2008-11-25 18:07:12",
        "slug": "03d5",
        "subject": "#16 problems with xlC on frost (bluegene) after compiler upgrade"
      },
      {
        "text": "CORRECTION: The compiler upgrade was done on 11/21/08\\!\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-11-25 18:09:15",
        "slug": "68e6",
        "subject": "#16 problems with xlC on frost (bluegene) after compiler upgrade"
      },
      {
        "text": "I just realized that we have a ticket open \\(\\#1983642\\) from Tim Campbell regarding the same -O3 XL C++ compiler bug. He experienced this issue on their IBM power/AIX equipment, while we ran into this on IBM bluegene \\(this ticket\\). In both cases the underlying issue is a bug in the XL C++ compiler that IBM is now working on.\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2008-12-08 17:25:25",
        "slug": "f77a",
        "subject": "#16 problems with xlC on frost (bluegene) after compiler upgrade"
      },
      {
        "text": "The problem with recursive templates \\(used in ESMCI\\_DELayout.C's XXE code\\) has been fixed on IBM bluegene \\(frost\\) as of:\r\n\r\n\"IBM XL C/C++ Advanced Edition for Blue Gene/L, V9.0 \r\nVersion: 09.00.0000.0003\"\r\n\r\n\\*gjt\\*",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-06-03 20:31:47",
        "slug": "91ed",
        "subject": "#16 problems with xlC on frost (bluegene) after compiler upgrade"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "theurich",
        "timestamp": "2009-06-03 20:31:48",
        "slug": "f34d",
        "subject": "#16 problems with xlC on frost (bluegene) after compiler upgrade"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-06-03 20:31:48",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33132718463761fc221c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/baab333e/",
  "ticket_num": 16,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-11-25 18:07:12"
},{
  "status": "open",
  "reported_by_id": "4f568833b9363c6a5a000769",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "cdeluca",
  "description": "From: Stan Solomon\r\n\r\nStan reported a problem initiating multiple exectubles on bluefire.  This affects us only peripherally, through the InterComm/ESMF coupling of CAM and TIME-GCM.  I referred him to Jim Edwards, but we should track resolution.\r\n\r\n\r\n",
  "labels": [],
  "assigned_to": "cdeluca",
  "assigned_to_id": "4f568833b9363c6a5a000769",
  "private": false,
  "summary": "multiple executables on bluefire",
  "discussion_thread": {
    "_id": "1e0e484b",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> cdeluca",
        "attachments": [],
        "author": "cdeluca",
        "timestamp": "2009-01-16 18:46:42",
        "slug": "2756",
        "subject": "#17 multiple executables on bluefire"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-01-16 18:46:42",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33162718463761fc2240",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/1e0e484b/",
  "ticket_num": 17,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2008-12-02 19:17:40"
},{
  "status": "open",
  "reported_by_id": "4fec892e1be1ce74e0000017",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "feiliu",
  "description": "We discovered a compiler issue recently with intel compiler compiling esmf Component modules and Component system tests after splitting Field module into relatively smaller pieces. The Component module does not directly depend on the Field module and thus the drastic compilation resource increase \\(over 0.7GB memory and 1.5 hrs on certain platforms\\) is puzzling. We have a temporary workaround that eases compilation by restricting the default inlining with compiler option -finline-limit=100.\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "long compile time of module with intel compiler",
  "discussion_thread": {
    "_id": "6f9d5546",
    "posts": [
      {
        "text": "Assigning it to me \\(Walter\\).\r\n\r\nIt seems that lowering -finline-limit is not helping the problem.  Walter will ask Intel for advice.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-01-07 20:09:32",
        "slug": "7df6",
        "subject": "#18 long compile time of module with intel compiler"
      },
      {
        "text": "- **assigned_to**: nobody --> w6ws",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-01-07 20:09:32",
        "slug": "27ab",
        "subject": "#18 long compile time of module with intel compiler"
      },
      {
        "text": "Looking at profile of where the compiler is spending its time, 97-99% of the time in the problematic files was in the \"Import module\" phase.  This explains why -finline-limit had no effect.\r\n\r\nTesting with the current ifort 11.0.069 did not show the problem.  So it is the older versions of ifort that have the problem.  No bug report to Intel is needed.\r\n\r\nI am leaving this ticket open for the moment in case we figure out some way of making the older compilers work right.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-01-09 18:20:52",
        "slug": "8149",
        "subject": "#18 long compile time of module with intel compiler"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-01-07 20:09:32",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33182718463761fc224c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/6f9d5546/",
  "ticket_num": 18,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-01-07 16:26:55"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "We had an issue where we generated a .so library from a .a library. When linking an application to the .so version, one particular template instantiation was causing an 'undefined symbol' error - even though there was no problem with the .a version of the library.\r\n\r\nWe determined that this was a problem with various 9.1, 10.0, and 10.1 compilers. It appears fixed in the 11.0 IA64 compilers.  Unfortunately Walter found additional 11.x compilers where it was still a problem.\r\n\r\nThe template in question, common\\_objs, was 'declared' in header file ESMCI\\_MeshOBjConn.h, and its point of instantiation preceeded the actual definition and body of the template. A forward reference, if you will. \\(See Stroustrup chapter 13.7.\\) We worked around the problem by inserting an explicit instantiation of the template in ESMCI\\_MeshObjConn.C, and now the older compilers will compile the code too.\r\n\r\nIntel Quad 542167 was submitted asking about known differences between using a .a and a .so when templates are involved.  Walter is working on reducing the failing case to a small test case for a possible bug report.",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "'undefined symbol' error from template instantiation (Intel)",
  "discussion_thread": {
    "_id": "9caef525",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-04-07 06:01:06",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d331b2718463761fc2263",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/9caef525/",
  "ticket_num": 19,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-04-07 06:01:06"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "On the cygwin g95 port, compile times when using ESMF\\_Mod can take several minutes per file - even a trivial one:\r\n\r\nprogram hello\\_esmf\r\nuse esmf\\_mod\r\nimplicit none\r\n\r\ncall esmf\\_initialize \\(\\)\r\nprint \\*, 'hello, ESMF'\r\n\r\nend program\r\n\r\nI also noticed this problem with my \\(unsupported and not checked in\\) IRIX g95 port.\r\nI used the IRIX 'par' utility \\(equivalent to strace on Linux\\), and\r\ndiscovered that it reads the .mod file with offsets 4 bytes from each\r\nprevious read.  Thus, with the 3+ mbyte .mod file, it performs almost\r\n1 million read system calls.  And for every read, there are several\r\nlseeks.\r\n\r\nIt all looks very similar to this complaint on the gg95 group from\r\na couple of years ago:\r\n\r\nhttp://groups.google.com/group/gg95/msg/d0460e242b2d212d\r\n\r\nIn that discussion, the problem was blamed on cygwin.  And indeed,\r\nESMF takes for-ev-er to compile and test on cygwin too.   But the\r\nLinux version runs fast.  By using strace on Linux I can see that the I/O\r\non the module file is being done much more intelligently than on\r\ncygwin or IRIX from the g95 side.  There are only about 600 read\\(2\\)\r\ncalls, vs nearly 1 million on the other systems.\r\n\r\nI sent Andy V an email describing the above on 7/3/2009.\r\n\r\nNote that the compiled code works fine.  Just takes a while to compile.\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "g95 long compile times",
  "discussion_thread": {
    "_id": "afa62886",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-07-08 17:48:31",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d331c2718463761fc226b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/afa62886/",
  "ticket_num": 20,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-07-08 17:48:31"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "JP,\r\n\r\nI have not been able to start the Build & Test system on Kraken because I cannot add Kraken to the pool. I don't think the tg-build pool is installed on Kraken.\r\n\r\nThe instructions I followed to add other platforms to the pool are at:\r\nhttp://www.teragridforum.org/mediawiki/index.php?title=Globus\\_4.0.8\\_Build\\_Instructions\r\n\r\nWhere can I find the candidate release that uses modules. I will be happy to test it.\r\nThanks,\r\n\\--Silverio\r\n\r\nOn May 13, 2009, at 12:27 PM, help@teragrid.org wrote:\r\n\r\nFROM: Navarro, John-Paul\r\n\\(Concerning ticket No. 169784\\)\r\n\r\nSilverio,\r\n\r\nThe Univ of Wisconsin Build & Test \\(Metronome\\) support team has a candidate release that\r\nshould support Modules, and that they'd like us to test.\r\n\r\nHow exactly did Charles have you start the Build & Test system on Kraken? Did you install\r\nthe tg-build tool or did Charles?\r\n\r\nThanks,\r\n\r\nJP Navarro\r\n\r\nSilverio Vasquez &lt;svasquez@ucar.edu&gt; writes:\r\nHello,\r\n\r\nI have attempted to add Kraken to the TeraGrid build & Test platform\r\npool, using the instructions in:\r\n\r\nhttp://www.teragridforum.org/mediawiki/index.php?title=Globus\\_4.0.8\\_Build\\_Instructions\r\nSetting up the Build&Test nodes\r\n\r\nI wasn't able to add Kraken because the application supports only\r\nsoftenv and not modules.\r\nWould you please add Kraken to the TG build & tests platform pool\r\nmanually?\r\nThanks for your help,\r\n\\--Silverio\r\n\r\n",
  "labels": [],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "Adding Kraken to the TG build & Test Pool",
  "discussion_thread": {
    "_id": "40f862c9",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-07-22 21:00:49",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d331e2718463761fc2273",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/40f862c9/",
  "ticket_num": 21,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-07-22 21:00:49"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "On the cygwin g95 port, compile times when using ESMF\\_Mod can take several\r\nminutes per file - even a trivial one:\r\n\r\nprogram hello\\_esmf\r\nuse esmf\\_mod\r\nimplicit none\r\n\r\ncall esmf\\_initialize \\(\\)\r\nprint \\*, 'hello, ESMF'\r\n\r\nend program\r\n\r\nThe reason is that for the ESMF\\_Mod module, which is just over 3 mbytes long, the module loading mechanism issues nearly a million 'read' system calls, along with multiple 'lseek' calls per read.  Each read apparently only uses a few bytes of data.  The g95 compiler has the same problem.  But interestingly, it only seems to happen on cygwin and IRIX.  I suspect it has to do with the compilers being built for 32-bit machines.  The 64-bit linux compilers do not show the problem.\r\n\r\nI posted a question about this on the gfortran email list on 7/9/2009.  \\(See: http://gcc.gnu.org/ml/fortran/2009-07/msg00075.html\\)  I was advised to watch their PR \\#25708 - which addresses module loading problems.\r\n\r\nhttp://gcc.gnu.org/bugzilla/show\\_bug.cgi?id=25708\r\n\r\nNote that the compiled code works fine. Just takes a while to compile",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "gfortran long compile times",
  "discussion_thread": {
    "_id": "73a4e090",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-07-23 02:24:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d331f2718463761fc227a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/73a4e090/",
  "ticket_num": 22,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-07-23 02:24:41"
},{
  "status": "closed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "On the cygwin g95 port, compile times when using ESMF\\_Mod can take several\r\nminutes per file - even a trivial one:\r\n\r\nprogram hello\\_esmf\r\nuse esmf\\_mod\r\nimplicit none\r\n\r\ncall esmf\\_initialize \\(\\)\r\nprint \\*, 'hello, ESMF'\r\n\r\nend program\r\n\r\nThe reason is that for the ESMF\\_Mod module, which is just over 3 mbytes long, the module loading mechanism issues nearly a million 'read' system calls, along with multiple 'lseek' calls per read.  Each read apparently only uses a few bytes of data.  The g95 compiler has the same problem.  But interestingly, it only seems to happen on cygwin and IRIX.  I suspect it has to do with the compilers being built for 32-bit machines.  The 64-bit linux compilers do not show the problem.\r\n\r\nI posted a question about this on the gfortran email list on 7/9/2009.  \\(See: http://gcc.gnu.org/ml/fortran/2009-07/msg00075.html\\)  I was advised to watch their PR \\#25708 - which addresses module loading problems.\r\n\r\nhttp://gcc.gnu.org/bugzilla/show\\_bug.cgi?id=25708\r\n\r\nNote that the compiled code works fine. Just takes a while to compile",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "gfortran long compile times",
  "discussion_thread": {
    "_id": "ae439734",
    "posts": [
      {
        "text": "This ticket was created by accident.  \\(Browser refresh...\\)  Closing.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-07-23 03:04:47",
        "slug": "9f59",
        "subject": "#23 gfortran long compile times"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-07-23 03:04:48",
        "slug": "9f67",
        "subject": "#23 gfortran long compile times"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-07-23 03:04:48",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33202718463761fc2282",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/ae439734/",
  "ticket_num": 23,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-07-23 03:00:05"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "Hi,\r\n\r\nThe Build and Test Service requires that test platforms be added to the test pool:\r\nhttp://tg-t001.uc.teragrid.org/nmi/index.php?page=pool/index\r\n\r\nTo find out the platform type, \"tgwhatami\" can be executed on the platform's command line. As an example,\r\nnstg.ornl.teragrid.org \\(NSTG\\) returns \"linux-suse\\_10.2-ia32\", but the platform test pool lists it as \"x86\\_suse\\_10.2\".\r\nIt would be helpful to the users of the Build and Test Service that \"tgwhatami\" return the same value as listed in the platform test pool.\r\nThanks,\r\n\\--Silverio\r\n",
  "labels": [],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "tgwhatami gives wrong answer",
  "discussion_thread": {
    "_id": "0f9e501a",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-07-23 22:43:38",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33222718463761fc2294",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/0f9e501a/",
  "ticket_num": 24,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-07-23 22:43:38"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "Hi,\r\n\r\nI have been adding platforms to the Build and Test Service at:\r\nhttp://tg-t001.uc.teragrid.org/nmi/index.php?page=pool/index\r\nI'm using the instructions at:\r\nhttp://www.teragridforum.org/mediawiki/index.php?title=Globus\\_4.0.8\\_Build\\_Instructions\r\n\\(The \"Setting up the Build&Test nodes\" is the relevant portion\\)\r\n\r\nThe following platforms the instructions do not work because they have a softenv emulator.\r\nSpur\r\nRanger\r\n\r\nPlease let me know how if there is a workaround.\r\nThanks,\r\n\\--Silverio\r\n",
  "labels": [],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "Adding platforms to the Build and Test Service",
  "discussion_thread": {
    "_id": "b0ce284f",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-07-23 22:44:39",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33242718463761fc229b",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/b0ce284f/",
  "ticket_num": 25,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-07-23 22:44:39"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "Hello,\r\n\r\nDuring the month of April, I added 9 platforms to the Build & Test platform pool:\r\nhttp://build.teragrid.org/nmi/index.php?page=pool/index&MetronomeSessID=9965f308c0803101a550f916cf82f6da\r\nNow there are only two. Why do they disappear?\r\nThanks,\r\n\\--Silverio",
  "labels": [],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "Build & Test platform pool",
  "discussion_thread": {
    "_id": "8813ae60",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> svasquez",
        "attachments": [],
        "author": "svasquez",
        "timestamp": "2009-07-23 22:46:57",
        "slug": "5f8a",
        "subject": "#26 Build & Test platform pool"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-07-23 22:46:57",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33252718463761fc22a2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/8813ae60/",
  "ticket_num": 26,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-07-23 22:45:49"
},{
  "status": "open",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "This is the TeraGrid Build and Test Service Platform from which jobs are submitted.\r\n",
  "labels": [],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "Unable to login to tg-t001.uc.teragrid.org",
  "discussion_thread": {
    "_id": "8b68e557",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-08-05 15:18:46",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33282718463761fc22ae",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/8b68e557/",
  "ticket_num": 27,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-08-05 15:18:46"
},{
  "status": "open",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "I played around with the resoft command and also read its man page on \r\nJazz and discovered that it \\*will\\* work in a sub-dir if \\*no\\* path is \r\nprefixed to the .soft filename\\!  It also works if you specify the full \r\nabsolute pathname \\(e.g. /home/eschwab/.soft-filename\\)  But it doesn't \r\nwork with either \"~/\" or \"../\" prefixed to the .soft filename.  So just \r\n\"resoft .soft-filename\" from anywhere and it should work fine.\r\n\r\nNonetheless, this is peculiar behavior, so I will open up a vendor bug \r\nand report it to the Jazz sys admins.",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "Jazz resoft file path issues",
  "discussion_thread": {
    "_id": "db702598",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-08-05 23:54:29",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d332a2718463761fc22b5",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/db702598/",
  "ticket_num": 28,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-08-05 23:54:29"
},{
  "status": "closed-fixed",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "For debugging with Totalview on Discover, the \"xsub\" command, a variation of the \"qsub\" command, is used.  After recent changes to the DMF \\(dirac\\) facility, there were problems on the Discover login nodes.  This may be related to the fact that \"xsub\" is not currently working - it fails silently, returning to the login node prompt  without acquiring any compute nodes.  Called NCCS support; they acknowledged login node issues and asked to report the xsub problem via their support e-mail, which I did.",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "xsub not working on Discover login nodes",
  "discussion_thread": {
    "_id": "83575464",
    "posts": [
      {
        "text": "NCCS support corrected the problem, and after a period of some instability, the xsub command now appears to be working consistently.",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2009-10-14 20:53:59",
        "slug": "9a4e",
        "subject": "#29 xsub not working on Discover login nodes"
      },
      {
        "text": "- **status**: open --> closed-fixed",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2009-10-14 20:53:59",
        "slug": "c11e",
        "subject": "#29 xsub not working on Discover login nodes"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-10-14 20:53:59",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d332b2718463761fc22bc",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/83575464/",
  "ticket_num": 29,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-09-16 18:28:29"
},{
  "status": "pending-fixed",
  "reported_by_id": "4d9cded00594ca3edf000b09",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "svasquez",
  "description": "WHO: Tony Craig from CCSM\r\n\r\nHi,\r\nI can reproduce the problem too...  I will look into it right now.\r\nWalter -----Original Message-----\r\nFrom: Gerhard Theurich \\[mailto:theurich@sourcespring.net\\] Sent: Friday, November 06, 2009 8:49 AM\r\nTo: Fei Liu; tcraig; esmf\\_support; Walter Spector\r\nCc: Mariana Vertenstein\r\nSubject: problem using esmf\\_mod with \"only\" syntax - WAS: quick esmf\r\nquestion\r\nTony, Fei,\r\nI have not experimented with this. What exactly do you mean by \"does not\r\nwork\" when you use the \"only\" syntax? Are you really \\_only\\_ using the derived\r\ntype ESMF\\_Clock, without any methods in that case? Maybe you are saying\r\nthere is a general issue with \"only\" on the ESMF module? Anyway, I am\r\nforwarding this to support and ask Walter take a look at this. Hope that\r\nis o.k.?\r\n-Gerhard\r\nFei Liu wrote:\r\nHi tony/Gerhard,\r\n\r\nI have found/done the same thing Tony described. I don't know either why this is the case. Perhaps Gerhard can explain this?\r\n\r\nFei\r\n\r\ntcraig wrote:\r\n\r\n\r\nin my experience with the esmf lib,\r\n\r\nuse esmf\\_mod, only : ESMF\\_Clock\r\n\r\ndoes not work.  if i get rid of the \"only\" part, everything is fine.\r\ni'm not sure exactly why it compiles fine without the only but doesn't with.  it might be a difference of whether the reference to the ESMF\\_Clock is resolved at build or link time, by that's just a guess.\r\n\r\nis this behaviour expected?  we are fine removing the only part in our code to accomodate esmf, but just want to make sure that's really\r\nthe appropriate solution.  thanks,\r\n\r\ntony........\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "problem using esmf_mod with \"only\" syntax ",
  "discussion_thread": {
    "_id": "7e6b866f",
    "posts": [
      {
        "text": "Reassigning to Walter per Cecelia.  This appears to be a vendor bug.\r\n\r\nI wrote a new unit test for 30+ ESMF data type definitions.  Of those over 20 have the same problem as ESMF\\_Clock.  This test compiles fine with Intel and g95 compilers, and IMHO, is totally Standard conforming.  The test case has been provided to Jim Edwards of IBM.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-11-13 23:37:58",
        "slug": "79a2",
        "subject": "#30 problem using esmf_mod with \"only\" syntax "
      },
      {
        "text": "- **labels**: 588652 --> \n- **milestone**: 495011 --> \n- **assigned_to**: feiliu --> w6ws",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-11-13 23:37:58",
        "slug": "87fd",
        "subject": "#30 problem using esmf_mod with \"only\" syntax "
      },
      {
        "text": "Jim Edwards has provided a \"hot fix\" compiler from IBM which corrects the problem.  It is available on bluefire.  To compile ESMF with it, set:\r\n\r\nexport ESMF\\_F90='xlf90\\_r -tcih -B/contrib/xlf/12\\_091127/exe'\r\n\r\nI tested this on bluefire, using the current trunk, and the test cases now pass.  Sent Tony email on 12/9 of this.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-12-12 00:14:59",
        "slug": "26c2",
        "subject": "#30 problem using esmf_mod with \"only\" syntax "
      },
      {
        "text": "- **status**: open --> pending-fixed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2009-12-12 00:14:59",
        "slug": "2b38",
        "subject": "#30 problem using esmf_mod with \"only\" syntax "
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2009-12-12 00:14:59",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d332f2718463761fc22ce",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/7e6b866f/",
  "ticket_num": 30,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2009-11-06 18:11:40"
},{
  "status": "closed-fixed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "The 'flush' library routine does not seem to be thread safe.  The first indication of this\r\nwas with ESMF\\_DELayoutWorkQueueUTest.  The code would get 'Recursive I/O on unit 6'\r\nerror messages.  We were not using the NAG -thread\\_safe option, so I compiled with it.\r\nThen LOTS of tests started failing with similar messages on various units.  Tracking it\r\ndown, it seems that once the flush call had been made, some form of internal corruption\r\noccured.  Because the very next I/O operation on the unit, even a lowly INQUIRE, would\r\ncause the error to occur.\r\n\r\nSwitching the code to use F2003 FLUSH statement resolves the problem.  But since this\r\nis only supported from v5.2 onwards, it causes problems for users of older compilers.\r\nOTOH, the problem was only noticed \\(or perhaps just initially\\) noticed with 5.2 668, and\r\nmight be a regression from earlier libraries.  For example, I think 5.2 638 runs clean.\r\n\r\nEmail has been sent to NAG support asking to check on the thread safety of the library\r\ncall.",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "NAG 'flush' library routine seems not thread safe.",
  "discussion_thread": {
    "_id": "164824f4",
    "posts": [
      {
        "text": "Comments from NAG verifying the problem in the FLUSH library routine.\r\n\r\n\\-----Original Message-----\r\nFrom: Ruth Varley \\[mailto:xxxxxxxx\\]\r\nSent: Monday, April 26, 2010 4:42 AM\r\nTo: Walter Spector\r\nSubject: Re: Thread Safety of F90\\_UNIX\\_IO/FLUSH \\(Ref 73108\\)\r\n\r\nHi Walter,\r\n\r\nI regret to say there is a problem with the thread safety of FLUSH in the F90\\_UNIX\\_IO Posix module.  This bug will be fixed, but it will not be possible to apply this change to Release 5.1.\r\n\r\nUsers of Release 5.1 on Linux, Sun, Macs etc, can download Release 5.2 from our web site.\r\n\r\nhttp://www.nag.com/downloads/npdownloads.asp\r\n\r\nTheir existing Release 5.1 licences will continue to work with 5.2.\r\n\r\nHowever, some platforms have been dropped, e.g. Free BSD, and the Windows 5.2 release \\(which is imminent\\) does not share licence key compatibility with 5.1.\r\n\r\nSo most Release 5.1 users can update to 5.2 at no cost.  I would suggest this is the way forward, using the FLUSH statement, as 5.2 offers much better thread-safe I/O.\r\n\r\nPlease also consider if the FLUSH statement is really needed. Sometimes we see code where FLUSH does nothing at all, if this were the case, and FLUSH could be omitted, the problem would be solved.\r\n\r\nRe: Compiler version number in fpp \\(Ref 72865\\)\r\n\r\nWe'll consider adding this in Release 5.3.\r\n\r\nIn the meantime you could use code like this in your scripts/makefiles to differentiate the compiler version.\r\n\r\n$F90 -V 2&gt;&1 | grep \"Release 5.1\" &gt;/dev/null\r\nif \\[ $? -eq 0 \\]; then\r\nF90REL=51\r\nelse\r\nF90REL=52\\_or\\_later\r\nfi\r\n\r\n\r\nBest wishes,\r\n\r\nRuth Varley",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-04-26 16:53:34",
        "slug": "95f7",
        "subject": "#31 NAG 'flush' library routine seems not thread safe."
      },
      {
        "text": "The conditional code for implementing flushing was modified so that NAG will use the F2003 FLUSH statement, rather than library routine.  Since pre-5.2 NAG does not support the statement version, documentation has been placed in the README files informing older users how to enable the library call version.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-04-26 16:57:07",
        "slug": "b48e",
        "subject": "#31 NAG 'flush' library routine seems not thread safe."
      },
      {
        "text": "- **status**: open --> closed-fixed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-04-26 16:57:07",
        "slug": "fd18",
        "subject": "#31 NAG 'flush' library routine seems not thread safe."
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2010-04-26 16:57:07",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33332718463761fc22ea",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/164824f4/",
  "ticket_num": 31,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-04-22 16:12:25"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "Here is a simple synthetic g95 main program and a c++ function.  The c++ function uses exceptions within itself.  For some reason, the exceptions are not caught when using g95 to link to code and work fine when using g++.  Note that this is on cygwin, with the cygwin distributed version of gcc 4.3.4.\r\n\r\nThe main program:\r\n\r\nprogram except\\_test\r\nimplicit none\r\n\r\ninteger :: i, localrc\r\n\r\ndo, i=-5,5\r\ncall cxx\\_function \\(i, localrc\\)\r\nprint \\*, i, ': ', localrc\r\nend do\r\n\r\nend program\r\n\r\nAnd the c++ function:\r\n\r\nextern \"C\" \\{\r\n\r\nvoid cxx\\_function\\_\\_ \\(int \\*i, int \\*rc\\) \\{\r\n\r\n\\*rc = -1;\r\ntry \\{\r\nif \\(\\(\\*i\\)%2\\)\r\nthrow 1;\r\n\\}\r\ncatch \\(int localrc\\) \\{\r\n\\*rc = 42;\r\n\\}\r\ncatch \\(...\\) \\{\r\n\\*rc = \\*i;\r\n\\}\r\n\r\n\\}\r\n\r\n\\}\r\n\r\nHere is the make and test output:\r\n\r\n$ make\r\ng95 -c except\\_test.f90\r\ng++ -c cxx\\_function.c\r\ng++ -o except\\_testc \\*.o -L /usr/local/lib/gcc-lib/i686-pc-cygwin/4.1.1 \r\ng++ -lf95\r\ng95 -o except\\_testf \\*.o -L/usr/lib/gcc/i686-pc-cygwin/4.3.4 -lstdc++ -lgcc\\_s\r\n\r\nAdministrator@headnode /cygdrive/e/wws/cc/except $ make test ./except\\_testc\r\n-5 :  42\r\n-4 :  -1\r\n-3 :  42\r\n-2 :  -1\r\n-1 :  42\r\n0 :  -1\r\n1 :  42\r\n2 :  -1\r\n3 :  42\r\n4 :  -1\r\n5 :  42\r\n./except\\_testf\r\nterminate called after throwing an instance of 'int'\r\nmake: \\*\\*\\* \\[test\\] Aborted \\(core dumped\\)\r\n\r\nAdministrator@headnode /cygdrive/e/wws/cc/except $\r\n\r\nAgain, this is just on cygwin.  We have not seen the problem on linux or Darwin - both running even more recent gcc levels than cygwin.\r\n\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "cygwin g95 exception handling problem",
  "discussion_thread": {
    "_id": "7aebfd81",
    "posts": [
      {
        "text": "Additional info: This problem is causing ESMF\\_MeshUTest to fail on cygwin g95.\r\n\r\nEmail has been sent to Andy Vaught \\(g95 owner/developer\\).",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-05-05 15:46:10",
        "slug": "9996",
        "subject": "#32 cygwin g95 exception handling problem"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2010-05-05 15:43:29",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33352718463761fc2301",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/7aebfd81/",
  "ticket_num": 32,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-05-05 15:43:29"
},{
  "status": "open",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "In ESMCI\\_Attribute.h, the prototype \\(and matching method body in ESMCI\\_Attribute.C\\),\r\n\r\nint AttributeGet\\(int num, string \\*name, ESMC\\_TypeKind \\*tk, int \\*itemCount, ESMC\\_Logical \\*attrAttr\\) const;\r\n\r\nhad its last argument deleted:\r\n\r\nint AttributeGet\\(int num, string \\*name, ESMC\\_TypeKind \\*tk, int \\*itemCount\\) const;\r\n\r\n\r\nHowever, In ESMCI\\_IO\\_NetCDF.C, the call \r\n\r\nthisArray-&gt;root.AttributeGet\\(i, &attName, &attEsmfType, &numAttValues, NULL\\);\r\n\r\ndid not initially have its last argument \\(NULL\\) deleted to match, as it does now:\r\n\r\nthisArray-&gt;root.AttributeGet\\(i, &attName, &attEsmfType, &numAttValues\\);\r\n\r\n\r\nThe Columbia/Intel 11.0.083 C++ compiler produces a fatal compile-time error for this,\r\n\r\n\"ESMCI\\_IO\\_NetCDF.C\\(858\\): error: no instance of overloaded function \"ESMCI::Attribute::AttributeGet\" matches the argument list\r\nargument types are: \\(int, std::string \\*, ESMC\\_TypeKind \\*, int \\*, long\\)\r\nobject type is: ESMCI::Attribute\r\nthisArray-&gt;root.AttributeGet\\(i, &attName, &attEsmfType, &numAttValues,\r\n^\r\n\r\ncompilation aborted for /nobackup2b/scvasque/scripts\\_dir/daily\\_builds/intel/esmf/src/Infrastructure/IO/src/ESMCI\\_IO\\_NetCDF.C \\(code 2\\)\"\r\n\r\nwhereas the g++ compiler, v4.4.0 and up \\(v4.4.2 and v4.5.0\\), compiles this code ok without any error or warning.\r\n\r\nNeed a reproducer and report it to the gcc team.\r\n",
  "labels": [],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "g++ not catching extra NULL arg passed",
  "discussion_thread": {
    "_id": "72ce56c7",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> eschwab",
        "attachments": [],
        "author": "eschwab",
        "timestamp": "2010-10-25 17:49:54",
        "slug": "adb0",
        "subject": "#33 g++ not catching extra NULL arg passed"
      },
      {
        "text": "Great post however I was wanting to know if you could write a litte more on this topic? I'd be very thankful if you could elaborate a little bit more. Cheers\\!\r\nhttp://oakleys9577.wordpress.com/2012/09/18/recognition-fake-oakley-sunglasses/",
        "attachments": [],
        "author": "nobody",
        "timestamp": "2012-09-22 12:03:42",
        "slug": "9c77",
        "subject": "#33 g++ not catching extra NULL arg passed"
      },
      {
        "text": "I love what you guys are usually up too. This kind of clever work and coverage\\! Keep up the wonderful works guys I've  you guys to my blogroll.\r\nNorth Face Jackets Clearance http://northfacestoreoutlet.webmium.com/",
        "attachments": [],
        "author": "nobody",
        "timestamp": "2012-10-19 06:40:52",
        "slug": "71b0",
        "subject": "#33 g++ not catching extra NULL arg passed"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2010-10-25 17:49:54",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d333a2718463761fc230e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/72ce56c7/",
  "ticket_num": 33,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-10-25 17:27:48"
},{
  "status": "closed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "Our LogErr macros can use the predefined \\_\\_FILE\\_\\_ and \\_\\_LINE\\_\\_ macros.  Combined with the fact that our \r\nmakefile system uses absolute path names, the macro expansion can easily push line lengths beyond the 132\r\ncharacter Fortran maximum.\r\n\r\nThis ticket tracks gfortran bug 46405 \\(http://gcc.gnu.org/bugzilla/show\\_bug.cgi?id=46405\\) which I submitted on\r\nbehalf of ESMF.  But note that other compilers have the same problem.",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Line length problems with built-in preprocessing",
  "discussion_thread": {
    "_id": "c11945f7",
    "posts": [
      {
        "text": "The gfortran team decided to simply add documentation to their man page recommending the use of -ffree-line-length-none when using preprocessing.  Since we have already started using -ffree-line-length-none in ESMF, there is no further work required on our part.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-01-13 01:51:26",
        "slug": "6784",
        "subject": "#34 Line length problems with built-in preprocessing"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-01-13 01:51:26",
        "slug": "86ca",
        "subject": "#34 Line length problems with built-in preprocessing"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2011-01-13 01:51:26",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d333e2718463761fc2326",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/c11945f7/",
  "ticket_num": 34,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-11-10 14:01:32"
},{
  "status": "open",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "Need to create a small reproducer for the following and report it to NAG ...\r\n\r\nAt line 3262 of ESMF\\_FieldBundle.F90, cvs r1.62, there are 5 extra spaces at the end of the macro call:\r\n\r\nESMF\\_INIT\\_CHECK\\_DEEP\\(ESMF\\_FieldBundleGetInit,fieldbundle,rc\\)     \r\n\r\nThe pre-processor for the NAG fortran compiler, version 5.2\\(638\\) \\(tested on Discover, but showing the same symptoms on other machines\\), expands this macro as follows, with the garbage characters \"   &\\n\\#3262\" appended.  \\(In cvs r1.63, the extra spaces were deleted and the macro expands ok.\\)\r\n\r\nif \\(ESMF\\_IMErr\\(ESMF\\_FieldBundleGetInit\\(fieldbundle\\),3262,\"ESMF\\_FieldBundle.F90\",\"ESMF\\_FieldBundleSerialize\",rc=rc\\)\\) return   &\r\n\\# 3262\r\n\r\nThis then causes the nagfor compiler to exit with errors:\r\n\r\nError: /discover/nobackup/scvasque/scripts\\_dir/daily\\_builds/nag/esmf/src/Infrastructure/FieldBundle/src/ESMF\\_FieldBundle.F90, line 3265: Syntax error\r\ndetected at \\)@THEN\r\n\\*\\*\\*Malformed statement\r\nError: /discover/nobackup/scvasque/scripts\\_dir/daily\\_builds/nag/esmf/src/Infrastructure/FieldBundle/src/ESMF\\_FieldBundle.F90, line 3267: Unexpected ELSE statement\r\ndetected at ELSE@&lt;end-of-statement&gt;\r\nError: /discover/nobackup/scvasque/scripts\\_dir/daily\\_builds/nag/esmf/src/Infrastructure/FieldBundle/src/ESMF\\_FieldBundle.F90, line 3269: Unexpected ENDIF statement\r\ndetected at END IF@&lt;end-of-statement&gt;\r\n",
  "labels": [],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "NAG pre-processor appends garbage",
  "discussion_thread": {
    "_id": "afcf66ce",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2010-11-10 23:00:12",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33402718463761fc2338",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/afcf66ce/",
  "ticket_num": 35,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-11-10 23:00:12"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "If a function returns a derived type that uses F95 component initializers, Absoft 9.0a does not\r\ncorrectly compile the code.  Results range from uninitialized components to internal compiler\r\nerrors.  This forces us to use the ESMF\\_NO\\_INITIALIZERS code in the appropriate Absoft\r\nESMF\\_Conf.inc files.\r\n\r\nWe need to find out which level of Absoft this was fixed at.\r\n\r\nmodule hello\\_mod\r\nimplicit none\r\n\r\ntype wws\\_t\r\ninteger :: forty\\_two = 42\r\nend type\r\n\r\ncontains\r\n\r\nfunction wws\\_func \\(\\)\r\ntype\\(wws\\_t\\) :: wws\\_func\r\n\r\nend function\r\n\r\nend module\r\n\r\nprogram hello\r\nuse hello\\_mod\r\nimplicit none\r\n\r\nprint \\*, 'hello, world\\!'\r\nprint \\*, 'function return: ', wws\\_func \\(\\)\r\n\r\nend program\r\n\r\nWhen compiled and run with Absoft 9.0a, produces:\r\n\r\nsauron$ f90 der\\*90\r\n\r\nfunction wws\\_func \\(\\)\r\n^\r\ncf90-287 f90fe64: WARNING WWS\\_FUNC, File = derived\\_type\\_bug.f90, Line = 10, Colu\r\nmn = 12\r\nThe result of function name \"WWS\\_FUNC\" in the function subprogram is not defin\r\ned.\r\n\r\nf90: Copyright Absoft Corporation 1994-2004; Absoft Fortran Compiler Version 9.0\r\na\r\nf90fe: 24 source lines\r\nf90fe: 0 Errors, 1 Warnings, 0 Other messages, 0 ANSI\r\nsauron$ a.out\r\nhello, world\\!\r\nfunction return:   3\r\nsauron$\r\n\r\nWith a correctly working compiler, it should print '42'.\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Absoft problem with F95 initializers and function returns",
  "discussion_thread": {
    "_id": "1e5aa64c",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> w6ws",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-11-11 23:22:45",
        "slug": "cbab",
        "subject": "#36 Absoft problem with F95 initializers and function returns"
      },
      {
        "text": "Response from Absoft:\r\n\r\nThis is a previously unreported issue. It still exists in all versions. \r\nIt has been forwarded to the compiler development team for resolution.\r\n\r\nRespectfully,\r\nPeter A. Jacobson\r\nAbsoft Corporation\r\nsupport@absoft.com\r\nhttp://www.absoft.com/support.html\r\n\r\nOn 11/11/2010 6:36 PM, Walter Spector wrote:\r\n&gt; Hi,\r\n&gt;\r\n&gt; Using an admittedly old Absoft 9.0a compiler, we found a problem with \r\n&gt; functions that return derived types.  If derived type initializers are \r\n&gt; present in the type definition, the compiler either refuses to \r\n&gt; properly initialize the type, or worse yet, cause an Internal Compiler Error.\r\n&gt;\r\n&gt; Here is a small test case.  Note that the warning message is also \r\n&gt; incorrect - since initializers were present for all of the components:\r\n&gt;\r\n&gt; sauron$ cat derived\\*bug.f90\r\n&gt; module hello\\_mod\r\n&gt;    implicit none\r\n&gt;\r\n&gt;    type wws\\_t\r\n&gt;      integer :: forty\\_two = 42\r\n&gt;    end type\r\n&gt;\r\n&gt; contains\r\n&gt;\r\n&gt;    function wws\\_func \\(\\)\r\n&gt;      type\\(wws\\_t\\) :: wws\\_func\r\n&gt;\r\n&gt;    end function\r\n&gt;\r\n&gt; end module\r\n&gt;\r\n&gt; program hello\r\n&gt;    use hello\\_mod\r\n&gt;    implicit none\r\n&gt;\r\n&gt;    type\\(wws\\_t\\) :: dtvar\r\n&gt;\r\n&gt;    print \\*, 'hello, world\\!'\r\n&gt;    print \\*, 'derived type var: ', dtvar\r\n&gt;    print \\*, 'function return : ', wws\\_func \\(\\)\r\n&gt;\r\n&gt; end program\r\n&gt; sauron$ f95 der\\*90\r\n&gt;\r\n&gt;    function wws\\_func \\(\\)\r\n&gt;             ^\r\n&gt; cf90-287 f90fe64: WARNING WWS\\_FUNC, File = derived\\_type\\_bug.f90, Line \r\n&gt; = 10, Colu mn = 12\r\n&gt;    The result of function name \"WWS\\_FUNC\" in the function subprogram \r\n&gt; is not defin ed.\r\n&gt;\r\n&gt; f90: Copyright Absoft Corporation 1994-2004; Absoft Fortran Compiler \r\n&gt; Version 9.0 a\r\n&gt; f90fe: 27 source lines\r\n&gt; f90fe: 0 Errors, 1 Warnings, 0 Other messages, 0 ANSI sauron$ a.out\r\n&gt;   hello, world\\!\r\n&gt;   derived type var:   42\r\n&gt;   function return :   0\r\n&gt; sauron$\r\n&gt;\r\n&gt; I realize that this is an older compiler, so you have probably fixed \r\n&gt; it by now.  If so, could you tell me the compiler release level where \r\n&gt; it was fixed?  That way we can tell our users to 'use an Absoft \r\n&gt; compiler at release nn.nn or newer'.\r\n&gt;\r\n&gt; Thank you,\r\n&gt;\r\n&gt; Walter Spector\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-11-12 16:11:28",
        "slug": "ab26",
        "subject": "#36 Absoft problem with F95 initializers and function returns"
      },
      {
        "text": "This bug appears to be fixed in the Absoft 11.0.5 release.  Note the first bullet in the 11.0.5 release notes:\r\n\r\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\r\n\\* Release Notes                                                          \\*\r\n\\* Absoft Pro Fortran v11.0.5                                             \\*\r\n\\* Copyright 2005-2010 Absoft Corporation                                 \\*\r\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\r\n\r\n\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\# Fixed in 11.0.5 \\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\\#\r\n\r\n\\* Failure on functions returning derived types with default initialization\r\n\\* Alignment of character strings inside derived types\r\n\\* POINTER variable passed to RANDOM\\_SEED\\(PUT=var\\)\r\n\\* Structure type with allocatable component AND non-allocatable,default value\r\n\\* Array of STRUCTURE inside a MAP inside a MAP inside a UNION inside a STRUCT\r\n\\* VAX style STRUCTUREs with UNIONS allowed in unformatted I/O\r\n\\* Using -static option with -apo option works correctly\r\n\\* -Rp option no longer reports false errors for the ALLOCATED\\(\\) function\r\n\\* -Ra and -Rn options ignore compiler generated arguments for validation\r\n\\* Fx3 seg-fault from DWARF4 line number information in gfortran 4.5 code\r\n\\* Front-end crash when syntax checking module with errors\r\n\\* Incorrect error diagnostic for nested SELECT CASE",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-03-28 15:57:31",
        "slug": "5874",
        "subject": "#36 Absoft problem with F95 initializers and function returns"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2010-11-11 23:22:45",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33422718463761fc2340",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/1e5aa64c/",
  "ticket_num": 36,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-11-11 23:22:14"
},{
  "status": "closed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "If a function returns a derived type that uses F95 component initializers, Absoft 9.0a does not\r\ncorrectly compile the code.  Results range from uninitialized components to internal compiler\r\nerrors.  This forces us to use the ESMF\\_NO\\_INITIALIZERS code in the appropriate Absoft\r\nESMF\\_Conf.inc files.\r\n\r\nWe need to find out which level of Absoft this was fixed at.\r\n\r\nmodule hello\\_mod\r\nimplicit none\r\n\r\ntype wws\\_t\r\ninteger :: forty\\_two = 42\r\nend type\r\n\r\ncontains\r\n\r\nfunction wws\\_func \\(\\)\r\ntype\\(wws\\_t\\) :: wws\\_func\r\n\r\nend function\r\n\r\nend module\r\n\r\nprogram hello\r\nuse hello\\_mod\r\nimplicit none\r\n\r\nprint \\*, 'hello, world\\!'\r\nprint \\*, 'function return: ', wws\\_func \\(\\)\r\n\r\nend program\r\n\r\nWhen compiled and run with Absoft 9.0a, produces:\r\n\r\nsauron$ f90 der\\*90\r\n\r\nfunction wws\\_func \\(\\)\r\n^\r\ncf90-287 f90fe64: WARNING WWS\\_FUNC, File = derived\\_type\\_bug.f90, Line = 10, Colu\r\nmn = 12\r\nThe result of function name \"WWS\\_FUNC\" in the function subprogram is not defin\r\ned.\r\n\r\nf90: Copyright Absoft Corporation 1994-2004; Absoft Fortran Compiler Version 9.0\r\na\r\nf90fe: 24 source lines\r\nf90fe: 0 Errors, 1 Warnings, 0 Other messages, 0 ANSI\r\nsauron$ a.out\r\nhello, world\\!\r\nfunction return:   3\r\nsauron$\r\n\r\nWith a correctly working compiler, it should print '42'.\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Absoft problem with F95 initializers and function returns",
  "discussion_thread": {
    "_id": "af1d7980",
    "posts": [
      {
        "text": "Close accidentally created duplicate.  \\(Darn browser 'back' button...\\)",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-11-12 00:09:54",
        "slug": "460f",
        "subject": "#37 Absoft problem with F95 initializers and function returns"
      },
      {
        "text": "- **assigned_to**: nobody --> w6ws\n- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2010-11-12 00:09:54",
        "slug": "37ca",
        "subject": "#37 Absoft problem with F95 initializers and function returns"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2010-11-12 00:09:54",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33472718463761fc2357",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/af1d7980/",
  "ticket_num": 37,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-11-12 00:07:08"
},{
  "status": "open",
  "reported_by_id": "519d016be88f3d628adf1e1f",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "eschwab",
  "description": "If a blank line is inserted before the last line of the ObjectID list in ESMF\\_UtilTypes.F90,\r\n\r\nfrom \r\nESMF\\_ID\\_XGRID          = ESMF\\_ObjectID\\(33, \"ESMF\\_XGrid\"\\), &\r\nESMF\\_ID\\_NONE           = ESMF\\_ObjectID\\(99, \"ESMF\\_None\"\\)\r\n\r\nto\r\nESMF\\_ID\\_XGRID          = ESMF\\_ObjectID\\(33, \"ESMF\\_XGrid\"\\), &\r\n\r\nESMF\\_ID\\_NONE           = ESMF\\_ObjectID\\(99, \"ESMF\\_None\"\\)\r\n\r\nthe nagfor 5.2 compiler will exit with:\r\n\\(other compilers like gfortran and intel compile it just fine\\)\r\n\r\nError: /discover/nobackup/eschwab/esmf/src/Infrastructure/Util/src/ESMF\\_UtilTypes.F90, line 272: Syntax error\r\ndetected at ,@&lt;end-of-statement&gt;\r\n\\*\\*\\*Invalid item in type declaration\r\n\\*\\*\\* Malformed statement\r\nError: /discover/nobackup/eschwab/esmf/src/Infrastructure/Util/src/ESMF\\_UtilTypes.F90, line 1208: Implicit type for ESMF\\_ID\\_NONE\r\ndetected at ESMF\\_UTILTYPESMOD@&lt;end-of-statement&gt;\r\n\\[NAG Fortran Compiler pass 1 error termination, 2 errors, 1 warning\\]\r\n\r\nNeed small reproducer and report to NAG.",
  "labels": [],
  "assigned_to": "eschwab",
  "assigned_to_id": "519d016be88f3d628adf1e1f",
  "private": false,
  "summary": "NAG 5.2 error exits on blank lines in parameter continuation",
  "discussion_thread": {
    "_id": "911e8de0",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2010-11-13 00:38:49",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33472718463761fc2369",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/911e8de0/",
  "ticket_num": 38,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2010-11-13 00:38:49"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "When the ESMF library build attempts to build shared libraries with PGI and mpich, sometimes we get error messages during the shared library build.  The messages indicate a problem in the mpich library with the errors like \"relocation R\\_X86\\_64\\_32 against \\`a local symbol '...\"\r\n\r\nThe problem can be resolved by correctly building mpich as a shared library.  The PGI web page describing how to build mpich \\(http://www.pgroup.com/resources/mpich/mpich126\\_pgi60.htm\\) does not describe this well.  In particular, the PGI compiler wants the build process to use -fpic, whereas the normal mpich build process uses -fPIC.\r\n\r\nTo build a PGI version of mpich, one has to configure it with something like:\r\n\r\nenv CFLAGS=\"-fast -fpic\" CXXFLAGS=\"-fast -fpic\" \\\r\nFFLAGS=\"-fast -fpic\" F90FLAGS=\"-fast -fpic\" LDFLAGS=\"-fast\" \\\r\nOPTFLAGS=\"-fast\"  CC=\"pgcc\" CXX=\"pgCC\"  \\\r\nF90=\"pgf90\"  FC=\"pgf77\"  CPP=\"pgCC -E\" \\\r\n./configure --prefix=/path/to/install/dir --enable-sharedlibs\r\n\r\nNeed to contact PGI and ask them to update their pages.",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "PGI documentation problem with mpich builds",
  "discussion_thread": {
    "_id": "7b3a254d",
    "posts": [
      {
        "text": "PGI opened request TPR 17594 to address this.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-01-07 00:50:03",
        "slug": "8245",
        "subject": "#39 PGI documentation problem with mpich builds"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2011-01-04 06:25:57",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33472718463761fc2371",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/7b3a254d/",
  "ticket_num": 39,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-01-04 06:25:57"
},{
  "status": "closed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "The following test shows that the PGI version of the F2003 get\\_command\\_argument intrinsic call does not return the correct error status when a too-short character string is provided.  The F2003 Standard states that the intrinsic should return -1 in the status argument \\(f2003 \u00a713.7.42\\).  This appears to be a bug from 7.1 all the way through 11.0:\r\n\r\nprogram cmdline\r\nimplicit none\r\n\r\ncharacter :: onechar\r\ncharacter\\(128\\) :: arg\r\ninteger :: arg\\_l\r\n\r\ninteger :: i\r\ninteger :: err\r\n\r\ndo, i=0, command\\_argument\\_count\\(\\)\r\ncall get\\_command\\_argument\\(i, onechar, arg\\_l, err\\)\r\nprint \\*, i, ': arg =\"', onechar, '\", arg\\_l =', arg\\_l, ', err =', err\r\nend do\r\n\r\ndo, i=0, command\\_argument\\_count\\(\\)\r\ncall get\\_command\\_argument\\(i, arg, arg\\_l, err\\)\r\nprint \\*, i, ': arg =\"', trim \\(arg\\), '\", arg\\_l =', arg\\_l, ', err =', err\r\nend do\r\n\r\nend program\r\n\r\nGfortran is correct:\r\n\r\nwws@wws-laptop:~/fortran/f2003$ gfortran cmdline.f90 wws@wws-laptop:~/fortran/f2003$ a.out\r\n0 : arg =\"a\", arg\\_l =           1 , err =          -1\r\n0 : arg =\"a.out\", arg\\_l =           5 , err =           0\r\nwws@wws-laptop:~/fortran/f2003$ a.out w wws\r\n0 : arg =\"a\", arg\\_l =           1 , err =          -1\r\n1 : arg =\"w\", arg\\_l =           1 , err =           0\r\n2 : arg =\"w\", arg\\_l =           1 , err =          -1\r\n0 : arg =\"a.out\", arg\\_l =           5 , err =           0\r\n1 : arg =\"w\", arg\\_l =           1 , err =           0\r\n2 : arg =\"wws\", arg\\_l =           3 , err =           0\r\nwws@wws-laptop:~/fortran/f2003$\r\n\r\nHowever PGI is wrong:\r\n\r\nwws@wws-laptop:~/fortran/f2003$\r\nwws@wws-laptop:~/fortran/f2003$ pgf90 cmdline.f90 wws@wws-laptop:~/fortran/f2003$ a.out\r\n0 : arg =\"a\", arg\\_l =            1 , err =            0\r\n0 : arg =\"a.out\", arg\\_l =            5 , err =            0\r\nwws@wws-laptop:~/fortran/f2003$ a.out w wws\r\n0 : arg =\"a\", arg\\_l =            1 , err =            0\r\n1 : arg =\"w\", arg\\_l =            1 , err =            0\r\n2 : arg =\"w\", arg\\_l =            1 , err =            0\r\n0 : arg =\"a.out\", arg\\_l =            5 , err =            0\r\n1 : arg =\"w\", arg\\_l =            1 , err =            0\r\n2 : arg =\"wws\", arg\\_l =            3 , err =            0\r\nwws@wws-laptop:\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "PGI bug in get_command_argument call",
  "discussion_thread": {
    "_id": "30bf7331",
    "posts": [
      {
        "text": "PGI tech support has verified the problem and assigned it TPR 17628.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-01-25 23:37:47",
        "slug": "3572",
        "subject": "#40 PGI bug in get_command_argument call"
      },
      {
        "text": "PGI reports that this bug is fixed as of v11.2.  Mods were made to the ESMF trunk on 3/10/2011 to revert to old-style getarg processing on older compilers.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-03-25 22:21:09",
        "slug": "c6ef",
        "subject": "#40 PGI bug in get_command_argument call"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-03-25 22:21:09",
        "slug": "5b2a",
        "subject": "#40 PGI bug in get_command_argument call"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2011-03-25 22:21:09",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33482718463761fc237e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/30bf7331/",
  "ticket_num": 40,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-01-25 14:28:33"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "When the random\\_seed intrinsic is used with a pointer target, the compiler ICEs.  However using an allocatable array works.  Walter is sending email to Absoft support on it.\r\n\r\nSome email from Gerhard:\r\n\r\nYes, the compiler dies in an ugly way.\r\n\\*gjt\\*\r\n\r\nf90 -c -g -fPIC -m64 -mcmodel=small -YEXT\\_NAMES=LCS -YEXT\\_SFX=\\_ -I/home/ESRL/silverio.vasquez/script\\_dirs/daily\\_builds/absoft/esmf/build\\_config/Linux.absoft.default\r\n-I/home/ESRL/silverio.vasquez/script\\_dirs/daily\\_builds/absoft/esmf/src/Infrastructure\r\n-I/home/ESRL/silverio.vasquez/script\\_dirs/daily\\_builds/absoft/esmf/src/Superstructure\r\n-p/home/ESRL/silverio.vasquez/script\\_dirs/daily\\_builds/absoft/esmf/mod/modg/Linux.absoft.64.mpiuni.default\r\n-I/home/ESRL/silverio.vasquez/script\\_dirs/daily\\_builds/absoft/esmf/src/include\r\n-DESMF\\_NO\\_OPENMP -DESMF\\_TESTEXHAUSTIVE -DSx86\\_64\\_small=1 -DESMF\\_OS\\_Linux=1 -DESMF\\_MPIUNI ESMF\\_LogErrUTest.F90 -o ESMF\\_LogErrUTest.o\r\nSignal: Segmentation fault in IR-&gt;WHIRL Conversion phase.\r\n\"ESMF\\_LogErrUTest.F90\": Error: Signal Segmentation fault in phase IR-&gt;WHIRL Conversion -- processing aborted\r\n\\*\\*\\* Internal stack backtrace:\r\n/export/esmf/absoft/11.0.2/bin/atmod \\[0x80f1771\\]\r\n/export/esmf/absoft/11.0.2/bin/atmod \\[0x80f242c\\]\r\n/export/esmf/absoft/11.0.2/bin/atmod \\[0x80f29be\\]\r\n/export/esmf/absoft/11.0.2/bin/atmod \\[0x80f2dc9\\]\r\n/export/esmf/absoft/11.0.2/bin/atmod \\[0x80d3c1a\\]\r\n\\[0xffffe500\\]\r\n/export/esmf/absoft/11.0.2/bin/atmod \\[0x80aa97c\\]\r\n/export/esmf/absoft/11.0.2/bin/atmod \\[0x8053ea5\\]\r\n/export/esmf/absoft/11.0.2/bin/atmod \\[0x804e585\\]\r\n/export/esmf/absoft/11.0.2/bin/atmod \\[0x804e8d5\\]\r\n/lib/libc.so.6\\(\\_\\_libc\\_start\\_main+0xdc\\) \\[0x4f7e9c\\]\r\n/export/esmf/absoft/11.0.2/bin/atmod \\[0x804ba01\\] atmod failed.\r\n\r\n\r\nWalter Spector wrote:\r\n&gt; Hi Gerhard,\r\n&gt; \r\n&gt; How does it fail?  Does the compiler refuse to compile the code?\r\n&gt; \r\n&gt; Walter\r\n&gt; \r\n&gt; -----Original Message-----\r\n&gt; From: Gerhard Theurich \\[mailto:theurich@sourcespring.net\\]\r\n&gt; Sent: Thursday, March 24, 2011 2:07 PM\r\n&gt; To: Walter Spector\r\n&gt; Cc: esmf\\_core\r\n&gt; Subject: Re: \\[Esmf\\_core\\] Absoft pointer problem with ranset\r\n&gt; \r\n&gt; Hi Walter,\r\n&gt; \r\n&gt; We talked about this during the technical yesterday. Just wanted to \r\n&gt; put this down in an email for the record, and in case you wanted to \r\n&gt; file a vendor ticket on this \\(and maybe give it to Absoft\\). So the \r\n&gt; issue I had found was that when you call\r\n&gt; \r\n&gt;        call random\\_seed\\(put=rndseed\\(1:k\\)\\)\r\n&gt; \r\n&gt; and \"rndseed\" is declared as\r\n&gt; \r\n&gt;        integer, pointer :: rndseed\\(:\\)\r\n&gt; \r\n&gt; it will fail on Absoft 11.0.2. However, when I change it to\r\n&gt; \r\n&gt;        integer, allocatable :: rndseed\\(:\\)\r\n&gt; \r\n&gt; it workes just fine. Clearly this is a compiler bug.\r\n&gt; \r\n&gt; -Gerhard\r\n&gt; \r\n&gt; Walter Spector wrote:\r\n&gt; \r\n&gt;&gt;Gerhard,\r\n&gt;&gt;\r\n&gt;&gt;What problem were you seeing with the pointer?  I guess it must be a \r\n&gt;&gt;compiler regression, since we have not seen it with older versions of \r\n&gt;&gt;Absoft.\r\n&gt;&gt;\r\n&gt;&gt;BTW, I can reproduce the inconsistent ESMF\\_LogErrUTest failure that we \r\n&gt;&gt;have seen with cygwin/g95/mpiuni on my linux/gfortran/mpich2 \r\n&gt;&gt;configuration.  Does not happen as consistently as with the\r\n&gt; \r\n&gt; cygwin/g95,\r\n&gt; \r\n&gt;&gt;but it is there.\r\n&gt;&gt;\r\n&gt;&gt;Walter\r\n&gt;&gt;\r\n&gt;&gt;-----Original Message-----\r\n&gt;&gt;From: esmf\\_commits-bounces@list.woc.noaa.gov\r\n&gt;&gt;\\[mailto:esmf\\_commits-bounces@list.woc.noaa.gov\\] On Behalf Of Gerhard \r\n&gt;&gt;Theurich\r\n&gt;&gt;Sent: Friday, March 18, 2011 1:21 PM\r\n&gt;&gt;To: esmf\\_commits@list.woc.noaa.gov\r\n&gt;&gt;Subject: \\[Esmf\\_commits\\] esmf/src/Infrastructure/LogErr/tests ESMF cvs \r\n&gt;&gt;commit\r\n&gt;&gt;\r\n&gt;&gt;Update of /cvsroot/esmf/esmf/src/Infrastructure/LogErr/tests\r\n&gt;&gt;In directory vz-cvs-4.sog:/tmp/cvs-serv32765\r\n&gt;&gt;\r\n&gt;&gt;Modified Files:\r\n&gt;&gt;\tESMF\\_LogErrUTest.F90\r\n&gt;&gt;Log Message:\r\n&gt;&gt;- work around Absoft \\(11.0.2\\) bug in RANDOM\\_SEED\\(\\)\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Absoft 11.0 bug - RANDOM_SEED combined with a pointer target",
  "discussion_thread": {
    "_id": "70be7de1",
    "posts": [
      {
        "text": "From: Peter A Jacobson \\[mailto:supp\\_paj@absoft.com\\]\r\nSent: Monday, March 28, 2011 3:22 AM\r\nTo: Walter Spector\r\nSubject: Re: \\[esmf-Vendor Bugs-3245207 \\] Absoft 11.0 bug - RANDOM\\_SEED combined with a pointer target\r\n\r\nThis is known issue with V11.0.2. Try downloading and installing the\r\nV11.0.5 service pack here:\r\n\r\nhttp://www.absoft.com/download/F95linux11\\_0\\_5\\_downloads.html\r\n\r\nRespectfully,\r\nPeter A. Jacobson\r\nAbsoft Corporation\r\nsupport@absoft.com\r\nhttp://www.absoft.com/support.html\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-03-28 15:24:06",
        "slug": "22d3",
        "subject": "#41 Absoft 11.0 bug - RANDOM_SEED combined with a pointer target"
      },
      {
        "text": "Absoft reported that this is a known bug in v11.0.2 and has been fixed in 11.0.5.  In the meantime, Gerhard has modified the trunk to use an allocatable array.  Note that since all released versions of ESMF up to v5.2 use the pointer version of the code, any Absoft 11.0.2 user will need to either make the change to the LogErr unit test, or upgrade their compiler.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-03-28 15:31:45",
        "slug": "7039",
        "subject": "#41 Absoft 11.0 bug - RANDOM_SEED combined with a pointer target"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2011-03-25 22:42:46",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33492718463761fc2395",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/70be7de1/",
  "ticket_num": 41,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-03-25 22:42:46"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "The following fails to compile with the Intel 12.0 compilers \\(e.g., v2011.1.107, 2011.2.137, and 011.3.174\\).  It compiles fine with Intel 11.x, gfortran, IRIX MIPSPro, Absoft 9.0, etc.  If the specific procedure is called, rather than the generic name, the code compiles.\r\n\r\nmodule types\r\nimplicit none\r\n\r\ntype mytype\r\ninteger :: xyzzy\r\nend type\r\n\r\nend module\r\n\r\nmodule procs\r\nuse types\r\nimplicit none\r\n\r\ninterface myproc\r\nmodule procedure specific\\_myproc\r\nend interface\r\n\r\ncontains\r\n\r\nsubroutine specific\\_myproc \\(this\\)\r\ntype\\(mytype\\) :: this\r\n\r\nprint \\*, 'myproc: entered'\r\n\r\nend subroutine\r\n\r\nend module\r\n\r\nmodule common\r\nuse procs, only: myproc\r\nuse types, only: mytype\r\nimplicit none\r\n\r\nend module\r\n\r\nsubroutine xyzzy \\(\\)\r\nuse common\r\nimplicit none\r\n\r\ntype\\(mytype\\) :: mydt\r\n\r\ncall myproc \\(mydt\\)\r\n\r\nend subroutine",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "Intel 12.0 - bug with generic procedure call scoping",
  "discussion_thread": {
    "_id": "21d8e329",
    "posts": [
      {
        "text": "This is problem when compiling the PIO portion of ESMF.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-04-13 22:02:37",
        "slug": "7b0d",
        "subject": "#42 Intel 12.0 - bug with generic procedure call scoping"
      },
      {
        "text": "An Intel quad request has been submitted.  It is  issue \\#626761.\r\n\r\nWalter",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-04-13 23:48:04",
        "slug": "7572",
        "subject": "#42 Intel 12.0 - bug with generic procedure call scoping"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2011-04-13 22:00:48",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d334a2718463761fc23a7",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/21d8e329/",
  "ticket_num": 42,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-04-13 22:00:48"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "Attempting to create a named constant which is an array of size zero.  PGI does not like the following - which is legal and accepted by all our other supported compilers:\r\n\r\nprogram zerolen\r\nimplicit none\r\n\r\ninteger :: i\r\ninteger, parameter :: a\\(0\\) = \\(/ \\(i, i=1,0\\) /\\)\r\n\r\ntype ESMF\\_LogMsg\\_Flag\r\nsequence\r\ninteger      :: mtype\r\nend type\r\n\r\ntype\\(ESMF\\_LogMsg\\_Flag\\), parameter ::  ESMF\\_LOG\\_EMPTY\\(0\\) =  &\r\n\\(/ \\(ESMF\\_LogMsg\\_Flag\\(0\\), i=1,0\\) /\\)\r\n\r\nprint \\*, 'size of a =', size \\(a\\)\r\nprint \\*, 'a = ', a\r\n\r\nprint \\*, 'size of ESMF\\_LOG\\_EMPTY =', size \\(ESMF\\_LOG\\_EMPTY\\)\r\nprint \\*, 'ESMF\\_LOG\\_EMPTY = ', ESMF\\_LOG\\_EMPTY\r\n\r\nend program\r\n\r\nWhen compiled with PGI 11.5, the following error is given:\r\n\r\nwws@wws-laptop:~$ pgf90 zerolen.f90\r\nPGF90-W-0435-Array declared with zero size \\(zerolen.f90: 5\\)\r\nPGF90-W-0435-Array declared with zero size \\(zerolen.f90: 12\\)\r\nPGF90-S-0066-Too few data constants in initialization statement \\(zerolen.f90: 5\\)\r\nPGF90-S-0066-Too few data constants in initialization statement \\(zerolen.f90: 12\\)\r\n0 inform,   2 warnings,   2 severes, 0 fatal for zerolen\r\nwws@wws-laptop:~$ pgf90 -V\r\n\r\npgf90 11.5-0 64-bit target on x86-64 Linux -tp core2 \r\nCopyright 1989-2000, The Portland Group, Inc.  All Rights Reserved.\r\nCopyright 2000-2011, STMicroelectronics, Inc.  All Rights Reserved.\r\nwws@wws-laptop:~$ \r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "PGI 11.5 - error with named constant array of size zero",
  "discussion_thread": {
    "_id": "02f0dfec",
    "posts": [
      {
        "text": "PGI reports that it fails at least as far back as their 10.0 release, and I have tried it with 7.1-6 with the same problem.  They are assigning it TPR 17969.  Too late for their 10.7 release.  So maybe 10.8?",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-06-29 03:55:20",
        "slug": "c427",
        "subject": "#43 PGI 11.5 - error with named constant array of size zero"
      },
      {
        "text": "TPR 17969 was reported by PGI as fixed in v12.1.  \\(See: http://www.pgroup.com/support/release\\_tprs\\_2012.htm.\\)  We can conditionally eliminate the ESMF\\_PGI\\_NAMEDCONSTANT\\_BUG macro enabled code in ESMF\\_LogErr.F90 once we can actually compile ESMF with a v12 compiler.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2012-03-20 21:08:12",
        "slug": "f74e",
        "subject": "#43 PGI 11.5 - error with named constant array of size zero"
      },
      {
        "text": "Mods committed to the trunk to conditionally eliminate the ESMF\\_PGI\\_NAMEDCONSTANT\\_BUG macro when compiler version is v12 or higher.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2012-03-22 17:53:35",
        "slug": "99d1",
        "subject": "#43 PGI 11.5 - error with named constant array of size zero"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2011-06-28 18:23:17",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d334b2718463761fc23b9",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/02f0dfec/",
  "ticket_num": 43,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-06-28 18:23:17"
},{
  "status": "open",
  "reported_by_id": null,
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "*anonymous",
  "description": "If the 'value' argument is either not provided, or is optional and not present, the status returned is -1.  This is incorrect.\r\n\r\nwws@w6ws-4:~/fortran/bugs$ cat g95\\_command\\_arg.f90\r\nprogram test\r\nimplicit none\r\n\r\ncharacter\\(32\\) :: string\r\ninteger :: arglen, errstat\r\n\r\ncall gca1 \\(\\)\r\nprint \\*, 'len =', arglen, ', stat = ', errstat\r\n\r\ncall gca2 \\(\\)\r\nprint \\*, 'stat = ', errstat\r\n\r\ncontains\r\n\r\nsubroutine gca1 \\(string\\)\r\ncharacter\\(\\*\\), intent\\(out\\), optional :: string\r\n\r\ncall get\\_command\\_argument \\(number=0,  &\r\nvalue=string, length=arglen,  &\r\nstatus=errstat\\)\r\nend subroutine\r\n\r\nsubroutine gca2 \\(\\)\r\ncall get\\_command\\_argument \\(number=0,  &\r\nlength=arglen,  &\r\nstatus=errstat\\)\r\nend subroutine\r\n\r\nend program\r\n\\[1\\]+  Done                    nedit g95\\*\r\nwws@w6ws-4:~/fortran/bugs$ g95 --version g95\\_command\\_arg.f90\r\nG95 \\(GCC 4.0.3 \\(g95 0.93\\!\\) Aug 17 2010\\)\r\nCopyright \\(C\\) 2002-2008 Free Software Foundation, Inc.\r\n\r\nG95 comes with NO WARRANTY, to the extent permitted by law.\r\nYou may redistribute copies of G95\r\nunder the terms of the GNU General Public License.\r\nFor more information about these matters, see the file named COPYING\r\nwws@w6ws-4:~/fortran/bugs$ a.out\r\nlen = 5 , stat =  -1\r\nstat =  -1\r\nwws@w6ws-4:~/fortran/bugs$ \r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "g95 - optional value argument in get_command_arg",
  "discussion_thread": {
    "_id": "8b89a8ba",
    "posts": [
      {
        "text": "- **assigned_to**: nobody --> w6ws",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-07-07 00:40:52",
        "slug": "f78a",
        "subject": "#44 g95 - optional value argument in get_command_arg"
      },
      {
        "text": "Problem was noted and worked around in ESMF\\_Util.F90.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-07-07 00:41:35",
        "slug": "8f09",
        "subject": "#44 g95 - optional value argument in get_command_arg"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2011-07-07 00:40:52",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d334c2718463761fc23d0",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/8b89a8ba/",
  "ticket_num": 44,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-07-07 00:23:49"
},{
  "status": "closed-fixed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "After adding a new overload to ESMF\\_GridCompSetServices, NAG 5.2 edits 638 and 668 fail to compile the code.  They are apparently not treating the userRoutine argument as a subroutine \\(and maybe because the subroutine has an argument of the type that causes the ambiguous with ESMF\\_GridCompSetServicesComp.\\)  This seems to be fixed in 5.2 711 and 721 - so is clearly a compiler bug.",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "NAG 5.2: Overloading error in older 5.2",
  "discussion_thread": {
    "_id": "28515aeb",
    "posts": [
      {
        "text": "This appears to be fixed in 5.2 versions 711 and 721.  Documenting this in case some user encounters problems with older versions.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-10-26 16:53:40",
        "slug": "76ad",
        "subject": "#45 NAG 5.2: Overloading error in older 5.2"
      },
      {
        "text": "- **status**: open --> closed-fixed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-10-26 16:53:40",
        "slug": "c923",
        "subject": "#45 NAG 5.2: Overloading error in older 5.2"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2011-10-26 16:53:40",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d334d2718463761fc23e2",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/28515aeb/",
  "ticket_num": 45,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-10-26 16:52:40"
},{
  "status": "closed-fixed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "The 11.10 compiler will not compile ESMF\\_StateCreateUTest.F90 when -g is selected.  A very cut down test case follows:\r\n\r\nwws@wws-laptop:~/esmf\\_trunk/src/Superstructure/State/tests$ pgfortran -g -c pgi11.10\\_bug.f90\r\n/tmp/pgfortranNAmc16XKG-\\_z.s: Assembler messages:\r\n/tmp/pgfortranNAmc16XKG-\\_z.s: Error: .size expression for MAIN\\_ does not evaluate to a constant\r\nwws@wws-laptop:~/esmf\\_trunk/src/Superstructure/State/tests$ cat pgi11.10\\_bug.f90\r\nmodule userMethodMod\r\nimplicit none\r\nend module\r\n\r\nprogram ESMF\\_StateCreateUTest\r\nimplicit none\r\n\r\ncontains\r\n\r\nsubroutine print\\_itemlist \\(names\\)\r\ncharacter\\(\\*\\), intent\\(in\\) :: names\\(:\\)\r\n\r\nend subroutine print\\_itemlist\r\n\r\nend program ESMF\\_StateCreateUTest\r\nwws@wws-laptop:~/esmf\\_trunk/src/Superstructure/State/tests$\r\n\r\nReported to PGI on 11/07/2011.\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "PGI 11.10 - won't compile ESMF_StateCreateUTest.F90 with -g",
  "discussion_thread": {
    "_id": "47ce94bf",
    "posts": [
      {
        "text": "I did a google search, and it seems like the problem is being triggered by the latest version of binutils - which includes the assembler.  There are a bunch of hits, for example:\r\n\r\nhttp://old.nabble.com/Error%3A-.size-expression-for-\\_\\_restore\\_rt-does-not-evaluate-to-a-constant-td31749349.html\r\n\r\nSo it looks like the PGI compiler is generating something that the latest assembler is now considering to be an error.\r\n\r\nReported it to PGI.  They assigned it TPR \\#18270, and managed to replicate it.  They reported that it will be fixed in the 12.0 release, which is due out 12/2011.\r\n",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2011-11-23 01:46:52",
        "slug": "3721",
        "subject": "#46 PGI 11.10 - won't compile ESMF_StateCreateUTest.F90 with -g"
      },
      {
        "text": "Confirmed that this has been fixed in the PGI 12.3 compiler.  It appears to have been fixed in v12.1, since the PGI TPR list \\(at: http://www.pgroup.com/support/release\\_tprs\\_2012.htm\\) shows TPR 18270 \"The assembler reports the message, \".size expression for MAIN\\_ does not evaluate to a constant\"\r\nCorrected the .size computation for a program containing an internal procedure. \".",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2012-03-20 20:13:43",
        "slug": "d194",
        "subject": "#46 PGI 11.10 - won't compile ESMF_StateCreateUTest.F90 with -g"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2012-03-20 20:13:43",
        "slug": "4775",
        "subject": "#46 PGI 11.10 - won't compile ESMF_StateCreateUTest.F90 with -g"
      },
      {
        "text": "- **status**: closed --> closed-fixed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2012-03-20 20:14:10",
        "slug": "1f0c",
        "subject": "#46 PGI 11.10 - won't compile ESMF_StateCreateUTest.F90 with -g"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2012-03-20 20:14:10",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d334e2718463761fc23f4",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/47ce94bf/",
  "ticket_num": 46,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-11-07 22:32:14"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "This started with an investigation into the STest hangs on discover/pgi. Was able to track this down to intermittent hangs in MPI\\_Barrier\\(\\) with mvapich2 \\(compiled for the pgi combo\\) when using on a custom communicator. A little MPI reproducer shows the issue and was submitted to NCCS/discover support, who has reported that they were able to reproduce the issue. See email traffic for details.\r\n\\*gjt\\*",
  "labels": [],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Hangs in MPI_Barrier() on discover/pgi/mvapich2",
  "discussion_thread": {
    "_id": "904a42a7",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2011-12-13 17:35:24",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33502718463761fc2410",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/904a42a7/",
  "ticket_num": 47,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-12-13 17:35:24"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "This is basically the same issue as \\#3459095, but for the FUSION system:\r\n\r\nThis started with an investigation into the STest hangs on discover/pgi. Was able to track this down to intermittent hangs in MPI\\_Barrier\\(\\) with mvapich2 \\(compiled for the pgi combo\\) when using on a custom communicator. A little MPI reproducer shows the issue and Silverio submitted it to FUSION support. See email traffic for details.\r\n\\*gjt\\*",
  "labels": [],
  "assigned_to": "svasquez",
  "assigned_to_id": "4d9cded00594ca3edf000b09",
  "private": false,
  "summary": "Hangs in MPI_Barrier() on fusion/pgi/mvapich2",
  "discussion_thread": {
    "_id": "4a9a2c05",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2011-12-23 18:29:46",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33502718463761fc2417",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/4a9a2c05/",
  "ticket_num": 48,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2011-12-23 18:29:46"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "This started as an investigation into why discover/nag/mvapich2 was showing failures for the 520rbranch in ESMF\\_VMGatherUTest.F90. I was able to write a little MPI reproducer for this that shows that the message ordering on the receive side is messed up with mvapich2-1.6 on discover when running across multiple nodes. When running on a single node the order is correct. Submitted this to NCCS/GSFC discover support.\r\n\\*gjt\\*",
  "labels": [],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "Incorrect order in MPI_Gather() results discover/nagmvapich2",
  "discussion_thread": {
    "_id": "f5194281",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2012-01-13 16:46:06",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33512718463761fc241e",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/f5194281/",
  "ticket_num": 49,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-01-13 16:46:06"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "WHO: Peggy Li, ESMF Core Team\r\n\r\nPeggy,\r\n\r\nIt is Valentine at ORNL who is doing the ESMF module installations on jaguarpf. The way he set this up should actually take care of compiler version issues under the cover, so if you come in with pgi/12.1.0 loaded it should pick the correct esmf installation automatically when you load esmf/5.2.0rp1. However, I see that there isn't an ESMF 5.2.0rp1 build for PGI 12.1.0 yet linked to the esmf/5.2.0rp1 module. I will open a ticket and ask Valentine about it.\r\n\r\n-Gerhard\r\n\r\nLi, P Peggy \\(388F\\) wrote:\r\n\r\n&gt; Silverio,\r\n&gt;\r\n&gt; The default PGI library on jaguarpf was changed from 11.10.0 to 12.1.0 on 3/5.  When I tried to remake my benchmark program tonight, I got this undefined reference to pgf90\\_ptr\\_alloc04 error in random places:  --------------\r\n&gt; ftn  -L/autofs/na1\\_home/peggyl/esmf/lib/libO/Unicos.pgi.64.mpi.default -L/opt/cray/netcdf/3.6.2/netcdf-pgi/lib -L/opt/pgi/11.10.0/linux86-64/11.10/lib  -o ESMF\\_ASMMBundleTest e\\_utils.o GridCompDst.o CplCompSrc2Dst.o GridCompSrc.o ESMF\\_ASMMBundleTest.o -lesmf   -pgcpplibs -lnetcdf\\_c++ -lnetcdf\r\n&gt; e\\_utils.o: In function \\`e\\_utils\\_eu\\_check\\_rc\\_':\r\n&gt; /autofs/na1\\_home/peggyl/performance\\_tests/ArrayBundleSMM/ESMF/./e\\_utils.F90:235: undefined reference to \\`pgf90\\_ptr\\_alloc04'\r\n&gt; GridCompDst.o: In function \\`gcdstmod\\_initialize\\_':\r\n&gt; /autofs/na1\\_home/peggyl/performance\\_tests/ArrayBundleSMM/ESMF/./GridCompDst.F90:147: undefined reference to \\`pgf90\\_alloc04'\r\n&gt; GridCompDst.o: In function \\`gcdstmod\\_finalize\\_':\r\n&gt; /autofs/na1\\_home/peggyl/performance\\_tests/ArrayBundleSMM/ESMF/./GridCompDst.F90:263: undefined reference to \\`pgf90\\_alloc04'\r\n&gt; /autofs/na1\\_home/peggyl/performance\\_tests/ArrayBundleSMM/ESMF/./GridCompDst.F90:263: undefined reference to \\`pgf90\\_alloc04'\r\n&gt; /autofs/na1\\_home/peggyl/performance\\_tests/ArrayBundleSMM/ESMF/./GridCompDst.F90:263: undefined reference to \\`pgf90\\_alloc04'\r\n&gt; CplCompSrc2Dst.o: In function \\`ccsrc2dstmod\\_initialize\\_':\r\n&gt; /autofs/na1\\_home/peggyl/performance\\_tests/ArrayBundleSMM/ESMF/./CplCompSrc2Dst.F90:107: undefined reference to \\`pgf90\\_alloc04'\r\n&gt; CplCompSrc2Dst.o:/autofs/na1\\_home/peggyl/performance\\_tests/ArrayBundleSMM/ESMF/./CplCompSrc2Dst.F90:107: more undefined references to \\`pgf90\\_alloc04' follow\r\n&gt; /usr/bin/ld: link errors found, deleting executable \\`ESMF\\_ASMMBundleTest'\r\n&gt; --------------\r\n&gt; I found out that because my ESMF library was made before 3/5, the esmf.mk file is still pointing to /opt/pgi/11.10.0/linux86-64/11.10/lib, and that is why I got the above linking errors.  If we installed ESMF libraries on jaguarpf, we will have to recompile the library, otherwise, the esmf users will see similar errors when they link to the esmf library.\r\n&gt;\r\n&gt; peggy\r\n",
  "labels": [],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "PGI 12.1 support under esmf/5.2.0rp1 module on jaguarpf",
  "discussion_thread": {
    "_id": "860239e8",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2012-03-08 18:41:28",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33512718463761fc2425",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/860239e8/",
  "ticket_num": 50,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2012-03-08 18:41:28"
},{
  "status": "closed",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "The PGI v13.1 c++ compiler ICEs with the following snippet from ESMCI\\_ExceptionsUTest.C:\r\n\r\nclass classWithDestructor\\{\r\nint dummyMember;\r\npublic:\r\n~classWithDestructor\\(\\)\\{\\}\r\n\\};\r\n\r\nvoid classWithDestructorThrow\\(\\)\\{\r\nclassWithDestructor x;\r\nthrow 3;\r\n\\}\r\n\r\nA bug report has been sent to PGI.",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "PGI 13.1 compiler ICE with ESMF exception handling test",
  "discussion_thread": {
    "_id": "c2f85ab3",
    "posts": [
      {
        "text": "PGI has reproduced this,  They are tracking it as TPR 19122.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2013-02-13 14:23:49",
        "slug": "4609",
        "subject": "#51 PGI 13.1 compiler ICE with ESMF exception handling test"
      },
      {
        "text": "This is also a problem in PGI 13.2, so I committed a mod to avoid the problem.\r\n\r\nAlso verified that PGI has fixed their problem in v13.3.",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2013-03-15 01:30:34",
        "slug": "9f8e",
        "subject": "#51 PGI 13.1 compiler ICE with ESMF exception handling test"
      },
      {
        "text": "- **status**: open --> closed",
        "attachments": [],
        "author": "w6ws",
        "timestamp": "2013-03-15 01:30:34",
        "slug": "ba41",
        "subject": "#51 PGI 13.1 compiler ICE with ESMF exception handling test"
      }
    ],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2013-03-15 01:30:34",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33522718463761fc242c",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/c2f85ab3/",
  "ticket_num": 51,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2013-02-12 16:20:25"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "With PGI v13.1, a warning is issued from the linker when building our shared library:\r\n\r\n/usr/bin/ld: /opt/pgi/linux86-64/13.1/lib/libstdz.a\\(collate.o\\): relocation R\\_X86\\_64\\_32S against \\`\\_\\_vtbl\\_\\_Q2\\_3std16collate\\_\\_tm\\_\\_2\\_c' can not be used when making a shared object; recompile with -fPIC\r\n/opt/pgi/linux86-64/13.1/lib/libstdz.a: could not read symbols: Bad value\r\n\r\nThe linker does find libstdz.so, so the above is just a warning.\r\n\r\nA bug report has been sent to PGI.",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "PGI 13.1 warning when building shared lib",
  "discussion_thread": {
    "_id": "1a577046",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2013-02-12 16:23:41",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33532718463761fc2443",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/1a577046/",
  "ticket_num": 52,
  "custom_fields": {
    "_priority": "3"
  },
  "created_date": "2013-02-12 16:23:41"
},{
  "status": "open",
  "reported_by_id": "4cbbf7fd1be1ce0df40000cb",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "platipodium",
  "description": "The current mpich2 stable release \\(3.0.2\\) is defective, insofar as it does not declare the symbol MPIU\\_Exit in the shared library libmpich.so.  Using a lower version \\(i.e. mpich2.1.5rc\\) or a recent snapshot \\(i.e. mpich3-74\\) has this issue fixed.",
  "labels": [],
  "assigned_to": null,
  "assigned_to_id": null,
  "private": false,
  "summary": "MPIU_Exit: symbol not found",
  "discussion_thread": {
    "_id": "eeadc7f7",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2013-03-12 17:13:04",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33532718463761fc244a",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/eeadc7f7/",
  "ticket_num": 53,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2013-03-12 17:13:04"
},{
  "status": "open",
  "reported_by_id": "4d6d7e37b9363c1634000734",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "theurich",
  "description": "It seems that Cray has broken the mixed language linking feature of the PGI compiler again with module xt-asyncpe/5.17 \\(which is now default on Titan\\). This happened before, see ticket \\#3313972. The symptom is this during linking:\r\n\r\ntheurich/MixRepro&gt; CC -c mixSub.C\r\ntheurich/MixRepro&gt; ftn mixMain.f90 mixSub.o -pgcpplibs\r\nmixMain.f90:\r\n/opt/pgi/12.10.0/linux86-64/12.10/lib/libCmpz.a\\(eh\\_util.o\\): In function \\`std::uncaught\\_exception\\(void\\)':\r\neh\\_util.c:\\(.text+0x307\\): undefined reference to \\`\\_\\_zceh\\_uncaught\\_exception'\r\n/usr/bin/ld: link errors found, deleting executable \\`a.out'\r\n\r\nI used the same reproducer as I did under  \\#3313972 to test this today on Titan. I am contacting Valentine at ORNL now to alert him to the issue.\r\n\r\n\\*gjt\\*",
  "labels": [],
  "assigned_to": "theurich",
  "assigned_to_id": "4d6d7e37b9363c1634000734",
  "private": false,
  "summary": "PGI linking issue with xt-asyncpe/5.17 on Cray",
  "discussion_thread": {
    "_id": "22fa190d",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2013-03-15 19:20:42",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33542718463761fc2451",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/22fa190d/",
  "ticket_num": 54,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2013-03-15 19:20:42"
},{
  "status": "open",
  "reported_by_id": "4fec89a80594ca1fde000006",
  "related_artifacts": [],
  "attachments": [],
  "reported_by": "w6ws",
  "description": "In file netcdf4\\_constants.f90, a kind value of 8 is used which will not work with NAGs default kind values.  At line 30, the code should be changed from:\r\n\r\ninteger \\(kind = EightByteInt\\),  parameter, public :: &\r\nnf90\\_fill\\_uint   = 4294967295\\_8\r\n\r\nTo:\r\n\r\ninteger \\(kind = EightByteInt\\),  parameter, public :: &\r\nnf90\\_fill\\_uint   = 4294967295\\_EightByteInt\r\n\r\nThis bug is also present in the netcdf-fortran-4.4-beta1 tar.  Reported on the netcdf email list on 4/18/2013.\r\n",
  "labels": [],
  "assigned_to": "w6ws",
  "assigned_to_id": "4fec89a80594ca1fde000006",
  "private": false,
  "summary": "netcdf/NAG bug",
  "discussion_thread": {
    "_id": "8d1fb7d8",
    "posts": [],
    "discussion_id": "519d32ae2718463761fc1fbf",
    "subject": ""
  },
  "mod_date": "2013-04-22 14:32:37",
  "votes_down": 0,
  "votes_up": 0,
  "_id": "519d33552718463761fc2458",
  "discussion_thread_url": "http://sourceforge.net/rest/p/esmf/vendor-bugs/_discuss/thread/8d1fb7d8/",
  "ticket_num": 55,
  "custom_fields": {
    "_priority": "5"
  },
  "created_date": "2013-04-22 14:32:37"
}],
"tracker_config":{
  "_id": "519d32ae2718463761fc1fbd",
  "options": {
    "ordinal": 14,
    "import_id": "tracker/1020120",
    "mount_point": "vendor-bugs",
    "TicketMonitoringType": "AllTicketChanges",
    "TicketHelpNew": "",
    "EnableVoting": false,
    "TicketHelpSearch": "",
    "TicketMonitoringEmail": "esmf_support@list.woc.noaa.gov",
    "mount_label": "Vendor Bugs"
  }
},
"milestones":[],
"custom_fields":[
  {
    "milestones": [],
    "type": "milestone",
    "name": "_milestone",
    "label": "Group"
  },
  {
    "type": "select",
    "label": "Priority",
    "show_in_search": true,
    "options": "1 2 3 4 *5 6 7 8 9",
    "name": "_priority"
  }
],
"open_status_names":"open unread accepted pending open-duplicate pending-fixed",
"closed_status_names":"closed wont-fix closed-fixed closed-works-for-me",
"saved_bins":[
  {
    "sort": "",
    "_id": "5230e5ab9095477177bdfe4c",
    "terms": "*:*",
    "summary": "All"
  }
]}